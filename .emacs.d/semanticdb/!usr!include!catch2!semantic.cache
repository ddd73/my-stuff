;; Object semanticdb-project-database-file-155655e74066
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-155655e74066"
  :tables
  (list
    (semanticdb-table "semanticdb-table-155655e5770e"
      :major-mode c++-mode
      :tags 
        '( ("TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED" variable (:constant-flag t) nil [499 545])
            ("CATCH_VERSION_MAJOR" variable (:constant-flag t) nil [575 594])
            ("CATCH_VERSION_MINOR" variable (:constant-flag t) nil [605 624])
            ("CATCH_VERSION_PATCH" variable (:constant-flag t) nil [636 655])
            ("CATCH_PLATFORM_LINUX" variable (:constant-flag t) nil [2741 2761])
            ("Catch" type
               (:members 
                  ( ("rngSeed" function
                       (:prototype-flag t
                        :type "unsigned int")
                        (reparse-symbol namespacesubparts) [3127 3150]))                  
                :type "namespace")
                nil [3105 3152])
            ("CATCH_CPP14_OR_GREATER" variable (:constant-flag t) nil [4137 4159])
            ("CATCH_CPP17_OR_GREATER" variable (:constant-flag t) nil [4263 4285])
            ("CATCH_INTERNAL_START_WARNINGS_SUPPRESSION" variable (:constant-flag t) nil [4550 4591])
            ("CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION" variable (:constant-flag t) nil [4637 4677])
            ("CATCH_INTERNAL_IGNORE_BUT_WARN" variable (:constant-flag t) nil [4724 4754])
            ("CATCH_INTERNAL_CONFIG_POSIX_SIGNALS" variable (:constant-flag t) nil [6680 6715])
            ("CATCH_INTERNAL_CONFIG_EXCEPTIONS_ENABLED" variable (:constant-flag t) nil [10051 10091])
            ("CATCH_INTERNAL_CONFIG_COUNTER" variable (:constant-flag t) nil [10877 10906])
            ("CATCH_CONFIG_COUNTER" variable (:constant-flag t) nil [13310 13330])
            ("CATCH_CONFIG_POSIX_SIGNALS" variable (:constant-flag t) nil [13857 13883])
            ("CATCH_CONFIG_WCHAR" variable (:constant-flag t) nil [14124 14142])
            ("CATCH_CONFIG_CPP11_TO_STRING" variable (:constant-flag t) nil [14305 14333])
            ("CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS" variable (:constant-flag t) nil [16716 16760])
            ("CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS" variable (:constant-flag t) nil [16834 16874])
            ("CATCH_INTERNAL_SUPPRESS_UNUSED_WARNINGS" variable (:constant-flag t) nil [16947 16986])
            ("CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS" variable (:constant-flag t) nil [17066 17112])
            ("CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS" variable (:constant-flag t) nil [17681 17729])
            ("CATCH_TRY" variable (:constant-flag t) nil [17908 17917])
            ("CATCH_CATCH_ALL" variable (:constant-flag t) nil [17930 17945])
            ("CATCH_CATCH_ANON" variable (:constant-flag t) nil [17966 17982])
            ("INTERNAL_CATCH_UNIQUE_NAME_LINE2" variable (:constant-flag t) nil [18294 18326])
            ("INTERNAL_CATCH_UNIQUE_NAME_LINE" variable (:constant-flag t) nil [18360 18391])
            ("INTERNAL_CATCH_UNIQUE_NAME" variable (:constant-flag t) nil [18491 18517])
            ("iosfwd" include (:system-flag t) nil [18688 18705])
            ("string" include (:system-flag t) nil [18706 18723])
            ("cstdint" include (:system-flag t) nil [18724 18742])
            ("Catch_global_namespace_dummy" type (:type "struct") nil [18827 18866])
            ("<<" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("" variable
                       (:reference 1
                        :type ("std::ostream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18892 18906])
                    ("" variable (:type ("Catch_global_namespace_dummy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18907 18936]))                  
                :type ("std::ostream" type (:type "class") nil nil))
                nil [18867 18937])
            ("Catch" type
               (:members 
                  ( ("CaseSensitive" type
                       (:members 
                          ( ("Choice" type
                               (:members 
                                  ( ("Yes" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [19007 19011])
                                    ("No" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [19020 19028]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [18985 19029]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [18962 19032])
                    ("NonCopyable" type
                       (:members 
                          ( ("protected" label nil (reparse-symbol classsubparts) [19323 19333])
                            ("NonCopyable" function
                               (:prototype-flag t
                                :constructor-flag t
                                :type ("NonCopyable" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [19342 19356])
                            ("NonCopyable" function
                               (:prototype-flag t
                                :destructor-flag t
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [19365 19388]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [19038 19395])
                    ("SourceLineInfo" type
                       (:members 
                          ( ("file" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable (:type ("_file" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19551 19558]))                                  
                                :type ("SourceLineInfo" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [19545 19596])
                            ("noexcept" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [20024 20039])
                            ("noexcept" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [20096 20111])
                            ("file" variable
                               (:pointer 1
                                :type "char")
                                (reparse-symbol classsubparts) [20121 20138])
                            ("line" variable (:type ("std::size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20147 20164]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [19401 20171])
                    ("<<" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("os" variable
                               (:reference 1
                                :type ("std::ostream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [20205 20222])
                            ("info" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SourceLineInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [20223 20251]))                          
                        :type ("std::ostream" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [20177 20252])
                    ("StreamEndStop" type
                       (:members 
                          ( ("+" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :operator-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [20628 20658]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [20597 20665])
                    ("+" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("T" type (:type "class") nil nil)
                        :arguments 
                          ( ("value" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [20717 20732])
                            ("" variable (:type ("StreamEndStop" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20733 20748]))                          
                        :operator-flag t)
                        (reparse-symbol namespacesubparts) [20670 20778]))                  
                :type "namespace")
                nil [18939 20780])
            ("CATCH_INTERNAL_LINEINFO" variable (:constant-flag t) nil [20790 20813])
            ("Catch" type
               (:members 
                  ( ("RegistrarForTagAliases" type
                       (:members 
                          ( ("RegistrarForTagAliases" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("alias" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [21004 21022])
                                    ("tag" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [21023 21039])
                                    ("lineInfo" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SourceLineInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [21040 21072]))                                  
                                :type ("RegistrarForTagAliases" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [20980 21073]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [20940 21080]))                  
                :type "namespace")
                nil [20917 21083])
            ("CATCH_REGISTER_TAG_ALIAS" variable (:constant-flag t) nil [21116 21140])
            ("vector" include (:system-flag t) nil [21549 21566])
            ("Catch" type
               (:members 
                  ( ("TestSpec" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [21591 21606])
                    ("ITestInvoker" type
                       (:members 
                          ( ("invoke" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [21642 21675])
                            ("ITestInvoker" function
                               (:prototype-flag t
                                :destructor-flag t
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [21684 21708]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [21612 21715])
                    ("TestCase" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [21721 21736])
                    ("IConfig" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [21741 21756])
                    ("ITestCaseRegistry" type
                       (:members 
                          ( ("ITestCaseRegistry" function
                               (:prototype-flag t
                                :destructor-flag t
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [21797 21826])
                            ("getAllTests" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("TestCase" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [21835 21896])
                            ("getAllTestsSorted" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("config" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("IConfig" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [21961 21984]))                                  
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("TestCase" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [21905 21995]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [21762 22002])
                    ("isThrowSafe" function
                       (:prototype-flag t
                        :arguments 
                          ( ("testCase" variable
                               (:reference 1
                                :constant-flag t
                                :type ("TestCase" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [22026 22051])
                            ("config" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IConfig" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [22052 22075]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [22008 22076])
                    ("matchTest" function
                       (:prototype-flag t
                        :arguments 
                          ( ("testCase" variable
                               (:reference 1
                                :constant-flag t
                                :type ("TestCase" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [22097 22122])
                            ("testSpec" variable
                               (:reference 1
                                :constant-flag t
                                :type ("TestSpec" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [22123 22148])
                            ("config" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IConfig" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [22149 22172]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [22081 22173])
                    ("filterTests" function
                       (:prototype-flag t
                        :arguments 
                          ( ("testCases" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("TestCase" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [22213 22252])
                            ("testSpec" variable
                               (:reference 1
                                :constant-flag t
                                :type ("TestSpec" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [22253 22278])
                            ("config" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IConfig" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [22279 22302]))                          
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("TestCase" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [22178 22303])
                    ("getAllTestCasesSorted" function
                       (:prototype-flag t
                        :arguments 
                          ( ("config" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IConfig" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [22360 22383]))                          
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("TestCase" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [22308 22384]))                  
                :type "namespace")
                nil [21568 22387])
            ("cstddef" include (:system-flag t) nil [22452 22470])
            ("string" include (:system-flag t) nil [22471 22488])
            ("iosfwd" include (:system-flag t) nil [22489 22506])
            ("cassert" include (:system-flag t) nil [22507 22525])
            ("Catch" type
               (:members 
                  ( ("StringRef" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [22768 22775])
                            ("std::size_t" variable (:type "int") (reparse-symbol classsubparts) [22802 22814])
                            ("private" label nil (reparse-symbol classsubparts) [22864 22872])
                            ("s_empty" variable
                               (:pointer 1
                                :default-value "\"\""
                                :type "char")
                                (reparse-symbol classsubparts) [22898 22929])
                            ("m_start" variable
                               (:pointer 1
                                :default-value "s_empty"
                                :type "char")
                                (reparse-symbol classsubparts) [22939 22969])
                            ("m_size" variable
                               (:default-value "0"
                                :type ("size_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [22978 22999])
                            ("public" label nil (reparse-symbol classsubparts) [23005 23012])
                            ("noexcept" variable (:type "int") (reparse-symbol classsubparts) [23122 23131])
                            ("m_start" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable (:type ("rawChars" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23231 23241]))                                  
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [23222 23280])
                            ("m_start" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable (:type ("stdString" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23362 23372])
                                    ("" variable (:type ("c_str" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23372 23379]))                                  
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [23353 23432])
                            ("string" function
                               (:methodconst-flag t
                                :parent "std"
                                :type "int")
                                (reparse-symbol classsubparts) [23460 23540])
                            ("public" label nil (reparse-symbol classsubparts) [23546 23553])
                            ("public" label nil (reparse-symbol classsubparts) [23922 23929])
                            ("public" label nil (reparse-symbol classsubparts) [24318 24325])
                            ("StringRef" variable (:type "int") (reparse-symbol classsubparts) [24624 24634])
                            ("public" label nil (reparse-symbol classsubparts) [24888 24895])
                            ("begin" function
                               (:methodconst-flag t
                                :type ("const_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [24927 24975])
                            ("end" function
                               (:methodconst-flag t
                                :type ("const_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [24994 25049]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [22746 25056]))                  
                :type "namespace")
                nil [22527 25372])
            ("CATCH_RECURSION_LEVEL0" variable (:constant-flag t) nil [25620 25642])
            ("CATCH_RECURSION_LEVEL1" variable (:constant-flag t) nil [25668 25690])
            ("CATCH_RECURSION_LEVEL2" variable (:constant-flag t) nil [25788 25810])
            ("CATCH_RECURSION_LEVEL3" variable (:constant-flag t) nil [25908 25930])
            ("CATCH_RECURSION_LEVEL4" variable (:constant-flag t) nil [26028 26050])
            ("CATCH_RECURSION_LEVEL5" variable (:constant-flag t) nil [26148 26170])
            ("CATCH_RECURSE" variable (:constant-flag t) nil [26617 26630])
            ("CATCH_REC_END" variable (:constant-flag t) nil [26689 26702])
            ("CATCH_REC_OUT" variable (:constant-flag t) nil [26716 26729])
            ("CATCH_EMPTY" variable (:constant-flag t) nil [26739 26750])
            ("CATCH_DEFER" variable (:constant-flag t) nil [26761 26772])
            ("CATCH_REC_GET_END2" variable (:constant-flag t) nil [26803 26821])
            ("CATCH_REC_GET_END1" variable (:constant-flag t) nil [26849 26867])
            ("CATCH_REC_GET_END" variable (:constant-flag t) nil [26900 26917])
            ("CATCH_REC_NEXT0" variable (:constant-flag t) nil [26950 26965])
            ("CATCH_REC_NEXT1" variable (:constant-flag t) nil [27010 27025])
            ("CATCH_REC_NEXT" variable (:constant-flag t) nil [27095 27109])
            ("CATCH_REC_LIST0" variable (:constant-flag t) nil [27178 27193])
            ("CATCH_REC_LIST1" variable (:constant-flag t) nil [27305 27320])
            ("CATCH_REC_LIST2" variable (:constant-flag t) nil [27432 27447])
            ("CATCH_REC_LIST0_UD" variable (:constant-flag t) nil [27560 27578])
            ("CATCH_REC_LIST1_UD" variable (:constant-flag t) nil [27723 27741])
            ("CATCH_REC_LIST2_UD" variable (:constant-flag t) nil [27886 27904])
            ("CATCH_REC_LIST_UD" variable (:constant-flag t) nil [28303 28320])
            ("CATCH_REC_LIST" variable (:constant-flag t) nil [28435 28449])
            ("INTERNAL_CATCH_EXPAND1" variable (:constant-flag t) nil [28541 28563])
            ("INTERNAL_CATCH_EXPAND2" variable (:constant-flag t) nil [28609 28631])
            ("INTERNAL_CATCH_DEF" variable (:constant-flag t) nil [28677 28695])
            ("INTERNAL_CATCH_NOINTERNAL_CATCH_DEF" variable (:constant-flag t) nil [28740 28775])
            ("INTERNAL_CATCH_STRINGIZE" variable (:constant-flag t) nil [28784 28808])
            ("INTERNAL_CATCH_STRINGIZE2" variable (:constant-flag t) nil [28912 28937])
            ("INTERNAL_CATCH_STRINGIZE_WITHOUT_PARENS" variable (:constant-flag t) nil [28964 29003])
            ("INTERNAL_CATCH_MAKE_NAMESPACE2" variable (:constant-flag t) nil [29454 29484])
            ("INTERNAL_CATCH_MAKE_NAMESPACE" variable (:constant-flag t) nil [29515 29544])
            ("INTERNAL_CATCH_REMOVE_PARENS" variable (:constant-flag t) nil [29597 29625])
            ("INTERNAL_CATCH_MAKE_TYPE_LIST2" variable (:constant-flag t) nil [29746 29776])
            ("INTERNAL_CATCH_MAKE_TYPE_LIST" variable (:constant-flag t) nil [29861 29890])
            ("INTERNAL_CATCH_MAKE_TYPE_LISTS_FROM_TYPES" variable (:constant-flag t) nil [30282 30323])
            ("INTERNAL_CATCH_REMOVE_PARENS_1_ARG" variable (:constant-flag t) nil [30401 30435])
            ("INTERNAL_CATCH_REMOVE_PARENS_2_ARG" variable (:constant-flag t) nil [30481 30515])
            ("INTERNAL_CATCH_REMOVE_PARENS_3_ARG" variable (:constant-flag t) nil [30605 30639])
            ("INTERNAL_CATCH_REMOVE_PARENS_4_ARG" variable (:constant-flag t) nil [30737 30771])
            ("INTERNAL_CATCH_REMOVE_PARENS_5_ARG" variable (:constant-flag t) nil [30877 30911])
            ("INTERNAL_CATCH_REMOVE_PARENS_6_ARG" variable (:constant-flag t) nil [31025 31059])
            ("INTERNAL_CATCH_REMOVE_PARENS_7_ARG" variable (:constant-flag t) nil [31181 31215])
            ("INTERNAL_CATCH_REMOVE_PARENS_8_ARG" variable (:constant-flag t) nil [31345 31379])
            ("INTERNAL_CATCH_REMOVE_PARENS_9_ARG" variable (:constant-flag t) nil [31517 31551])
            ("INTERNAL_CATCH_REMOVE_PARENS_10_ARG" variable (:constant-flag t) nil [31697 31732])
            ("INTERNAL_CATCH_REMOVE_PARENS_11_ARG" variable (:constant-flag t) nil [31886 31921])
            ("INTERNAL_CATCH_VA_NARGS_IMPL" variable (:constant-flag t) nil [32087 32115])
            ("INTERNAL_CATCH_TYPE_GEN" variable (:constant-flag t) nil [32180 32203])
            ("INTERNAL_CATCH_NTTP_1" variable (:constant-flag t) nil [34383 34404])
            ("INTERNAL_CATCH_DECLARE_SIG_TEST0" variable (:constant-flag t) nil [35995 36027])
            ("INTERNAL_CATCH_DECLARE_SIG_TEST1" variable (:constant-flag t) nil [36046 36078])
            ("INTERNAL_CATCH_DECLARE_SIG_TEST_X" variable (:constant-flag t) nil [36191 36224])
            ("INTERNAL_CATCH_DEFINE_SIG_TEST0" variable (:constant-flag t) nil [36343 36374])
            ("INTERNAL_CATCH_DEFINE_SIG_TEST1" variable (:constant-flag t) nil [36393 36424])
            ("INTERNAL_CATCH_DEFINE_SIG_TEST_X" variable (:constant-flag t) nil [36537 36569])
            ("INTERNAL_CATCH_NTTP_REGISTER0" variable (:constant-flag t) nil [36687 36716])
            ("INTERNAL_CATCH_NTTP_REGISTER" variable (:constant-flag t) nil [36982 37010])
            ("INTERNAL_CATCH_NTTP_REGISTER_METHOD0" variable (:constant-flag t) nil [37317 37353])
            ("INTERNAL_CATCH_NTTP_REGISTER_METHOD" variable (:constant-flag t) nil [37649 37684])
            ("INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD0" variable (:constant-flag t) nil [38016 38055])
            ("INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD1" variable (:constant-flag t) nil [38085 38124])
            ("INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD_X" variable (:constant-flag t) nil [38305 38345])
            ("INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD0" variable (:constant-flag t) nil [38556 38594])
            ("INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD1" variable (:constant-flag t) nil [38613 38651])
            ("INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD_X" variable (:constant-flag t) nil [38793 38832])
            ("INTERNAL_CATCH_NTTP_0" variable (:constant-flag t) nil [39056 39077])
            ("INTERNAL_CATCH_NTTP_GEN" variable (:constant-flag t) nil [39086 39109])
            ("INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD" variable (:constant-flag t) nil [39552 39589])
            ("INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD" variable (:constant-flag t) nil [40134 40172])
            ("INTERNAL_CATCH_NTTP_REG_METHOD_GEN" variable (:constant-flag t) nil [40750 40784])
            ("INTERNAL_CATCH_NTTP_REG_GEN" variable (:constant-flag t) nil [41292 41319])
            ("INTERNAL_CATCH_DEFINE_SIG_TEST" variable (:constant-flag t) nil [41750 41780])
            ("INTERNAL_CATCH_DECLARE_SIG_TEST" variable (:constant-flag t) nil [42249 42280])
            ("INTERNAL_CATCH_REMOVE_PARENS_GEN" variable (:constant-flag t) nil [42758 42790])
            ("type_traits" include (:system-flag t) nil [47622 47644])
            ("Catch" type
               (:members 
                  ( ("always_false" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "struct"
                        :superclasses 
                          ( ("std::false_type" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [47668 47734])
                    ("true_given" type
                       (:superclasses 
                          ( ("std::true_type" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [47760 47798])
                    ("is_callable_tester" type
                       (:members 
                          ( ("test" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [47968 47972]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [47956 47973])
                            ("test" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [48041 48045]))                                  
                                :type ("std::false_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [48013 48046]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [47803 48053])
                    ("is_callable" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "struct"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [48059 48104])
                    ("decltype" function
                       (:arguments 
                          ( ("" variable (:type ("is_callable_tester::test" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48200 48225])
                            ("" variable (:type ("Fun" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48225 48229])
                            ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48230 48235]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [48191 48245])
                    ("type" variable (:type "int") (reparse-symbol namespacesubparts) [48840 48845]))                  
                :type "namespace")
                nil [47646 48855])
            ("mpl_" type
               (:members 
                  ( ("na" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [48896 48906]))                  
                :type "namespace")
                nil [48876 48908])
            ("Catch" type
               (:members 
                  ( ("TestInvokerAsMethod" type
                       (:template 
                          ( ("C" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [49055 49062])
                            ("m_testAsMethod" function
                               (:arguments 
                                  ( ("" variable (:type ("testAsMethod" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49143 49157]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [49127 49160]))                          
                        :superclasses 
                          ( ("ITestInvoker" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [48951 49253])
                    ("NameAndTags" type
                       (:members 
                          ( ("noexcept" variable (:type "int") (reparse-symbol classsubparts) [49617 49626])
                            ("name" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol classsubparts) [49631 49646])
                            ("tags" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol classsubparts) [49651 49666]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [49502 49669])
                    ("AutoReg" type
                       (:superclasses 
                          ( ("NonCopyable" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("noexcept" variable (:type "int") (reparse-symbol classsubparts) [49835 49844])
                            ("AutoReg" function
                               (:prototype-flag t
                                :destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [49849 49860]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [49671 49863]))                  
                :type "namespace")
                nil [48932 49866])
            ("INTERNAL_CATCH_TESTCASE2" variable (:constant-flag t) nil [54758 54782])
            ("INTERNAL_CATCH_TESTCASE" variable (:constant-flag t) nil [55248 55271])
            ("INTERNAL_CATCH_METHOD_AS_TEST_CASE" variable (:constant-flag t) nil [55476 55510])
            ("INTERNAL_CATCH_TEST_CASE_METHOD2" variable (:constant-flag t) nil [56010 56042])
            ("INTERNAL_CATCH_TEST_CASE_METHOD" variable (:constant-flag t) nil [56628 56659])
            ("INTERNAL_CATCH_REGISTER_TESTCASE" variable (:constant-flag t) nil [56894 56926])
            ("INTERNAL_CATCH_TEMPLATE_TEST_CASE_2" variable (:constant-flag t) nil [57396 57431])
            ("INTERNAL_CATCH_TEMPLATE_TEST_CASE" variable (:constant-flag t) nil [59043 59076])
            ("INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG" variable (:constant-flag t) nil [59729 59766])
            ("INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE2" variable (:constant-flag t) nil [60378 60420])
            ("INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE" variable (:constant-flag t) nil [63364 63405])
            ("INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG" variable (:constant-flag t) nil [64061 64106])
            ("INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_2" variable (:constant-flag t) nil [64736 64776])
            ("INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE" variable (:constant-flag t) nil [66522 66560])
            ("INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_2" variable (:constant-flag t) nil [66811 66853])
            ("INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD" variable (:constant-flag t) nil [68557 68597])
            ("INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG" variable (:constant-flag t) nil [69309 69353])
            ("INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_2" variable (:constant-flag t) nil [70040 70090])
            ("INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD" variable (:constant-flag t) nil [72359 72407])
            ("INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG" variable (:constant-flag t) nil [73136 73188])
            ("INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_METHOD_2" variable (:constant-flag t) nil [73890 73937])
            ("INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_METHOD" variable (:constant-flag t) nil [75373 75418])
            ("Catch" type
               (:members 
                  ( ("ResultWas" type
                       (:members 
                          ( ("OfType" type
                               (:members 
                                  ( ("Unknown" variable
                                       (:constant-flag t
                                        :default-value (75944 75946)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [75934 75946])
                                    ("Ok" variable
                                       (:constant-flag t
                                        :default-value (75961 75962)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [75956 75962])
                                    ("Info" variable
                                       (:constant-flag t
                                        :default-value (75979 75980)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [75972 75980])
                                    ("Warning" variable
                                       (:constant-flag t
                                        :default-value (76000 76001)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [75990 76001])
                                    ("FailureBit" variable
                                       (:constant-flag t
                                        :default-value (76025 76029)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [76012 76029])
                                    ("ExpressionFailed" variable
                                       (:constant-flag t
                                        :default-value (76059 76073)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [76040 76073])
                                    ("ExplicitFailure" variable
                                       (:constant-flag t
                                        :default-value (76101 76115)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [76083 76115])
                                    ("Exception" variable
                                       (:constant-flag t
                                        :default-value (76138 76156)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [76126 76156])
                                    ("ThrewException" variable
                                       (:constant-flag t
                                        :default-value (76184 76197)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [76167 76197])
                                    ("DidntThrowException" variable
                                       (:constant-flag t
                                        :default-value (76229 76242)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [76207 76242])
                                    ("FatalErrorCondition" variable
                                       (:constant-flag t
                                        :default-value (76275 76293)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [76253 76293]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [75912 76301]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [75893 76304])
                    ("isOk" function
                       (:prototype-flag t
                        :arguments 
                          ( ("resultType" variable (:type ("ResultWas::OfType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76321 76351]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [76310 76352])
                    ("isJustInfo" function
                       (:prototype-flag t
                        :arguments 
                          ( ("flags" variable (:type "int") (reparse-symbol arg-sub-list) [76374 76385]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [76357 76386])
                    ("ResultDisposition" type
                       (:members 
                          ( ("Flags" type
                               (:members 
                                  ( ("Normal" variable
                                       (:constant-flag t
                                        :default-value (76486 76490)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [76477 76490])
                                    ("ContinueOnFailure" variable
                                       (:constant-flag t
                                        :default-value (76521 76525)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [76501 76525])
                                    ("FalseTest" variable
                                       (:constant-flag t
                                        :default-value (76596 76600)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [76584 76600])
                                    ("SuppressFail" variable
                                       (:constant-flag t
                                        :default-value (76663 76667)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [76648 76667]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [76456 76732]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [76429 76735])
                    ("|" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("lhs" variable (:type ("ResultDisposition::Flags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76779 76808])
                            ("rhs" variable (:type ("ResultDisposition::Flags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76809 76839]))                          
                        :type ("ResultDisposition::Flags" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [76741 76840])
                    ("shouldContinueOnFailure" function
                       (:prototype-flag t
                        :arguments 
                          ( ("flags" variable (:type "int") (reparse-symbol arg-sub-list) [76876 76887]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [76846 76888])
                    ("isFalseTest" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("flags" variable (:type "int") (reparse-symbol arg-sub-list) [76918 76929]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [76893 76987])
                    ("shouldSuppressFailure" function
                       (:prototype-flag t
                        :arguments 
                          ( ("flags" variable (:type "int") (reparse-symbol arg-sub-list) [77020 77031]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [76992 77032]))                  
                :type "namespace")
                nil [75840 77035])
            ("Catch" type
               (:members 
                  ( ("AssertionInfo" type
                       (:members 
                          ( ("macroName" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol classsubparts) [77145 77165])
                            ("lineInfo" variable (:type ("SourceLineInfo" type (:type "class") nil nil)) (reparse-symbol classsubparts) [77174 77198])
                            ("capturedExpression" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol classsubparts) [77207 77236])
                            ("resultDisposition" variable (:type ("ResultDisposition::Flags" type (:type "class") nil nil)) (reparse-symbol classsubparts) [77245 77288]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [77110 77465]))                  
                :type "namespace")
                nil [77087 77468])
            ("vector" include (:system-flag t) nil [77578 77595])
            ("cstddef" include (:system-flag t) nil [77596 77614])
            ("type_traits" include (:system-flag t) nil [77615 77637])
            ("string" include (:system-flag t) nil [77638 77655])
            ("iosfwd" include (:system-flag t) nil [77681 77698])
            ("cstddef" include (:system-flag t) nil [77699 77717])
            ("ostream" include (:system-flag t) nil [77718 77736])
            ("Catch" type
               (:members 
                  ( ("cout" function
                       (:prototype-flag t
                        :type ("std::ostream" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [77761 77782])
                    ("cerr" function
                       (:prototype-flag t
                        :type ("std::ostream" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [77787 77808])
                    ("clog" function
                       (:prototype-flag t
                        :type ("std::ostream" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [77813 77834])
                    ("StringRef" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [77840 77856])
                    ("IStream" type
                       (:members 
                          ( ("IStream" function
                               (:prototype-flag t
                                :destructor-flag t
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [77887 77906])
                            ("stream" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type ("std::ostream" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [77915 77956]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [77862 77963])
                    ("ReusableStringStream" type
                       (:superclasses 
                          ( ("NonCopyable" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("m_index" variable (:type ("std::size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [78089 78109])
                            ("m_oss" variable
                               (:pointer 1
                                :type ("std::ostream" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [78118 78138])
                            ("public" label nil (reparse-symbol classsubparts) [78143 78150])
                            ("ReusableStringStream" function
                               (:prototype-flag t
                                :constructor-flag t
                                :type ("ReusableStringStream" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [78159 78182])
                            ("ReusableStringStream" function
                               (:prototype-flag t
                                :destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [78191 78215])
                            ("std::string" variable (:type "int") (reparse-symbol classsubparts) [78245 78257]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [78038 78485]))                  
                :type "namespace")
                nil [77738 78487])
            ("vector" include (:system-flag t) nil [78561 78578])
            ("Catch" type
               (:members 
                  ( ("Detail" type
                       (:members 
                          ( ("EnumInfo" type
                               (:members 
                                  ( ("m_name" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol classsubparts) [78660 78677])
                                    ("m_values" variable (:type ("std::vector" type
                                         (:template-specifier 
                                            ( ("std::pair" type (:template-specifier 
                                                ( ("int" type nil nil nil)
                                                  ("StringRef" type nil nil nil))                                                ) nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [78690 78738])
                                    ("EnumInfo" function
                                       (:prototype-flag t
                                        :destructor-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [78752 78764])
                                    ("lookup" function
                                       (:prototype-flag t
                                        :methodconst-flag t
                                        :arguments 
                                          ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [78796 78807]))                                          
                                        :type ("StringRef" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [78778 78814]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [78630 78825]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [78603 78831])
                    ("IMutableEnumValuesRegistry" type
                       (:members 
                          ( ("IMutableEnumValuesRegistry" function
                               (:prototype-flag t
                                :destructor-flag t
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [78901 78939])
                            ("registerEnum" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("enumName" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [78995 79014])
                                    ("allEnums" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [79015 79034])
                                    ("values" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::vector" type
                                             (:template-specifier 
                                                ( ("int" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [79035 79067]))                                  
                                :type ("Detail::EnumInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [78949 79072])
                            ("registerEnum" function
                               (:template 
                                  ( ("E" type (:type "class") nil nil))                                  
                                :type ("Detail::EnumInfo" type (:type "class") nil nil)
                                :arguments 
                                  ( ("enumName" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [79149 79168])
                                    ("allEnums" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [79169 79188])
                                    ("values" variable (:type ("std::initializer_list" type
                                         (:template-specifier 
                                            ( ("E" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [79189 79222]))                                  )
                                (reparse-symbol classsubparts) [79082 79586]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [78857 79593]))                  
                :type "namespace")
                nil [78580 79596])
            ("Catch" type
               (:members 
                  ( ("Detail" type
                       (:members 
                          ( ("unprintableString" variable
                               (:typemodifiers ("extern")
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [81033 81076])
                            ("rawMemoryToString" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("object" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [81117 81136])
                                    ("size" variable (:type ("std::size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81137 81155]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [81086 81156])
                            ("rawMemoryToString" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("std::string" type (:type "class") nil nil)
                                :arguments 
                                  ( ("object" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [81226 81243]))                                  )
                                (reparse-symbol namespacesubparts) [81166 81318])
                            ("IsStreamInsertable" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("decltype" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("std::declval" type
                                                 (:template-specifier 
                                                    ( ("Stream" type (:reference 1) nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [81496 81519])
                                            ("" variable (:type ("std::declval" type
                                                 (:template-specifier 
                                                    ( ("U" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [81523 81540])
                                            ("" variable (:type ("std::true_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81542 81558]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [81487 81560])
                                    ("std::false_type" variable (:type "int") (reparse-symbol classsubparts) [81638 81654])
                                    ("public" label nil (reparse-symbol classsubparts) [81664 81671])
                                    ("value" variable (:type "int") (reparse-symbol classsubparts) [81753 81759]))                                  )
                                (reparse-symbol namespacesubparts) [81328 81770])
                            ("convertUnknownEnumToString" function
                               (:template 
                                  ( ("E" type (:type "class") nil nil))                                  
                                :type ("std::string" type (:type "class") nil nil)
                                :arguments 
                                  ( ("e" variable (:type ("E" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81849 81854]))                                  
                                :prototype-flag t)
                                (reparse-symbol namespacesubparts) [81780 81855])
                            ("convertUnstreamable" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [82050 82060]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [82024 82118])
                            ("convertUnstreamable" function
                               (:arguments 
                                  ( ("ex" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [82311 82323]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [82286 82365])
                            ("convertUnstreamable" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("std::enable_if::type" type (:type "class") nil nil)
                                :arguments 
                                  ( ("value" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [82514 82530]))                                  
                                :typemodifiers ("typename"))
                                (reparse-symbol namespacesubparts) [82375 82598]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [81005 83076])
                    ("StringMaker" type
                       (:members 
                          ( ("convert" function
                               (:arguments 
                                  ( ("value" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Fake" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [83399 83417]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [83374 83693])
                            ("convert" function
                               (:arguments 
                                  ( ("value" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Fake" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [83870 83889]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [83844 84078]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [83205 84085])
                    ("Detail" type
                       (:members 
                          ( ("stringify" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("std::string" type (:type "class") nil nil)
                                :arguments 
                                  ( ("e" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [84341 84352]))                                  )
                                (reparse-symbol namespacesubparts) [84289 84489])
                            ("convertUnknownEnumToString" function
                               (:template 
                                  ( ("E" type (:type "class") nil nil))                                  
                                :type ("std::string" type (:type "class") nil nil)
                                :arguments 
                                  ( ("e" variable (:type ("E" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [84568 84573]))                                  )
                                (reparse-symbol namespacesubparts) [84499 84688]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [84091 84862])
                    ("StringMaker" type
                       (:type "struct"
                        :members 
                          ( ("convert" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("str" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [85012 85035]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [84985 85036]))                          
                        :template-specifier 
                          ( ("std::string" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [84928 85043])
                    ("StringMaker" type
                       (:type "struct"
                        :members 
                          ( ("convert" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("str" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [85303 85320]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [85276 85321]))                          
                        :template-specifier 
                          ( ("char" type
                               (:pointer 1
                                :constant-flag t)
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [85218 85328])
                    ("StringMaker" type
                       (:type "struct"
                        :members 
                          ( ("convert" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("str" variable
                                       (:pointer 1
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [85412 85423]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [85385 85424]))                          
                        :template-specifier 
                          ( ("char" type (:pointer 1) nil nil))                          )
                        (reparse-symbol namespacesubparts) [85333 85431])
                    ("StringMaker" type
                       (:type "struct"
                        :members 
                          ( ("convert" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("wstr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::wstring" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [85548 85573]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [85521 85574]))                          
                        :template-specifier 
                          ( ("std::wstring" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [85463 85581])
                    ("StringMaker" type
                       (:type "struct"
                        :members 
                          ( ("convert" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("str" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "wchar_t")
                                        (reparse-symbol arg-sub-list) [85848 85868]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [85821 85869]))                          
                        :template-specifier 
                          ( ("wchar_t" type
                               (:pointer 1
                                :constant-flag t)
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [85760 85876])
                    ("StringMaker" type
                       (:type "struct"
                        :members 
                          ( ("convert" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("str" variable
                                       (:pointer 1
                                        :type "wchar_t")
                                        (reparse-symbol arg-sub-list) [85963 85977]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [85936 85978]))                          
                        :template-specifier 
                          ( ("wchar_t" type (:pointer 1) nil nil))                          )
                        (reparse-symbol namespacesubparts) [85881 85985])
                    ("StringMaker" type
                       (:type "struct"
                        :members 
                          ( ("convert" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("value" variable (:type "int") (reparse-symbol arg-sub-list) [87070 87080]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [87043 87081]))                          
                        :template-specifier 
                          ( ("int" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [86994 87088])
                    ("StringMaker" type
                       (:type "struct"
                        :members 
                          ( ("convert" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("value" variable (:type "long") (reparse-symbol arg-sub-list) [87170 87181]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [87143 87182]))                          
                        :template-specifier 
                          ( ("long" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [87093 87189])
                    ("StringMaker" type
                       (:type "struct"
                        :members 
                          ( ("convert" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("value" variable (:type "long long") (reparse-symbol arg-sub-list) [87276 87292]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [87249 87293]))                          
                        :template-specifier 
                          ( ("long long" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [87194 87300])
                    ("StringMaker" type
                       (:type "struct"
                        :members 
                          ( ("convert" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("value" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [87390 87409]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [87363 87410]))                          
                        :template-specifier 
                          ( ("unsigned int" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [87305 87417])
                    ("StringMaker" type
                       (:type "struct"
                        :members 
                          ( ("convert" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("value" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [87508 87528]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [87481 87529]))                          
                        :template-specifier 
                          ( ("unsigned long" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [87422 87536])
                    ("StringMaker" type
                       (:type "struct"
                        :members 
                          ( ("convert" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("value" variable (:type "unsigned long long") (reparse-symbol arg-sub-list) [87632 87657]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [87605 87658]))                          
                        :template-specifier 
                          ( ("unsigned long long" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [87541 87665])
                    ("StringMaker" type
                       (:type "struct"
                        :members 
                          ( ("convert" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("b" variable (:type "bool") (reparse-symbol arg-sub-list) [87748 87755]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [87721 87756]))                          
                        :template-specifier 
                          ( ("bool" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [87671 87763])
                    ("StringMaker" type
                       (:type "struct"
                        :members 
                          ( ("convert" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("c" variable (:type "char") (reparse-symbol arg-sub-list) [87846 87853]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [87819 87854]))                          
                        :template-specifier 
                          ( ("char" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [87769 87861])
                    ("StringMaker" type
                       (:type "struct"
                        :members 
                          ( ("convert" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("c" variable (:type "signed char") (reparse-symbol arg-sub-list) [87950 87964]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [87923 87965]))                          
                        :template-specifier 
                          ( ("signed char" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [87866 87972])
                    ("StringMaker" type
                       (:type "struct"
                        :members 
                          ( ("convert" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("c" variable (:type "unsigned char") (reparse-symbol arg-sub-list) [88063 88079]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [88036 88080]))                          
                        :template-specifier 
                          ( ("unsigned char" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [87977 88087])
                    ("StringMaker" type
                       (:type "struct"
                        :members 
                          ( ("convert" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("" variable (:type ("std::nullptr_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [88180 88195]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [88153 88196]))                          
                        :template-specifier 
                          ( ("std::nullptr_t" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [88093 88203])
                    ("StringMaker" type
                       (:type "struct"
                        :members 
                          ( ("convert" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("value" variable (:type "float") (reparse-symbol arg-sub-list) [88287 88299]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [88260 88300])
                            ("precision" variable
                               (:typemodifiers ("static")
                                :type "int")
                                (reparse-symbol classsubparts) [88309 88330]))                          
                        :template-specifier 
                          ( ("float" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [88209 88337])
                    ("StringMaker" type
                       (:type "struct"
                        :members 
                          ( ("convert" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("value" variable (:type "double") (reparse-symbol arg-sub-list) [88422 88435]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [88395 88436])
                            ("precision" variable
                               (:typemodifiers ("static")
                                :type "int")
                                (reparse-symbol classsubparts) [88445 88466]))                          
                        :template-specifier 
                          ( ("double" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [88343 88473])
                    ("StringMaker" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("convert" function
                               (:template 
                                  ( ("U" type (:type "class") nil nil))                                  
                                :type ("std::string" type (:type "class") nil nil)
                                :arguments 
                                  ( ("p" variable
                                       (:pointer 1
                                        :type ("U" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [88595 88600]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [88538 88764]))                          
                        :template-specifier 
                          ( ("T" type (:pointer 1) nil nil))                          )
                        (reparse-symbol namespacesubparts) [88479 88771])
                    ("Detail" type
                       (:members 
                          ( ("rangeToString" function
                               (:template 
                                  ( ("InputIterator" type (:type "class") nil nil)
                                    ("Sentinel" type (:type "class") nil nil))                                  
                                :type ("std::string" type (:type "class") nil nil)
                                :arguments 
                                  ( ("first" variable (:type ("InputIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [89406 89426])
                                    ("last" variable (:type ("Sentinel" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [89427 89441]))                                  )
                                (reparse-symbol namespacesubparts) [89304 89802]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [89277 89808]))                  
                :type "namespace")
                nil [80983 90473])
            ("Catch" type
               (:members 
                  ( ("std::begin" using (:type ("std::begin" type
                         (:prototype t
                          :type "class")
                          nil nil)) (reparse-symbol namespacesubparts) [94334 94351])
                    ("std::end" using (:type ("std::end" type
                         (:prototype t
                          :type "class")
                          nil nil)) (reparse-symbol namespacesubparts) [94356 94371])
                    ("detail" type
                       (:members 
                          ( ("void_type" type (:type "struct") (reparse-symbol namespacesubparts) [94435 94495])
                            ("is_range_impl" type
                               (:superclasses 
                                  ( ("std::false_type" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [94552 94603])
                            ("std::true_type" variable (:type "int") (reparse-symbol namespacesubparts) [94731 94758]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [94377 94764])
                    ("is_range" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "struct"
                        :superclasses 
                          ( ("detail::is_range_impl" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [94790 94867])
                    ("rangeToString" function
                       (:template 
                          ( ("Range" type (:type "class") nil nil))                          
                        :type ("std::string" type (:type "class") nil nil)
                        :arguments 
                          ( ("range" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Range" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [95093 95113]))                          )
                        (reparse-symbol namespacesubparts) [95037 95200])
                    ("rangeToString" function
                       (:template 
                          ( ("Allocator" type (:type "class") nil nil))                          
                        :type ("std::string" type (:type "class") nil nil)
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("bool" type nil nil nil)
                                          ("Allocator" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [95303 95342]))                          )
                        (reparse-symbol namespacesubparts) [95243 95670]))                  
                :type "namespace")
                nil [94273 96122])
            ("INTERNAL_CATCH_REGISTER_ENUM" variable (:constant-flag t) nil [99982 100010])
            ("CATCH_REGISTER_ENUM" variable (:constant-flag t) nil [100446 100465])
            ("iosfwd" include (:system-flag t) nil [100607 100624])
            ("Catch" type
               (:members 
                  ( ("ITransientExpression" type
                       (:members 
                          ( ("streamReconstructedExpression" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("os" variable
                                       (:reference 1
                                        :type ("std::ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [101297 101315]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [101253 101326])
                            ("ITransientExpression" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("isBinaryExpression" variable (:type "bool") (reparse-symbol arg-sub-list) [101358 101382])
                                    ("result" variable (:type "bool") (reparse-symbol arg-sub-list) [101383 101396]))                                  
                                :type ("ITransientExpression" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [101336 101494])
                            ("ITransientExpression" function
                               (:prototype-flag t
                                :destructor-flag t
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [101627 101659])
                            ("m_isBinaryExpression" variable (:type "bool") (reparse-symbol classsubparts) [101669 101695])
                            ("m_result" variable (:type "bool") (reparse-symbol classsubparts) [101704 101718]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [101074 101726])
                    ("formatReconstructedExpression" function
                       (:prototype-flag t
                        :arguments 
                          ( ("os" variable
                               (:reference 1
                                :type ("std::ostream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [101768 101785])
                            ("lhs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [101786 101809])
                            ("op" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [101810 101823])
                            ("rhs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [101824 101848]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [101732 101849])
                    ("BinaryExpr" type
                       (:template 
                          ( ("LhsT" type (:type "class") nil nil)
                            ("RhsT" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("m_lhs" variable (:type ("LhsT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [101956 101967])
                            ("m_op" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol classsubparts) [101976 101991])
                            ("m_rhs" variable (:type ("RhsT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [102000 102011])
                            ("public" label nil (reparse-symbol classsubparts) [102254 102261])
                            ("BinaryExpr" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("comparisonResult" variable (:type "bool") (reparse-symbol arg-sub-list) [102282 102304])
                                    ("lhs" variable (:type ("LhsT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [102305 102314])
                                    ("op" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [102315 102328])
                                    ("rhs" variable (:type ("RhsT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [102329 102339]))                                  
                                :type ("BinaryExpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [102270 102485]))                          
                        :superclasses 
                          ( ("ITransientExpression" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [101855 104986])
                    ("UnaryExpr" type
                       (:template 
                          ( ("LhsT" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("m_lhs" variable (:type ("LhsT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [105076 105087])
                            ("public" label nil (reparse-symbol classsubparts) [105237 105244])
                            ("UnaryExpr" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("lhs" variable (:type ("LhsT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [105273 105283]))                                  
                                :type ("UnaryExpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [105262 105386]))                          
                        :superclasses 
                          ( ("ITransientExpression" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [104992 105393])
                    ("ExprLhs" type
                       (:template 
                          ( ("LhsT" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("m_lhs" variable (:type ("LhsT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [106987 106998])
                            ("public" label nil (reparse-symbol classsubparts) [107003 107010])
                            ("ExprLhs" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("lhs" variable (:type ("LhsT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [107037 107047]))                                  
                                :type ("ExprLhs" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [107028 107065]))                          )
                        (reparse-symbol namespacesubparts) [106935 109878])
                    ("handleExpression" function
                       (:prototype-flag t
                        :arguments 
                          ( ("expr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("ITransientExpression" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [109907 109941]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [109884 109942])
                    ("handleExpression" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("expr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("ExprLhs" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [109996 110020]))                          )
                        (reparse-symbol namespacesubparts) [109948 110078])
                    ("Decomposer" type (:type "struct") (reparse-symbol namespacesubparts) [110084 110371]))                  
                :type "namespace")
                nil [101051 110374])
            ("string" include (:system-flag t) nil [110507 110524])
            ("chrono" include (:system-flag t) nil [110525 110542])
            ("Catch" type
               (:members 
                  ( ("AssertionResult" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [110567 110589])
                    ("AssertionInfo" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [110594 110615])
                    ("SectionInfo" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [110620 110639])
                    ("SectionEndInfo" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [110644 110666])
                    ("MessageInfo" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [110671 110690])
                    ("MessageBuilder" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [110695 110717])
                    ("Counts" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [110722 110736])
                    ("AssertionReaction" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [110741 110766])
                    ("SourceLineInfo" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [110771 110793])
                    ("ITransientExpression" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [110799 110827])
                    ("IGeneratorTracker" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [110832 110857])
                    ("IResultCapture" type
                       (:members 
                          ( ("IResultCapture" function
                               (:prototype-flag t
                                :destructor-flag t
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [111115 111141])
                            ("sectionStarted" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("sectionInfo" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SectionInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [111183 111214])
                                    ("assertions" variable
                                       (:reference 1
                                        :type ("Counts" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [111255 111275]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [111151 111280])
                            ("sectionEnded" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("endInfo" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SectionEndInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [111316 111347]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [111289 111352])
                            ("sectionEndedEarly" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("endInfo" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SectionEndInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [111393 111424]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [111361 111429])
                            ("pushScopedMessage" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("message" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MessageInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [111982 112010]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [111950 112015])
                            ("popScopedMessage" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("message" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MessageInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [112055 112083]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [112024 112088])
                            ("emplaceUnscopedMessage" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("builder" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MessageBuilder" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [112135 112166]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [112098 112171])
                            ("handleFatalErrorCondition" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("message" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [112221 112240]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [112181 112245])
                            ("handleExpr" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("info" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("AssertionInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [112299 112325])
                                    ("expr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("ITransientExpression" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [112346 112379])
                                    ("reaction" variable
                                       (:reference 1
                                        :type ("AssertionReaction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [112400 112429]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [112255 112434])
                            ("handleMessage" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("info" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("AssertionInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [112490 112516])
                                    ("resultType" variable (:type ("ResultWas::OfType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [112537 112566])
                                    ("message" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("StringRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [112587 112612])
                                    ("reaction" variable
                                       (:reference 1
                                        :type ("AssertionReaction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [112633 112662]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [112443 112667])
                            ("handleUnexpectedExceptionNotThrown" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("info" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("AssertionInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [112744 112770])
                                    ("reaction" variable
                                       (:reference 1
                                        :type ("AssertionReaction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [112791 112820]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [112676 112825])
                            ("handleUnexpectedInflightException" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("info" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("AssertionInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [112901 112927])
                                    ("message" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [112948 112975])
                                    ("reaction" variable
                                       (:reference 1
                                        :type ("AssertionReaction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [112996 113025]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [112834 113030])
                            ("handleIncomplete" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("info" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("AssertionInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [113089 113116]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [113039 113121])
                            ("handleNonExpr" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("info" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("AssertionInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [113177 113203])
                                    ("resultType" variable (:type ("ResultWas::OfType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [113224 113253])
                                    ("reaction" variable
                                       (:reference 1
                                        :type ("AssertionReaction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [113274 113303]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [113130 113308])
                            ("lastAssertionPassed" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :type "bool")
                                (reparse-symbol classsubparts) [113318 113357])
                            ("assertionPassed" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [113366 113401])
                            ("getCurrentTestName" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [113446 113497])
                            ("getLastResult" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :pointer 1
                                :typemodifiers ("virtual")
                                :constant-flag t
                                :type ("AssertionResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [113506 113563])
                            ("exceptionEarlyReported" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [113572 113614]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [111082 113621])
                    ("getResultCapture" function
                       (:prototype-flag t
                        :type ("IResultCapture" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [113627 113662]))                  
                :type "namespace")
                nil [110544 113664])
            ("Catch" type
               (:members 
                  ( ("TestFailureException" type (:type "struct") (reparse-symbol namespacesubparts) [113723 113753])
                    ("AssertionResultData" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [113758 113785])
                    ("IResultCapture" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [113790 113812])
                    ("RunContext" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [113817 113834])
                    ("LazyExpression" type
                       (:members 
                          ( ("AssertionHandler" friend nil (reparse-symbol classsubparts) [113871 113900])
                            ("AssertionStats" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol classsubparts) [113917 113939])
                            ("RunContext" friend nil (reparse-symbol classsubparts) [113948 113971])
                            ("m_transientExpression" variable
                               (:pointer 1
                                :default-value "nullptr"
                                :type ("ITransientExpression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [113982 114042])
                            ("m_isNegated" variable (:type "bool") (reparse-symbol classsubparts) [114051 114068])
                            ("public" label nil (reparse-symbol classsubparts) [114073 114080])
                            ("LazyExpression" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("isNegated" variable (:type "bool") (reparse-symbol arg-sub-list) [114105 114121]))                                  
                                :type ("LazyExpression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [114089 114122])
                            ("LazyExpression" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("LazyExpression" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [114147 114176]))                                  
                                :type ("LazyExpression" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [114131 114177]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [113840 114400])
                    ("AssertionReaction" type
                       (:members 
                          ( ("shouldDebugBreak" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol classsubparts) [114441 114471])
                            ("shouldThrow" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol classsubparts) [114480 114505]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [114406 114512])
                    ("AssertionHandler" type
                       (:members 
                          ( ("m_assertionInfo" variable (:type ("AssertionInfo" type (:type "class") nil nil)) (reparse-symbol classsubparts) [114551 114581])
                            ("m_reaction" variable (:type ("AssertionReaction" type (:type "class") nil nil)) (reparse-symbol classsubparts) [114590 114619])
                            ("m_completed" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol classsubparts) [114628 114653])
                            ("m_resultCapture" variable (:type ("IResultCapture" type (:type "class") nil nil)) (reparse-symbol classsubparts) [114662 114694])
                            ("public" label nil (reparse-symbol classsubparts) [114700 114707])
                            ("AssertionHandler" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("macroName" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("StringRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [114749 114776])
                                    ("lineInfo" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SourceLineInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [114793 114824])
                                    ("capturedExpression" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [114841 114870])
                                    ("resultDisposition" variable (:type ("ResultDisposition::Flags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [114887 114931]))                                  
                                :type ("AssertionHandler" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [114716 114932])
                            ("AssertionHandler" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [114941 115089])
                            ("handleExpr" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("expr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("ExprLhs" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [115145 115169]))                                  )
                                (reparse-symbol classsubparts) [115099 115229])
                            ("handleExpr" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("expr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("ITransientExpression" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [115255 115289]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [115238 115290])
                            ("handleMessage" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("resultType" variable (:type ("ResultWas::OfType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [115319 115348])
                                    ("message" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("StringRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [115349 115374]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [115300 115375])
                            ("handleExceptionThrownAsExpected" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [115385 115424])
                            ("handleUnexpectedExceptionNotThrown" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [115433 115475])
                            ("handleExceptionNotThrownAsExpected" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [115484 115526])
                            ("handleThrowingCallSkipped" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [115535 115568])
                            ("handleUnexpectedInflightException" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [115577 115618])
                            ("complete" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [115628 115644])
                            ("setCompleted" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [115653 115673]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [114518 115740])
                    ("handleExceptionMatchExpr" function
                       (:prototype-flag t
                        :arguments 
                          ( ("handler" variable
                               (:reference 1
                                :type ("AssertionHandler" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [115777 115803])
                            ("str" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [115804 115827])
                            ("matcherString" variable
                               (:reference 1
                                :constant-flag t
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [115828 115860]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [115746 115861]))                  
                :type "namespace")
                nil [113700 115864])
            ("string" include (:system-flag t) nil [115943 115960])
            ("vector" include (:system-flag t) nil [115961 115978])
            ("Catch" type
               (:members 
                  ( ("MessageInfo" type
                       (:members 
                          ( ("MessageInfo" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("_macroName" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("StringRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [116048 116076])
                                    ("_lineInfo" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SourceLineInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [116101 116133])
                                    ("_type" variable (:type ("ResultWas::OfType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [116158 116183]))                                  
                                :type ("MessageInfo" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [116032 116184])
                            ("macroName" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol classsubparts) [116194 116214])
                            ("message" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [116223 116243])
                            ("lineInfo" variable (:type ("SourceLineInfo" type (:type "class") nil nil)) (reparse-symbol classsubparts) [116252 116276])
                            ("type" variable (:type ("ResultWas::OfType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [116285 116308])
                            ("sequence" variable (:type "unsigned int") (reparse-symbol classsubparts) [116317 116339])
                            ("==" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MessageInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [116368 116394]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [116349 116401])
                            ("<" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MessageInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [116428 116454]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [116410 116461])
                            ("private" label nil (reparse-symbol classsubparts) [116466 116474])
                            ("globalCount" variable
                               (:typemodifiers ("static")
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [116483 116515]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [116003 116522])
                    ("MessageStream" type
                       (:members 
                          ( ("<<" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("MessageStream" type (:type "class") nil nil)
                                :arguments 
                                  ( ("value" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [116618 116634]))                                  
                                :operator-flag t)
                                (reparse-symbol classsubparts) [116560 116703])
                            ("m_stream" variable (:type ("ReusableStringStream" type (:type "class") nil nil)) (reparse-symbol classsubparts) [116713 116743]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [116528 116750])
                    ("MessageBuilder" type
                       (:superclasses 
                          ( ("MessageStream" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("MessageBuilder" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("macroName" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("StringRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [116820 116847])
                                    ("lineInfo" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SourceLineInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [116872 116903])
                                    ("type" variable (:type ("ResultWas::OfType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [116928 116952]))                                  
                                :type ("MessageBuilder" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [116804 116953])
                            ("<<" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("MessageBuilder" type (:type "class") nil nil)
                                :arguments 
                                  ( ("value" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [117022 117038]))                                  
                                :operator-flag t)
                                (reparse-symbol classsubparts) [116963 117107])
                            ("m_info" variable (:type ("MessageInfo" type (:type "class") nil nil)) (reparse-symbol classsubparts) [117117 117136]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [116756 117143])
                    ("ScopedMessage" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [117175 117182])
                            ("ScopedMessage" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("builder" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MessageBuilder" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [117215 117246]))                                  
                                :type ("ScopedMessage" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [117200 117247])
                            ("ScopedMessage" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("ScopedMessage" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [117331 117346])
                                    ("" variable (:type ("old" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [117347 117352]))                                  
                                :type ("ScopedMessage" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [117316 117353])
                            ("ScopedMessage" function
                               (:prototype-flag t
                                :destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [117362 117379])
                            ("m_info" variable (:type ("MessageInfo" type (:type "class") nil nil)) (reparse-symbol classsubparts) [117389 117408])
                            ("m_moved" variable (:type "bool") (reparse-symbol classsubparts) [117417 117430]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [117149 117437])
                    ("Capturer" type
                       (:members 
                          ( ("m_messages" variable (:type ("std::vector" type
                                 (:template-specifier 
                                    ( ("MessageInfo" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [117468 117504])
                            ("m_resultCapture" variable
                               (:default-value "getResultCapture()"
                                :type ("IResultCapture" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [117513 117566])
                            ("m_captured" variable
                               (:default-value "0"
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [117575 117597])
                            ("public" label nil (reparse-symbol classsubparts) [117602 117609])
                            ("Capturer" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("macroName" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [117628 117648])
                                    ("lineInfo" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SourceLineInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [117649 117680])
                                    ("resultType" variable (:type ("ResultWas::OfType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [117681 117710])
                                    ("names" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [117711 117728]))                                  
                                :type ("Capturer" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [117618 117729])
                            ("Capturer" function
                               (:prototype-flag t
                                :destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [117738 117750])
                            ("captureValue" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("index" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [117779 117792])
                                    ("value" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [117793 117819]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [117760 117820])
                            ("captureValues" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("index" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [117879 117892])
                                    ("value" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [117893 117909]))                                  )
                                (reparse-symbol classsubparts) [117830 117991])
                            ("captureValues" function
                               (:arguments 
                                  ( ("index" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [118066 118079])
                                    ("value" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [118080 118095])
                                    ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Ts" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [118096 118106])
                                    ("" variable (:type ("values" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [118109 118117]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [118046 118246]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [117443 118253]))                  
                :type "namespace")
                nil [115980 118256])
            ("CATCH_INTERNAL_STRINGIFY" variable (:constant-flag t) nil [118401 118425])
            ("INTERNAL_CATCH_TRY" variable (:constant-flag t) nil [118916 118934])
            ("INTERNAL_CATCH_CATCH" variable (:constant-flag t) nil [118947 118967])
            ("INTERNAL_CATCH_REACT" variable (:constant-flag t) nil [119056 119076])
            ("INTERNAL_CATCH_TEST" variable (:constant-flag t) nil [119197 119216])
            ("INTERNAL_CATCH_IF" variable (:constant-flag t) nil [120048 120065])
            ("INTERNAL_CATCH_ELSE" variable (:constant-flag t) nil [120324 120343])
            ("INTERNAL_CATCH_NO_THROW" variable (:constant-flag t) nil [120603 120626])
            ("INTERNAL_CATCH_THROWS" variable (:constant-flag t) nil [121265 121286])
            ("INTERNAL_CATCH_THROWS_AS" variable (:constant-flag t) nil [122082 122106])
            ("INTERNAL_CATCH_MSG" variable (:constant-flag t) nil [123089 123107])
            ("INTERNAL_CATCH_CAPTURE" variable (:constant-flag t) nil [123629 123651])
            ("INTERNAL_CATCH_INFO" variable (:constant-flag t) nil [123928 123947])
            ("INTERNAL_CATCH_UNSCOPED_INFO" variable (:constant-flag t) nil [124232 124260])
            ("INTERNAL_CATCH_THROWS_STR_MATCHES" variable (:constant-flag t) nil [124597 124630])
            ("cstddef" include (:system-flag t) nil [125557 125575])
            ("Catch" type
               (:members 
                  ( ("Counts" type
                       (:members 
                          ( ("-" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Counts" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [125644 125665]))                                  
                                :type ("Counts" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [125624 125672])
                            ("+=" function
                               (:prototype-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Counts" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [125703 125724]))                                  
                                :type ("Counts" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [125681 125725])
                            ("total" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("std::size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [125735 125761])
                            ("allPassed" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [125770 125793])
                            ("allOk" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [125802 125821])
                            ("passed" variable
                               (:default-value "0"
                                :type ("std::size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [125831 125854])
                            ("failed" variable
                               (:default-value "0"
                                :type ("std::size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [125863 125886])
                            ("failedButOk" variable
                               (:default-value "0"
                                :type ("std::size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [125895 125923]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [125600 125930])
                    ("Totals" type
                       (:members 
                          ( ("-" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Totals" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [125981 126002]))                                  
                                :type ("Totals" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [125961 126009])
                            ("+=" function
                               (:prototype-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Totals" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [126040 126061]))                                  
                                :type ("Totals" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [126018 126062])
                            ("delta" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("prevTotals" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Totals" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [126086 126112]))                                  
                                :type ("Totals" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [126072 126119])
                            ("error" variable
                               (:default-value "0"
                                :type "int")
                                (reparse-symbol classsubparts) [126129 126143])
                            ("assertions" variable (:type ("Counts" type (:type "class") nil nil)) (reparse-symbol classsubparts) [126152 126170])
                            ("testCases" variable (:type ("Counts" type (:type "class") nil nil)) (reparse-symbol classsubparts) [126179 126196]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [125936 126203]))                  
                :type "namespace")
                nil [125577 126205])
            ("string" include (:system-flag t) nil [126229 126246])
            ("Catch" type
               (:members 
                  ( ("SectionInfo" type
                       (:members 
                          ( ("SectionInfo" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("_lineInfo" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SourceLineInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [126328 126360])
                                    ("_name" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [126377 126403]))                                  
                                :type ("SectionInfo" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [126300 126404])
                            ("SectionInfo" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("_lineInfo" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SourceLineInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [126464 126496])
                                    ("_name" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [126513 126538])
                                    ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [126555 126575]))                                  
                                :type ("SectionInfo" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [126436 126612])
                            ("name" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [126622 126639])
                            ("description" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [126648 126672])
                            ("lineInfo" variable (:type ("SourceLineInfo" type (:type "class") nil nil)) (reparse-symbol classsubparts) [126723 126747]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [126271 126754])
                    ("SectionEndInfo" type
                       (:members 
                          ( ("sectionInfo" variable (:type ("SectionInfo" type (:type "class") nil nil)) (reparse-symbol classsubparts) [126792 126816])
                            ("prevAssertions" variable (:type ("Counts" type (:type "class") nil nil)) (reparse-symbol classsubparts) [126825 126847])
                            ("durationInSeconds" variable (:type "double") (reparse-symbol classsubparts) [126856 126881]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [126760 126888]))                  
                :type "namespace")
                nil [126248 126891])
            ("cstdint" include (:system-flag t) nil [126968 126986])
            ("Catch" type
               (:members 
                  ( ("uint64_t" variable (:type "int") (reparse-symbol namespacesubparts) [127053 127062])
                    ("uint64_t" variable (:type "int") (reparse-symbol namespacesubparts) [127105 127114])
                    ("Timer" type
                       (:members 
                          ( ("m_nanoseconds" variable
                               (:default-value "0"
                                :type ("uint64_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [127142 127169])
                            ("public" label nil (reparse-symbol classsubparts) [127174 127181])
                            ("start" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [127190 127203])
                            ("uint64_t" variable (:type "int") (reparse-symbol classsubparts) [127250 127259])
                            ("uint64_t" variable (:type "int") (reparse-symbol classsubparts) [127307 127316]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [127120 127434]))                  
                :type "namespace")
                nil [126988 127437])
            ("string" include (:system-flag t) nil [127479 127496])
            ("Catch" type
               (:members 
                  ( ("Section" type
                       (:superclasses 
                          ( ("NonCopyable" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [127555 127562])
                            ("Section" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("info" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SectionInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [127580 127605]))                                  
                                :type ("Section" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [127571 127606])
                            ("Section" function
                               (:prototype-flag t
                                :destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [127615 127626])
                            ("private" label nil (reparse-symbol classsubparts) [127745 127753])
                            ("m_info" variable (:type ("SectionInfo" type (:type "class") nil nil)) (reparse-symbol classsubparts) [127762 127781])
                            ("m_name" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [127791 127810])
                            ("m_assertions" variable (:type ("Counts" type (:type "class") nil nil)) (reparse-symbol classsubparts) [127819 127839])
                            ("m_sectionIncluded" variable (:type "bool") (reparse-symbol classsubparts) [127848 127871])
                            ("m_timer" variable (:type ("Timer" type (:type "class") nil nil)) (reparse-symbol classsubparts) [127880 127894]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [127521 127901]))                  
                :type "namespace")
                nil [127498 127904])
            ("INTERNAL_CATCH_SECTION" variable (:constant-flag t) nil [127937 127959])
            ("INTERNAL_CATCH_DYNAMIC_SECTION" variable (:constant-flag t) nil [128265 128295])
            ("string" include (:system-flag t) nil [128738 128755])
            ("memory" include (:system-flag t) nil [128756 128773])
            ("Catch" type
               (:members 
                  ( ("TestCase" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [128798 128813])
                    ("ITestCaseRegistry" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [128818 128843])
                    ("IExceptionTranslatorRegistry" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [128848 128884])
                    ("IExceptionTranslator" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [128889 128917])
                    ("IReporterRegistry" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [128922 128947])
                    ("IReporterFactory" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [128952 128976])
                    ("ITagAliasRegistry" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [128981 129006])
                    ("IMutableEnumValuesRegistry" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [129011 129045])
                    ("StartupExceptionRegistry" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [129051 129082])
                    ("std::shared_ptr" variable (:type "int") (reparse-symbol namespacesubparts) [129116 129150])
                    ("IRegistryHub" type
                       (:members 
                          ( ("IRegistryHub" function
                               (:prototype-flag t
                                :destructor-flag t
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [129186 129210])
                            ("getReporterRegistry" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type ("IReporterRegistry" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [129220 129285])
                            ("getTestCaseRegistry" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type ("ITestCaseRegistry" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [129294 129359])
                            ("getTagAliasRegistry" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type ("ITagAliasRegistry" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [129368 129433])
                            ("getExceptionTranslatorRegistry" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type ("IExceptionTranslatorRegistry" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [129442 129529])
                            ("getStartupExceptionRegistry" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type ("StartupExceptionRegistry" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [129539 129619]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [129156 129626])
                    ("IMutableRegistryHub" type
                       (:members 
                          ( ("IMutableRegistryHub" function
                               (:prototype-flag t
                                :destructor-flag t
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [129669 129700])
                            ("registerReporter" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("name" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [129740 129764])
                                    ("factory" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("IReporterFactoryPtr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [129765 129801]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [129709 129806])
                            ("registerListener" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("factory" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("IReporterFactoryPtr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [129846 129882]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [129815 129887])
                            ("registerTest" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("testInfo" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TestCase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [129923 129949]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [129896 129954])
                            ("registerTranslator" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("translator" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("IExceptionTranslator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [129996 130036]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [129963 130041])
                            ("registerTagAlias" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("alias" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [130081 130106])
                                    ("tag" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [130107 130130])
                                    ("lineInfo" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SourceLineInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [130131 130163]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [130050 130168])
                            ("noexcept" variable
                               (:default-value "0"
                                :type "int")
                                (reparse-symbol classsubparts) [130217 130230])
                            ("getMutableEnumValuesRegistry" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :type ("IMutableEnumValuesRegistry" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [130239 130310]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [129632 130317])
                    ("getRegistryHub" function
                       (:prototype-flag t
                        :type ("IRegistryHub" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [130323 130360])
                    ("getMutableRegistryHub" function
                       (:prototype-flag t
                        :type ("IMutableRegistryHub" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [130365 130410])
                    ("cleanUp" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol namespacesubparts) [130415 130430])
                    ("translateActiveException" function
                       (:prototype-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [130435 130474]))                  
                :type "namespace")
                nil [128775 130477])
            ("exception" include (:system-flag t) nil [130699 130719])
            ("string" include (:system-flag t) nil [130720 130737])
            ("vector" include (:system-flag t) nil [130738 130755])
            ("Catch" type
               (:members 
                  ( ("" function
                       (:prototype-flag t
                        :operator-flag t
                        :function-pointer t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [130814 130831])
                    ("IExceptionTranslator" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [130837 130865])
                    ("std::vector" variable (:type "int") (reparse-symbol namespacesubparts) [130899 130956])
                    ("IExceptionTranslator" type
                       (:members 
                          ( ("IExceptionTranslator" function
                               (:prototype-flag t
                                :destructor-flag t
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [131000 131032])
                            ("translate" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("it" variable (:type ("ExceptionTranslators::const_iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [131072 131112])
                                    ("itEnd" variable (:type ("ExceptionTranslators::const_iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [131113 131157]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [131041 131168]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [130962 131175])
                    ("IExceptionTranslatorRegistry" type
                       (:members 
                          ( ("IExceptionTranslatorRegistry" function
                               (:prototype-flag t
                                :destructor-flag t
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [131227 131267])
                            ("translateActiveException" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [131277 131334]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [131181 131341])
                    ("ExceptionTranslatorRegistrar" type
                       (:members 
                          ( ("ExceptionTranslator" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [131487 131494])
                                    ("ExceptionTranslator" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("translateFunction" function
                                               (:function-pointer t
                                                :arguments 
                                                  ( ("" variable
                                                       (:reference 1
                                                        :type ("T" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [131562 131566]))                                                  
                                                :type ("std::string" type (:type "class") nil nil))
                                                nil nil))                                          
                                        :type ("ExceptionTranslator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [131508 131638])
                                    ("protected" label nil (reparse-symbol classsubparts) [132232 132242])
                                    ("m_translateFunction" function
                                       (:prototype-flag t
                                        :function-pointer t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [132290 132294]))                                          
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [132255 132295]))                                  
                                :superclasses 
                                  ( ("IExceptionTranslator" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol classsubparts) [131392 132306])
                            ("public" label nil (reparse-symbol classsubparts) [132312 132319])
                            ("ExceptionTranslatorRegistrar" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("ExceptionTranslatorRegistrar" type (:type "class") nil nil)
                                :arguments 
                                  ( ("translateFunction" function
                                       (:function-pointer t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [132420 132424]))                                          
                                        :type ("std::string" type (:type "class") nil nil))
                                        nil nil))                                  
                                :constructor-flag t)
                                (reparse-symbol classsubparts) [132328 132562]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [131347 132569]))                  
                :type "namespace")
                nil [130757 132571])
            ("INTERNAL_CATCH_TRANSLATE_EXCEPTION2" variable (:constant-flag t) nil [132661 132696])
            ("INTERNAL_CATCH_TRANSLATE_EXCEPTION" variable (:constant-flag t) nil [133123 133157])
            ("type_traits" include (:system-flag t) nil [133348 133370])
            ("Catch" type
               (:members 
                  ( ("Detail" type
                       (:members 
                          ( ("Approx" type
                               (:members 
                                  ( ("private" label nil (reparse-symbol classsubparts) [133433 133441])
                                    ("equalityComparisonImpl" function
                                       (:prototype-flag t
                                        :methodconst-flag t
                                        :arguments 
                                          ( ("other" variable (:type "double") (reparse-symbol arg-sub-list) [133478 133491]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [133450 133498])
                                    ("setMargin" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("margin" variable (:type "double") (reparse-symbol arg-sub-list) [133638 133652]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [133623 133653])
                                    ("setEpsilon" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("epsilon" variable (:type "double") (reparse-symbol arg-sub-list) [133799 133814]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [133783 133815])
                                    ("public" label nil (reparse-symbol classsubparts) [133821 133828])
                                    ("Approx" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :arguments 
                                          ( ("value" variable (:type "double") (reparse-symbol arg-sub-list) [133855 133869]))                                          
                                        :type ("Approx" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [133846 133870])
                                    ("custom" function
                                       (:prototype-flag t
                                        :typemodifiers ("static")
                                        :type ("Approx" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [133880 133903])
                                    ("-" function
                                       (:prototype-flag t
                                        :methodconst-flag t
                                        :operator-flag t
                                        :type ("Approx" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [133913 133938])
                                    ("()" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("value" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [134080 134096]))                                          
                                        :type ("Approx" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [134061 134318])
                                    ("Approx" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("value" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [134458 134474]))                                          
                                        :type ("Approx" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [134450 134521])
                                    ("==" function
                                       (:operator-flag t
                                        :typemodifiers ("friend")
                                        :arguments 
                                          ( ("lhs" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [134670 134683])
                                            ("rhs" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Approx" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [134684 134703]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [134644 134820])
                                    ("==" function
                                       (:operator-flag t
                                        :typemodifiers ("friend")
                                        :arguments 
                                          ( ("lhs" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Approx" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [134969 134987])
                                            ("rhs" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [134988 135002]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [134943 135057])
                                    ("!=" function
                                       (:operator-flag t
                                        :typemodifiers ("friend")
                                        :arguments 
                                          ( ("lhs" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [135206 135219])
                                            ("rhs" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Approx" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [135220 135239]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [135180 135295])
                                    ("!=" function
                                       (:operator-flag t
                                        :typemodifiers ("friend")
                                        :arguments 
                                          ( ("lhs" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Approx" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [135444 135462])
                                            ("rhs" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [135463 135477]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [135418 135533])
                                    ("<=" function
                                       (:operator-flag t
                                        :typemodifiers ("friend")
                                        :arguments 
                                          ( ("lhs" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [135682 135695])
                                            ("rhs" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Approx" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [135696 135715]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [135656 135800])
                                    ("<=" function
                                       (:operator-flag t
                                        :typemodifiers ("friend")
                                        :arguments 
                                          ( ("lhs" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Approx" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [135949 135967])
                                            ("rhs" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [135968 135982]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [135923 136067])
                                    (">=" function
                                       (:operator-flag t
                                        :typemodifiers ("friend")
                                        :arguments 
                                          ( ("lhs" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [136216 136229])
                                            ("rhs" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Approx" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [136230 136249]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [136190 136334])
                                    (">=" function
                                       (:operator-flag t
                                        :typemodifiers ("friend")
                                        :arguments 
                                          ( ("lhs" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Approx" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [136483 136501])
                                            ("rhs" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [136502 136516]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [136457 136601])
                                    ("epsilon" function
                                       (:arguments 
                                          ( ("newEpsilon" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [136741 136762]))                                          
                                        :type ("Approx" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [136724 136911])
                                    ("margin" function
                                       (:arguments 
                                          ( ("newMargin" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [137050 137070]))                                          
                                        :type ("Approx" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [137034 137215])
                                    ("scale" function
                                       (:arguments 
                                          ( ("newScale" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [137353 137372]))                                          
                                        :type ("Approx" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [137338 137463])
                                    ("toString" function
                                       (:prototype-flag t
                                        :methodconst-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [137473 137502])
                                    ("private" label nil (reparse-symbol classsubparts) [137508 137516])
                                    ("m_epsilon" variable (:type "double") (reparse-symbol classsubparts) [137525 137542])
                                    ("m_margin" variable (:type "double") (reparse-symbol classsubparts) [137551 137567])
                                    ("m_scale" variable (:type "double") (reparse-symbol classsubparts) [137576 137591])
                                    ("m_value" variable (:type "double") (reparse-symbol classsubparts) [137600 137615]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [133414 137622]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [133390 137624])
                    ("literals" type
                       (:members 
                          ( ("_a" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("val" variable (:type "long double") (reparse-symbol arg-sub-list) [137705 137721]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [137702 137722])
                            ("_a" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("val" variable (:type "unsigned long long") (reparse-symbol arg-sub-list) [137757 137780]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [137754 137781]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [137650 137783])
                    ("StringMaker" type
                       (:type "struct"
                        :members 
                          ( ("convert" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("value" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Catch::Detail::Approx" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [137897 137932]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [137870 137933]))                          
                        :template-specifier 
                          ( ("Catch::Detail::Approx" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [137811 137936]))                  
                :type "namespace")
                nil [133372 137939])
            ("string" include (:system-flag t) nil [138017 138034])
            ("iosfwd" include (:system-flag t) nil [138035 138052])
            ("vector" include (:system-flag t) nil [138053 138070])
            ("Catch" type
               (:members 
                  ( ("startsWith" function
                       (:prototype-flag t
                        :arguments 
                          ( ("s" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [138112 138133])
                            ("prefix" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [138134 138161]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [138095 138162])
                    ("startsWith" function
                       (:prototype-flag t
                        :arguments 
                          ( ("s" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [138184 138205])
                            ("prefix" variable (:type "char") (reparse-symbol arg-sub-list) [138206 138219]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [138167 138220])
                    ("endsWith" function
                       (:prototype-flag t
                        :arguments 
                          ( ("s" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [138240 138261])
                            ("suffix" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [138262 138289]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [138225 138290])
                    ("endsWith" function
                       (:prototype-flag t
                        :arguments 
                          ( ("s" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [138310 138331])
                            ("suffix" variable (:type "char") (reparse-symbol arg-sub-list) [138332 138345]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [138295 138346])
                    ("contains" function
                       (:prototype-flag t
                        :arguments 
                          ( ("s" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [138366 138387])
                            ("infix" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [138388 138414]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [138351 138415])
                    ("toLowerInPlace" function
                       (:prototype-flag t
                        :arguments 
                          ( ("s" variable
                               (:reference 1
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [138441 138457]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [138420 138458])
                    ("toLower" function
                       (:prototype-flag t
                        :arguments 
                          ( ("s" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [138484 138506]))                          
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [138463 138507])
                    ("trim" function
                       (:prototype-flag t
                        :arguments 
                          ( ("str" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [138595 138619]))                          
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [138577 138620])
                    ("trim" function
                       (:prototype-flag t
                        :arguments 
                          ( ("ref" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138726 138740]))                          
                        :type ("StringRef" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [138711 138741])
                    ("splitStringRef" function
                       (:prototype-flag t
                        :arguments 
                          ( ("str" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138883 138897])
                            ("delimiter" variable (:type "char") (reparse-symbol arg-sub-list) [138898 138914]))                          
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("StringRef" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [138844 138915])
                    ("replaceInPlace" function
                       (:prototype-flag t
                        :arguments 
                          ( ("str" variable
                               (:reference 1
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [138941 138958])
                            ("replaceThis" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [138959 138990])
                            ("withThis" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [138991 139020]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [138920 139021])
                    ("pluralise" type
                       (:members 
                          ( ("pluralise" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("count" variable (:type ("std::size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139065 139083])
                                    ("label" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [139084 139110]))                                  
                                :type ("pluralise" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [139054 139111])
                            ("<<" function
                               (:prototype-flag t
                                :operator-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("os" variable
                                       (:reference 1
                                        :type ("std::ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [139156 139173])
                                    ("pluraliser" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("pluralise" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [139174 139203]))                                  
                                :type ("std::ostream" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [139121 139204])
                            ("m_count" variable (:type ("std::size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [139214 139234])
                            ("m_label" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [139243 139263]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [139027 139270]))                  
                :type "namespace")
                nil [138072 139272])
            ("string" include (:system-flag t) nil [139402 139419])
            ("vector" include (:system-flag t) nil [139420 139437])
            ("Catch" type
               (:members 
                  ( ("Matchers" type
                       (:members 
                          ( ("Impl" type
                               (:members 
                                  ( ("MatchAllOf" type
                                       (:template 
                                          ( ("ArgT" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [139508 139550])
                                    ("MatchAnyOf" type
                                       (:template 
                                          ( ("ArgT" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [139559 139601])
                                    ("MatchNotOf" type
                                       (:template 
                                          ( ("ArgT" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [139610 139652])
                                    ("MatcherUntypedBase" type
                                       (:members 
                                          ( ("public" label nil (reparse-symbol classsubparts) [139697 139704])
                                            ("toString" function
                                               (:prototype-flag t
                                                :methodconst-flag t
                                                :type ("std::string" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [139916 139945])
                                            ("protected" label nil (reparse-symbol classsubparts) [139955 139965])
                                            ("MatcherUntypedBase" function
                                               (:prototype-flag t
                                                :destructor-flag t
                                                :typemodifiers ("virtual")
                                                :type "void")
                                                (reparse-symbol classsubparts) [139978 140008])
                                            ("describe" function
                                               (:pure-virtual-flag t
                                                :prototype-flag t
                                                :methodconst-flag t
                                                :typemodifiers ("virtual")
                                                :type ("std::string" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [140021 140062])
                                            ("m_cachedToString" variable
                                               (:typemodifiers ("mutable")
                                                :type ("std::string" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [140075 140112]))                                          
                                        :type "class")
                                        (reparse-symbol namespacesubparts) [139662 140123])
                                    ("MatcherMethod" type
                                       (:template 
                                          ( ("ObjectT" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("match" function
                                               (:pure-virtual-flag t
                                                :prototype-flag t
                                                :methodconst-flag t
                                                :typemodifiers ("virtual")
                                                :arguments 
                                                  ( ("arg" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("ObjectT" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [140340 140360]))                                                  
                                                :type "bool")
                                                (reparse-symbol classsubparts) [140320 140371]))                                          )
                                        (reparse-symbol namespacesubparts) [140250 140382])
                                    ("MatcherBase" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("&&" function
                                               (:prototype-flag t
                                                :methodconst-flag t
                                                :operator-flag t
                                                :arguments 
                                                  ( ("other" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("MatcherBase" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [140968 140994]))                                                  
                                                :type ("MatchAllOf" type
                                                     (:template-specifier 
                                                        ( ("T" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol classsubparts) [140940 141001])
                                            ("||" function
                                               (:prototype-flag t
                                                :methodconst-flag t
                                                :operator-flag t
                                                :arguments 
                                                  ( ("other" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("MatcherBase" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [141042 141068]))                                                  
                                                :type ("MatchAnyOf" type
                                                     (:template-specifier 
                                                        ( ("T" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol classsubparts) [141014 141075])
                                            ("!" function
                                               (:prototype-flag t
                                                :methodconst-flag t
                                                :operator-flag t
                                                :type ("MatchNotOf" type
                                                     (:template-specifier 
                                                        ( ("T" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol classsubparts) [141088 141122]))                                          
                                        :superclasses 
                                          ( ("MatcherUntypedBase" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil)
                                            ("MatcherMethod" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [140838 141133])
                                    ("MatchAllOf" type
                                       (:template 
                                          ( ("ArgT" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("&&" function
                                               (:operator-flag t
                                                :arguments 
                                                  ( ("other" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("MatcherBase" type
                                                             (:template-specifier 
                                                                ( ("ArgT" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) [142100 142132]))                                                  
                                                :type ("MatchAllOf" type
                                                     (:template-specifier 
                                                        ( ("ArgT" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol classsubparts) [142069 142264])
                                            ("m_matchers" variable (:type ("std::vector" type
                                                 (:template-specifier 
                                                    ( ("MatcherBase" type
                                                         (:pointer 1
                                                          :constant-flag t
                                                          :template-specifier 
                                                            ( ("ArgT" type nil nil nil))                                                            )
                                                          nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol classsubparts) [142278 142327]))                                          
                                        :superclasses 
                                          ( ("MatcherBase" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [141143 142338])
                                    ("MatchAnyOf" type
                                       (:template 
                                          ( ("ArgT" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("||" function
                                               (:operator-flag t
                                                :arguments 
                                                  ( ("other" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("MatcherBase" type
                                                             (:template-specifier 
                                                                ( ("ArgT" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) [143303 143335]))                                                  
                                                :type ("MatchAnyOf" type
                                                     (:template-specifier 
                                                        ( ("ArgT" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol classsubparts) [143272 143467])
                                            ("m_matchers" variable (:type ("std::vector" type
                                                 (:template-specifier 
                                                    ( ("MatcherBase" type
                                                         (:pointer 1
                                                          :constant-flag t
                                                          :template-specifier 
                                                            ( ("ArgT" type nil nil nil))                                                            )
                                                          nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol classsubparts) [143481 143530]))                                          
                                        :superclasses 
                                          ( ("MatcherBase" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [142347 143541])
                                    ("MatchNotOf" type
                                       (:template 
                                          ( ("ArgT" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("MatchNotOf" function
                                               (:constructor-flag t
                                                :arguments 
                                                  ( ("underlyingMatcher" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("MatcherBase" type
                                                             (:template-specifier 
                                                                ( ("ArgT" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) [143648 143692]))                                                  
                                                :type ("MatchNotOf" type (:type "struct") nil nil))
                                                (reparse-symbol classsubparts) [143636 143738])
                                            ("m_underlyingMatcher" variable (:type ("MatcherBase" type
                                                 (:template-specifier 
                                                    ( ("ArgT" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol classsubparts) [144014 144059]))                                          
                                        :superclasses 
                                          ( ("MatcherBase" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [143551 144070])
                                    ("&&" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type ("MatchAllOf" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :arguments 
                                          ( ("other" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("MatcherBase" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [144153 144179]))                                          
                                        :parent "MatcherBase"
                                        :operator-flag t
                                        :methodconst-flag t)
                                        (reparse-symbol namespacesubparts) [144080 144251])
                                    ("||" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type ("MatchAnyOf" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :arguments 
                                          ( ("other" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("MatcherBase" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [144333 144359]))                                          
                                        :parent "MatcherBase"
                                        :operator-flag t
                                        :methodconst-flag t)
                                        (reparse-symbol namespacesubparts) [144260 144431])
                                    ("!" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type ("MatchNotOf" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :parent "MatcherBase"
                                        :operator-flag t
                                        :methodconst-flag t)
                                        (reparse-symbol namespacesubparts) [144440 144573]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [139482 144580]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [139457 144601])
                    ("Matchers" using (:type ("Matchers" type
                         (:prototype t
                          :type "namespace")
                          nil nil)) (reparse-symbol namespacesubparts) [144625 144650])
                    ("Matchers::Impl::MatcherBase" using (:type ("Matchers::Impl::MatcherBase" type
                         (:prototype t
                          :type "class")
                          nil nil)) (reparse-symbol namespacesubparts) [144651 144685]))                  
                :type "namespace")
                nil [139439 144688])
            ("Catch" type
               (:members 
                  ( ("Matchers" type
                       (:members 
                          ( ("Exception" type
                               (:members 
                                  ( ("ExceptionMessageMatcher" type
                                       (:superclasses 
                                          ( ("MatcherBase" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          
                                        :members 
                                          ( ("m_message" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [144907 144929])
                                            ("public" label nil (reparse-symbol classsubparts) [144930 144937])
                                            ("ExceptionMessageMatcher" function
                                               (:constructor-flag t
                                                :arguments 
                                                  ( ("message" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("std::string" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [144967 144994]))                                                  
                                                :type ("ExceptionMessageMatcher" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [144943 145029])
                                            ("override" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [145072 145087])
                                            ("override" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [145116 145131]))                                          
                                        :type "class")
                                        (reparse-symbol namespacesubparts) [144834 145134]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [144811 145137])
                            ("Message" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("message" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [145205 145232]))                                  
                                :type ("Exception::ExceptionMessageMatcher" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [145162 145233]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [144790 145236]))                  
                :type "namespace")
                nil [144772 145260])
            ("Catch" type
               (:members 
                  ( ("Matchers" type
                       (:members 
                          ( ("Floating" type
                               (:members 
                                  ( ("FloatingPointKind" type
                                       (:prototype t
                                        :superclasses 
                                          ( ("uint8_t" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :type "class")
                                        (reparse-symbol namespacesubparts) [145432 145466])
                                    ("WithinAbsMatcher" type
                                       (:superclasses 
                                          ( ("MatcherBase" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :members 
                                          ( ("WithinAbsMatcher" function
                                               (:prototype-flag t
                                                :constructor-flag t
                                                :arguments 
                                                  ( ("target" variable (:type "double") (reparse-symbol arg-sub-list) [145553 145567])
                                                    ("margin" variable (:type "double") (reparse-symbol arg-sub-list) [145568 145582]))                                                  
                                                :type ("WithinAbsMatcher" type (:type "struct") nil nil))
                                                (reparse-symbol classsubparts) [145536 145583])
                                            ("override" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [145630 145645])
                                            ("override" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [145681 145696])
                                            ("private" label nil (reparse-symbol classsubparts) [145705 145713])
                                            ("m_target" variable (:type "double") (reparse-symbol classsubparts) [145726 145742])
                                            ("m_margin" variable (:type "double") (reparse-symbol classsubparts) [145755 145771]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [145476 145782])
                                    ("WithinUlpsMatcher" type
                                       (:superclasses 
                                          ( ("MatcherBase" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :members 
                                          ( ("WithinUlpsMatcher" function
                                               (:prototype-flag t
                                                :constructor-flag t
                                                :arguments 
                                                  ( ("target" variable (:type "double") (reparse-symbol arg-sub-list) [145871 145885])
                                                    ("ulps" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145886 145900])
                                                    ("baseType" variable (:type ("FloatingPointKind" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145901 145928]))                                                  
                                                :type ("WithinUlpsMatcher" type (:type "struct") nil nil))
                                                (reparse-symbol classsubparts) [145853 145929])
                                            ("override" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [145976 145991])
                                            ("override" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [146027 146042])
                                            ("private" label nil (reparse-symbol classsubparts) [146051 146059])
                                            ("m_target" variable (:type "double") (reparse-symbol classsubparts) [146072 146088])
                                            ("m_ulps" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [146101 146117])
                                            ("m_type" variable (:type ("FloatingPointKind" type (:type "class") nil nil)) (reparse-symbol classsubparts) [146130 146155]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [145792 146166])
                                    ("WithinRelMatcher" type
                                       (:superclasses 
                                          ( ("MatcherBase" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :members 
                                          ( ("WithinRelMatcher" function
                                               (:prototype-flag t
                                                :constructor-flag t
                                                :arguments 
                                                  ( ("target" variable (:type "double") (reparse-symbol arg-sub-list) [146666 146680])
                                                    ("epsilon" variable (:type "double") (reparse-symbol arg-sub-list) [146681 146696]))                                                  
                                                :type ("WithinRelMatcher" type (:type "struct") nil nil))
                                                (reparse-symbol classsubparts) [146649 146697])
                                            ("override" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [146744 146759])
                                            ("override" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [146795 146810])
                                            ("private" label nil (reparse-symbol classsubparts) [146819 146827])
                                            ("m_target" variable (:type "double") (reparse-symbol classsubparts) [146840 146856])
                                            ("m_epsilon" variable (:type "double") (reparse-symbol classsubparts) [146869 146886]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [146589 146897]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [145397 146904])
                            ("WithinULP" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("target" variable (:type "double") (reparse-symbol arg-sub-list) [147080 147094])
                                    ("maxUlpDiff" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147095 147115]))                                  
                                :type ("Floating::WithinUlpsMatcher" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [147042 147116])
                            ("WithinULP" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("target" variable (:type "float") (reparse-symbol arg-sub-list) [147159 147172])
                                    ("maxUlpDiff" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147173 147193]))                                  
                                :type ("Floating::WithinUlpsMatcher" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [147121 147194])
                            ("WithinAbs" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("target" variable (:type "double") (reparse-symbol arg-sub-list) [147236 147250])
                                    ("margin" variable (:type "double") (reparse-symbol arg-sub-list) [147251 147265]))                                  
                                :type ("Floating::WithinAbsMatcher" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [147199 147266])
                            ("WithinRel" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("target" variable (:type "double") (reparse-symbol arg-sub-list) [147308 147322])
                                    ("eps" variable (:type "double") (reparse-symbol arg-sub-list) [147323 147334]))                                  
                                :type ("Floating::WithinRelMatcher" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [147271 147335])
                            ("WithinRel" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("target" variable (:type "double") (reparse-symbol arg-sub-list) [147442 147456]))                                  
                                :type ("Floating::WithinRelMatcher" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [147405 147457])
                            ("WithinRel" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("target" variable (:type "float") (reparse-symbol arg-sub-list) [147499 147512])
                                    ("eps" variable (:type "float") (reparse-symbol arg-sub-list) [147513 147523]))                                  
                                :type ("Floating::WithinRelMatcher" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [147462 147524])
                            ("WithinRel" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("target" variable (:type "float") (reparse-symbol arg-sub-list) [147630 147643]))                                  
                                :type ("Floating::WithinRelMatcher" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [147593 147644]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [145371 147647]))                  
                :type "namespace")
                nil [145353 147671])
            ("functional" include (:system-flag t) nil [147762 147783])
            ("string" include (:system-flag t) nil [147784 147801])
            ("Catch" type
               (:members 
                  ( ("Matchers" type
                       (:members 
                          ( ("Generic" type
                               (:members 
                                  ( ("Detail" type
                                       (:members 
                                          ( ("finalizeDescription" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("desc" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("std::string" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [147918 147942]))                                                  
                                                :type ("std::string" type (:type "class") nil nil))
                                                (reparse-symbol namespacesubparts) [147886 147943]))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [147863 147945])
                                    ("PredicateMatcher" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "class"
                                        :members 
                                          ( ("m_predicate" variable (:type "int") (reparse-symbol classsubparts) [148052 148064])
                                            ("m_description" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [148069 148095])
                                            ("public" label nil (reparse-symbol classsubparts) [148096 148103])
                                            ("PredicateMatcher" function
                                               (:constructor-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("std::function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148126 148140])
                                                    ("" variable (:type "bool") (reparse-symbol arg-sub-list) [148140 148154])
                                                    ("" variable (:type ("elem" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148163 148168])
                                                    ("descr" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("std::string" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [148169 148194]))                                                  
                                                :type ("PredicateMatcher" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [148109 148298]))                                          
                                        :superclasses 
                                          ( ("MatcherBase" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [147947 148472]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [147842 148475])
                            ("Predicate" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("Generic::PredicateMatcher" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("" variable (:type ("std::function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148808 148822])
                                    ("" variable (:type "bool") (reparse-symbol arg-sub-list) [148822 148836])
                                    ("" variable (:type ("predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148845 148855])
                                    ("description" variable
                                       (:reference 1
                                        :constant-flag t
                                        :default-value "\"\""
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [148856 148891]))                                  )
                                (reparse-symbol namespacesubparts) [148744 148969]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [147821 148972]))                  
                :type "namespace")
                nil [147803 148996])
            ("string" include (:system-flag t) nil [149085 149102])
            ("Catch" type
               (:members 
                  ( ("Matchers" type
                       (:members 
                          ( ("StdString" type
                               (:members 
                                  ( ("CasedString" type
                                       (:members 
                                          ( ("CasedString" function
                                               (:prototype-flag t
                                                :constructor-flag t
                                                :arguments 
                                                  ( ("str" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("std::string" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [149233 149256])
                                                    ("caseSensitivity" variable (:type ("CaseSensitive::Choice" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149257 149296]))                                                  
                                                :type ("CasedString" type (:type "struct") nil nil))
                                                (reparse-symbol classsubparts) [149220 149297])
                                            ("adjustString" function
                                               (:prototype-flag t
                                                :methodconst-flag t
                                                :arguments 
                                                  ( ("str" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("std::string" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [149336 149360]))                                                  
                                                :type ("std::string" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [149310 149367])
                                            ("caseSensitivitySuffix" function
                                               (:prototype-flag t
                                                :methodconst-flag t
                                                :type ("std::string" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [149380 149422])
                                            ("m_caseSensitivity" variable (:type ("CaseSensitive::Choice" type (:type "class") nil nil)) (reparse-symbol classsubparts) [149436 149476])
                                            ("m_str" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [149489 149507]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [149179 149518])
                                    ("StringMatcherBase" type
                                       (:superclasses 
                                          ( ("MatcherBase" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :members 
                                          ( ("StringMatcherBase" function
                                               (:prototype-flag t
                                                :constructor-flag t
                                                :arguments 
                                                  ( ("operation" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("std::string" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [149613 149642])
                                                    ("comparator" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("CasedString" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [149643 149674]))                                                  
                                                :type ("StringMatcherBase" type (:type "struct") nil nil))
                                                (reparse-symbol classsubparts) [149594 149675])
                                            ("override" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [149711 149726])
                                            ("m_comparator" variable (:type ("CasedString" type (:type "class") nil nil)) (reparse-symbol classsubparts) [149740 149765])
                                            ("m_operation" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [149778 149802]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [149528 149813])
                                    ("EqualsMatcher" type
                                       (:superclasses 
                                          ( ("StringMatcherBase" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :members 
                                          ( ("EqualsMatcher" function
                                               (:prototype-flag t
                                                :constructor-flag t
                                                :arguments 
                                                  ( ("comparator" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("CasedString" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [149893 149924]))                                                  
                                                :type ("EqualsMatcher" type (:type "struct") nil nil))
                                                (reparse-symbol classsubparts) [149878 149925])
                                            ("override" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [149978 149993]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [149823 150004])
                                    ("ContainsMatcher" type
                                       (:superclasses 
                                          ( ("StringMatcherBase" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :members 
                                          ( ("ContainsMatcher" function
                                               (:prototype-flag t
                                                :constructor-flag t
                                                :arguments 
                                                  ( ("comparator" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("CasedString" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [150087 150118]))                                                  
                                                :type ("ContainsMatcher" type (:type "struct") nil nil))
                                                (reparse-symbol classsubparts) [150070 150119])
                                            ("override" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [150172 150187]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [150013 150198])
                                    ("StartsWithMatcher" type
                                       (:superclasses 
                                          ( ("StringMatcherBase" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :members 
                                          ( ("StartsWithMatcher" function
                                               (:prototype-flag t
                                                :constructor-flag t
                                                :arguments 
                                                  ( ("comparator" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("CasedString" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [150285 150316]))                                                  
                                                :type ("StartsWithMatcher" type (:type "struct") nil nil))
                                                (reparse-symbol classsubparts) [150266 150317])
                                            ("override" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [150370 150385]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [150207 150396])
                                    ("EndsWithMatcher" type
                                       (:superclasses 
                                          ( ("StringMatcherBase" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :members 
                                          ( ("EndsWithMatcher" function
                                               (:prototype-flag t
                                                :constructor-flag t
                                                :arguments 
                                                  ( ("comparator" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("CasedString" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [150479 150510]))                                                  
                                                :type ("EndsWithMatcher" type (:type "struct") nil nil))
                                                (reparse-symbol classsubparts) [150462 150511])
                                            ("override" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [150564 150579]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [150405 150590])
                                    ("RegexMatcher" type
                                       (:superclasses 
                                          ( ("MatcherBase" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :members 
                                          ( ("RegexMatcher" function
                                               (:prototype-flag t
                                                :constructor-flag t
                                                :arguments 
                                                  ( ("regex" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150675 150693])
                                                    ("caseSensitivity" variable (:type ("CaseSensitive::Choice" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150694 150733]))                                                  
                                                :type ("RegexMatcher" type (:type "struct") nil nil))
                                                (reparse-symbol classsubparts) [150661 150734])
                                            ("override" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [150788 150803])
                                            ("override" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [150839 150854])
                                            ("private" label nil (reparse-symbol classsubparts) [150864 150872])
                                            ("m_regex" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [150885 150905])
                                            ("m_caseSensitivity" variable (:type ("CaseSensitive::Choice" type (:type "class") nil nil)) (reparse-symbol classsubparts) [150918 150958]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [150600 150969]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [149148 150976])
                            ("Equals" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("str" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [151149 151172])
                                    ("caseSensitivity" variable
                                       (:default-value "CaseSensitive"
                                        :type ("CaseSensitive::Choice" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [151173 151226])
                                    ("" variable (:type ("Yes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151228 151233]))                                  
                                :type ("StdString::EqualsMatcher" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [151116 151234])
                            ("Contains" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("str" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [151276 151299])
                                    ("caseSensitivity" variable
                                       (:default-value "CaseSensitive"
                                        :type ("CaseSensitive::Choice" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [151300 151353])
                                    ("" variable (:type ("Yes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151355 151360]))                                  
                                :type ("StdString::ContainsMatcher" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [151239 151361])
                            ("EndsWith" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("str" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [151403 151426])
                                    ("caseSensitivity" variable
                                       (:default-value "CaseSensitive"
                                        :type ("CaseSensitive::Choice" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [151427 151480])
                                    ("" variable (:type ("Yes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151482 151487]))                                  
                                :type ("StdString::EndsWithMatcher" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [151366 151488])
                            ("StartsWith" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("str" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [151534 151557])
                                    ("caseSensitivity" variable
                                       (:default-value "CaseSensitive"
                                        :type ("CaseSensitive::Choice" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [151558 151611])
                                    ("" variable (:type ("Yes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151613 151618]))                                  
                                :type ("StdString::StartsWithMatcher" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [151493 151619])
                            ("Matches" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("regex" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [151657 151682])
                                    ("caseSensitivity" variable
                                       (:default-value "CaseSensitive"
                                        :type ("CaseSensitive::Choice" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [151683 151736])
                                    ("" variable (:type ("Yes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151738 151743]))                                  
                                :type ("StdString::RegexMatcher" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [151624 151744]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [149122 151747]))                  
                :type "namespace")
                nil [149104 151771])
            ("algorithm" include (:system-flag t) nil [151857 151877])
            ("Catch" type
               (:members 
                  ( ("Matchers" type
                       (:members 
                          ( ("Vector" type
                               (:members 
                                  ( ("ContainsElementMatcher" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil)
                                            ("Alloc" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("ContainsElementMatcher" function
                                               (:constructor-flag t
                                                :arguments 
                                                  ( ("comparator" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("T" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [152100 152120]))                                                  
                                                :type ("ContainsElementMatcher" type (:type "struct") nil nil))
                                                (reparse-symbol classsubparts) [152077 152151])
                                            ("m_comparator" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [152597 152619]))                                          
                                        :superclasses 
                                          ( ("MatcherBase" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [151950 152630])
                                    ("ContainsMatcher" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil)
                                            ("AllocComp" type (:type "class") nil nil)
                                            ("AllocMatch" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("ContainsMatcher" function
                                               (:constructor-flag t
                                                :arguments 
                                                  ( ("comparator" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("std::vector" type
                                                             (:template-specifier 
                                                                ( ("T" type nil nil nil)
                                                                  ("AllocComp" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) [152806 152850]))                                                  
                                                :type ("ContainsMatcher" type (:type "struct") nil nil))
                                                (reparse-symbol classsubparts) [152790 152882])
                                            ("m_comparator" variable (:type ("std::vector" type
                                                 (:template-specifier 
                                                    ( ("T" type nil nil nil)
                                                      ("AllocComp" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol classsubparts) [153742 153788]))                                          
                                        :superclasses 
                                          ( ("MatcherBase" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [152640 153799])
                                    ("EqualsMatcher" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil)
                                            ("AllocComp" type (:type "class") nil nil)
                                            ("AllocMatch" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("EqualsMatcher" function
                                               (:constructor-flag t
                                                :arguments 
                                                  ( ("comparator" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("std::vector" type
                                                             (:template-specifier 
                                                                ( ("T" type nil nil nil)
                                                                  ("AllocComp" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) [153971 154015]))                                                  
                                                :type ("EqualsMatcher" type (:type "struct") nil nil))
                                                (reparse-symbol classsubparts) [153957 154047])
                                            ("m_comparator" variable (:type ("std::vector" type
                                                 (:template-specifier 
                                                    ( ("T" type nil nil nil)
                                                      ("AllocComp" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol classsubparts) [154881 154927]))                                          
                                        :superclasses 
                                          ( ("MatcherBase" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [153809 154938])
                                    ("ApproxMatcher" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil)
                                            ("AllocComp" type (:type "class") nil nil)
                                            ("AllocMatch" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("ApproxMatcher" function
                                               (:constructor-flag t
                                                :arguments 
                                                  ( ("comparator" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("std::vector" type
                                                             (:template-specifier 
                                                                ( ("T" type nil nil nil)
                                                                  ("AllocComp" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) [155110 155154]))                                                  
                                                :type ("ApproxMatcher" type (:type "struct") nil nil))
                                                (reparse-symbol classsubparts) [155096 155186])
                                            ("epsilon" function
                                               (:arguments 
                                                  ( ("newEpsilon" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("T" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [155839 155860]))                                                  
                                                :type ("ApproxMatcher" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [155815 155950])
                                            ("margin" function
                                               (:arguments 
                                                  ( ("newMargin" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("T" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [156091 156111]))                                                  
                                                :type ("ApproxMatcher" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [156068 156199])
                                            ("scale" function
                                               (:arguments 
                                                  ( ("newScale" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("T" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [156339 156358]))                                                  
                                                :type ("ApproxMatcher" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [156317 156444])
                                            ("m_comparator" variable (:type ("std::vector" type
                                                 (:template-specifier 
                                                    ( ("T" type nil nil nil)
                                                      ("AllocComp" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol classsubparts) [156458 156504])
                                            ("approx" variable
                                               (:typemodifiers ("mutable")
                                                :default-value "Catch::Detail::Approx::custom()"
                                                :type ("Catch::Detail::Approx" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [156517 156588]))                                          
                                        :superclasses 
                                          ( ("MatcherBase" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [154948 156599])
                                    ("UnorderedEqualsMatcher" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil)
                                            ("AllocComp" type (:type "class") nil nil)
                                            ("AllocMatch" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("UnorderedEqualsMatcher" function
                                               (:constructor-flag t
                                                :arguments 
                                                  ( ("target" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("std::vector" type
                                                             (:template-specifier 
                                                                ( ("T" type nil nil nil)
                                                                  ("AllocComp" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) [156788 156828]))                                                  
                                                :type ("UnorderedEqualsMatcher" type (:type "struct") nil nil))
                                                (reparse-symbol classsubparts) [156765 156850])
                                            ("private" label nil (reparse-symbol classsubparts) [157298 157306])
                                            ("m_target" variable (:type ("std::vector" type
                                                 (:template-specifier 
                                                    ( ("T" type nil nil nil)
                                                      ("AllocComp" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol classsubparts) [157319 157361]))                                          
                                        :superclasses 
                                          ( ("MatcherBase" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [156609 157372]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [151923 157379])
                            ("Contains" function
                               (:arguments 
                                  ( ("comparator" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::vector" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil)
                                                  ("AllocComp" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [157674 157719]))                                  
                                :type ("Vector::ContainsMatcher" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("AllocComp" type nil nil nil)
                                          ("AllocMatch" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol namespacesubparts) [157614 157807])
                            ("VectorContains" function
                               (:arguments 
                                  ( ("comparator" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [157931 157952]))                                  
                                :type ("Vector::ContainsElementMatcher" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Alloc" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol namespacesubparts) [157874 158031])
                            ("Equals" function
                               (:arguments 
                                  ( ("comparator" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::vector" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil)
                                                  ("AllocComp" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [158191 158236]))                                  
                                :type ("Vector::EqualsMatcher" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("AllocComp" type nil nil nil)
                                          ("AllocMatch" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol namespacesubparts) [158135 158322])
                            ("Approx" function
                               (:arguments 
                                  ( ("comparator" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::vector" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil)
                                                  ("AllocComp" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [158482 158527]))                                  
                                :type ("Vector::ApproxMatcher" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("AllocComp" type nil nil nil)
                                          ("AllocMatch" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol namespacesubparts) [158426 158613])
                            ("UnorderedEquals" function
                               (:arguments 
                                  ( ("target" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::vector" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil)
                                                  ("AllocComp" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [158790 158830]))                                  
                                :type ("Vector::UnorderedEqualsMatcher" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("AllocComp" type nil nil nil)
                                          ("AllocMatch" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol namespacesubparts) [158717 158921]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [151897 158924]))                  
                :type "namespace")
                nil [151879 158948])
            ("Catch" type
               (:members 
                  ( ("MatchExpr" type
                       (:template 
                          ( ("ArgT" type (:type "class") nil nil)
                            ("MatcherT" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("m_arg" variable (:type ("ArgT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [159126 159144])
                            ("m_matcher" variable (:type ("MatcherT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [159153 159172])
                            ("m_matcherString" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol classsubparts) [159181 159207])
                            ("public" label nil (reparse-symbol classsubparts) [159212 159219])
                            ("MatchExpr" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("arg" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("ArgT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [159239 159255])
                                    ("matcher" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MatcherT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [159256 159280])
                                    ("matcherString" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("StringRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [159281 159313]))                                  
                                :type ("MatchExpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [159228 159493]))                          
                        :superclasses 
                          ( ("ITransientExpression" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [159023 159866])
                    ("Matchers::Impl::MatcherBase" variable (:type "int") (reparse-symbol namespacesubparts) [159894 159935])
                    ("handleExceptionMatchExpr" function
                       (:prototype-flag t
                        :arguments 
                          ( ("handler" variable
                               (:reference 1
                                :type ("AssertionHandler" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [159972 159998])
                            ("matcher" variable
                               (:reference 1
                                :constant-flag t
                                :type ("StringMatcher" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [159999 160028])
                            ("matcherString" variable
                               (:reference 1
                                :constant-flag t
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [160029 160062]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [159941 160063]))                  
                :type "namespace")
                nil [159000 160324])
            ("INTERNAL_CHECK_THAT" variable (:constant-flag t) nil [160433 160452])
            ("INTERNAL_CATCH_THROWS_MATCHES" variable (:constant-flag t) nil [161071 161100])
            ("memory" include (:system-flag t) nil [162214 162231])
            ("Catch" type
               (:members 
                  ( ("Generators" type
                       (:members 
                          ( ("GeneratorUntypedBase" type
                               (:members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [162324 162331])
                                    ("GeneratorUntypedBase" function
                                       (:prototype-flag t
                                        :destructor-flag t
                                        :typemodifiers ("virtual")
                                        :type "void")
                                        (reparse-symbol classsubparts) [162390 162422])
                                    ("next" function
                                       (:pure-virtual-flag t
                                        :prototype-flag t
                                        :typemodifiers ("virtual")
                                        :type "bool")
                                        (reparse-symbol classsubparts) [162625 162649]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [162287 162660])
                            ("std::unique_ptr" variable (:type "int") (reparse-symbol namespacesubparts) [162694 162732]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [162256 162739])
                    ("IGeneratorTracker" type
                       (:members 
                          ( ("IGeneratorTracker" function
                               (:prototype-flag t
                                :destructor-flag t
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [162804 162833])
                            ("setGenerator" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Generators::GeneratorBasePtr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [163010 163040])
                                    ("" variable (:type ("generator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163041 163052]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [162983 163057]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [162769 163064]))                  
                :type "namespace")
                nil [162233 163067])
            ("exception" include (:system-flag t) nil [163157 163177])
            ("Catch" type
               (:members 
                  ( ("throw_exception" function
                       (:arguments 
                          ( ("e" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Ex" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [163312 163324]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [163291 163349])
                    ("throw_logic_error" function
                       (:prototype-flag t
                        :arguments 
                          ( ("msg" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [163536 163559]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [163513 163560])
                    ("throw_domain_error" function
                       (:prototype-flag t
                        :arguments 
                          ( ("msg" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [163606 163629]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [163582 163630])
                    ("throw_runtime_error" function
                       (:prototype-flag t
                        :arguments 
                          ( ("msg" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [163677 163700]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [163652 163701]))                  
                :type "namespace")
                nil [163179 163704])
            ("CATCH_MAKE_MSG" variable (:constant-flag t) nil [163734 163748])
            ("CATCH_INTERNAL_ERROR" variable (:constant-flag t) nil [163822 163842])
            ("CATCH_ERROR" variable (:constant-flag t) nil [163976 163987])
            ("CATCH_RUNTIME_ERROR" variable (:constant-flag t) nil [164065 164084])
            ("CATCH_ENFORCE" variable (:constant-flag t) nil [164163 164176])
            ("memory" include (:system-flag t) nil [164291 164308])
            ("vector" include (:system-flag t) nil [164309 164326])
            ("cassert" include (:system-flag t) nil [164327 164345])
            ("utility" include (:system-flag t) nil [164347 164365])
            ("exception" include (:system-flag t) nil [164366 164386])
            ("Catch" type
               (:members 
                  ( ("GeneratorException" type
                       (:superclasses 
                          ( ("std::exception" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("m_msg" variable
                               (:pointer 1
                                :constant-flag t
                                :default-value "\"\""
                                :type "char")
                                (reparse-symbol classsubparts) [164462 164491])
                            ("public" label nil (reparse-symbol classsubparts) [164493 164500])
                            ("GeneratorException" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("msg" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [164524 164540]))                                  
                                :type ("GeneratorException" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [164505 164567])
                            ("final" variable (:type ("override" type (:type "class") nil nil)) (reparse-symbol classsubparts) [164607 164622]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [164407 164625])
                    ("Generators" type
                       (:members 
                          ( ("pf" type
                               (:members 
                                  ( ("make_unique" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Args" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [164801 164807])
                                            ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164811 164817]))                                          
                                        :type ("std::unique_ptr" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol namespacesubparts) [164769 164904]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [164700 164910])
                            ("IGenerator" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("get" function
                                       (:pure-virtual-flag t
                                        :prototype-flag t
                                        :methodconst-flag t
                                        :typemodifiers ("virtual")
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [165225 165258])
                                    ("type" variable
                                       (:default-value "T"
                                        :type "int")
                                        (reparse-symbol classsubparts) [165273 165282]))                                  
                                :superclasses 
                                  ( ("GeneratorUntypedBase" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [164916 165289])
                            ("IGenerator" variable (:type "int") (reparse-symbol namespacesubparts) [165362 165632])
                            ("IGenerator" variable (:type "int") (reparse-symbol namespacesubparts) [165705 166286])
                            ("final" variable (:type ("GeneratorWrapper" type
                                 (:prototype t
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [166292 166696])
                            ("value" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("GeneratorWrapper" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [166754 166757])
                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166758 166764]))                                  )
                                (reparse-symbol namespacesubparts) [166702 166874])
                            ("values" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("GeneratorWrapper" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("values" variable (:type ("std::initializer_list" type
                                         (:template-specifier 
                                            ( ("T" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [166932 166964]))                                  )
                                (reparse-symbol namespacesubparts) [166879 167058])
                            ("Generators" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("m_generators" variable (:type ("std::vector" type
                                         (:template-specifier 
                                            ( ("GeneratorWrapper" type (:template-specifier 
                                                ( ("T" type nil nil nil))                                                ) nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [167139 167185])
                                    ("m_current" variable
                                       (:default-value "0"
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [167194 167215])
                                    ("populate" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("GeneratorWrapper" type
                                                     (:template-specifier 
                                                        ( ("T" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [167239 167260])
                                            ("" variable (:type ("generator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167261 167271]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [167225 167344])
                                    ("populate" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [167367 167370])
                                            ("" variable (:type ("val" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167371 167375]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [167353 167455])
                                    ("populate" function
                                       (:template 
                                          ( ("U" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("U" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [167507 167510])
                                            ("" variable (:type ("val" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167511 167515]))                                          )
                                        (reparse-symbol classsubparts) [167464 167574])
                                    ("populate" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("U" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [167642 167645])
                                            ("" variable (:type ("valueOrGenerator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167646 167663])
                                            ("" variable
                                               (:reference 1
                                                :type ("Gs" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [167664 167669])
                                            ("" variable (:type ("moreGenerators" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167673 167688]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [167628 167816])
                                    ("public" label nil (reparse-symbol classsubparts) [167822 167829])
                                    ("Generators" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Gs" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [167883 167888])
                                            ("" variable (:type ("moreGenerators" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167892 167907]))                                          
                                        :type ("Generators" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [167872 168027]))                                  
                                :superclasses 
                                  ( ("IGenerator" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [167064 168475])
                            ("table" function
                               (:arguments 
                                  ( ("" variable (:type ("std::initializer_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168553 168575])
                                    ("" variable (:type ("std::tuple" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168575 168586])
                                    ("" variable
                                       (:typemodifiers ("typename")
                                        :type ("std::decay::type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [168586 168616])
                                    ("" variable (:type ("tuples" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168621 168629]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [168546 168689])
                            ("as" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [168791 168830])
                            ("decltype" function
                               (:arguments 
                                  ( ("" variable (:type ("std::declval" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170150 170163])
                                    ("" variable (:type ("decltype" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170163 170194])
                                    ("" variable (:type ("get" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170198 170203]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [170141 170672]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [164627 170675]))                  
                :type "namespace")
                nil [164388 170701])
            ("GENERATE" variable (:constant-flag t) nil [170730 170738])
            ("GENERATE_COPY" variable (:constant-flag t) nil [171070 171083])
            ("GENERATE_REF" variable (:constant-flag t) nil [171415 171427])
            ("Catch" type
               (:members 
                  ( ("Generators" type
                       (:members 
                          ( ("TakeGenerator" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("m_generator" variable (:type ("GeneratorWrapper" type
                                         (:template-specifier 
                                            ( ("T" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [171944 171976])
                                    ("m_returned" variable
                                       (:default-value "0"
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [171985 172007])
                                    ("m_target" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [172016 172032])
                                    ("public" label nil (reparse-symbol classsubparts) [172037 172044])
                                    ("TakeGenerator" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("target" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172067 172081])
                                            ("" variable
                                               (:reference 1
                                                :type ("GeneratorWrapper" type
                                                     (:template-specifier 
                                                        ( ("T" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [172082 172103])
                                            ("" variable (:type ("generator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172104 172114]))                                          
                                        :type ("TakeGenerator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [172053 172282]))                                  
                                :superclasses 
                                  ( ("IGenerator" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [171865 172808])
                            ("take" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("GeneratorWrapper" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("target" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172865 172879])
                                    ("" variable
                                       (:reference 1
                                        :type ("GeneratorWrapper" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [172880 172901])
                                    ("" variable (:type ("generator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172902 172912]))                                  )
                                (reparse-symbol namespacesubparts) [172814 173021])
                            ("FilterGenerator" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("Predicate" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("m_generator" variable (:type ("GeneratorWrapper" type
                                         (:template-specifier 
                                            ( ("T" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [173128 173160])
                                    ("m_predicate" variable (:type ("Predicate" type (:type "class") nil nil)) (reparse-symbol classsubparts) [173169 173191])
                                    ("public" label nil (reparse-symbol classsubparts) [173196 173203])
                                    ("FilterGenerator" function
                                       (:template 
                                          ( ("P" type (:type "class") nil nil))                                          
                                        :type ("FilterGenerator" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("P" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [173270 173273])
                                            ("" variable (:type ("pred" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173274 173279])
                                            ("" variable
                                               (:reference 1
                                                :type ("GeneratorWrapper" type
                                                     (:template-specifier 
                                                        ( ("T" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [173280 173301])
                                            ("" variable (:type ("generator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173302 173312]))                                          
                                        :constructor-flag t)
                                        (reparse-symbol classsubparts) [173212 173852])
                                    ("private" label nil (reparse-symbol classsubparts) [174020 174028])
                                    ("nextImpl" function (:type "bool") (reparse-symbol classsubparts) [174037 174306]))                                  
                                :superclasses 
                                  ( ("IGenerator" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [173027 174313])
                            ("filter" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("Predicate" type (:type "class") nil nil))                                  
                                :type ("GeneratorWrapper" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Predicate" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [174392 174403])
                                    ("" variable (:type ("pred" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174404 174409])
                                    ("" variable
                                       (:reference 1
                                        :type ("GeneratorWrapper" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [174410 174431])
                                    ("" variable (:type ("generator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174432 174442]))                                  )
                                (reparse-symbol namespacesubparts) [174319 174619])
                            ("RepeatGenerator" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("static_assert" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("std::is_same::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174721 174750]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [174706 174873])
                                    ("m_generator" variable (:type ("GeneratorWrapper" type
                                         (:template-specifier 
                                            ( ("T" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [174882 174914])
                                    ("m_returned" variable
                                       (:typemodifiers ("mutable")
                                        :type ("std::vector" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [174923 174957])
                                    ("m_target_repeats" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [174966 174990])
                                    ("m_current_repeat" variable
                                       (:default-value "0"
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [174999 175027])
                                    ("m_repeat_index" variable
                                       (:default-value "0"
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [175036 175062])
                                    ("public" label nil (reparse-symbol classsubparts) [175067 175074])
                                    ("RepeatGenerator" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("repeats" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175099 175114])
                                            ("" variable
                                               (:reference 1
                                                :type ("GeneratorWrapper" type
                                                     (:template-specifier 
                                                        ( ("T" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [175115 175136])
                                            ("" variable (:type ("generator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175137 175147]))                                          
                                        :type ("RepeatGenerator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [175083 175343]))                                  
                                :superclasses 
                                  ( ("IGenerator" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [174625 176583])
                            ("repeat" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("GeneratorWrapper" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("repeats" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [176642 176657])
                                    ("" variable
                                       (:reference 1
                                        :type ("GeneratorWrapper" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [176658 176679])
                                    ("" variable (:type ("generator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [176680 176690]))                                  )
                                (reparse-symbol namespacesubparts) [176589 176802])
                            ("MapGenerator" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil)
                                    ("Func" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("m_generator" variable (:type ("GeneratorWrapper" type
                                         (:template-specifier 
                                            ( ("U" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [177000 177032])
                                    ("m_function" variable (:type ("Func" type (:type "class") nil nil)) (reparse-symbol classsubparts) [177041 177057])
                                    ("m_cache" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [177143 177153])
                                    ("public" label nil (reparse-symbol classsubparts) [177158 177165])
                                    ("MapGenerator" function
                                       (:template 
                                          ( ("F2" type (:type "class") nil nil))                                          
                                        :type ("MapGenerator" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("F2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [177225 177229])
                                            ("" variable (:type ("function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [177230 177239])
                                            ("" variable
                                               (:reference 1
                                                :type ("GeneratorWrapper" type
                                                     (:template-specifier 
                                                        ( ("U" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [177240 177261])
                                            ("" variable (:type ("generator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [177262 177272]))                                          
                                        :constructor-flag t)
                                        (reparse-symbol classsubparts) [177174 177435]))                                  
                                :superclasses 
                                  ( ("IGenerator" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [176808 177741])
                            ("map" function
                               (:template 
                                  ( ("Func" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil)
                                    ("T" type (:type "class") nil nil))                                  
                                :type ("GeneratorWrapper" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Func" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [177854 177860])
                                    ("" variable (:type ("function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [177861 177870])
                                    ("" variable
                                       (:reference 1
                                        :type ("GeneratorWrapper" type
                                             (:template-specifier 
                                                ( ("U" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [177871 177892])
                                    ("" variable (:type ("generator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [177893 177903]))                                  )
                                (reparse-symbol namespacesubparts) [177747 178064])
                            ("map" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil)
                                    ("Func" type (:type "class") nil nil))                                  
                                :type ("GeneratorWrapper" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Func" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [178147 178153])
                                    ("" variable (:type ("function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [178154 178163])
                                    ("" variable
                                       (:reference 1
                                        :type ("GeneratorWrapper" type
                                             (:template-specifier 
                                                ( ("U" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [178164 178185])
                                    ("" variable (:type ("generator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [178186 178196]))                                  )
                                (reparse-symbol namespacesubparts) [178070 178357])
                            ("IGenerator" variable (:type "int") (reparse-symbol namespacesubparts) [178425 179644])
                            ("chunk" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("GeneratorWrapper" type
                                     (:template-specifier 
                                        ( ("std::vector" type (:template-specifier 
                                            ( ("T" type nil nil nil))                                            ) nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [179715 179727])
                                    ("" variable
                                       (:reference 1
                                        :type ("GeneratorWrapper" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [179728 179749])
                                    ("" variable (:type ("generator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [179750 179760]))                                  )
                                (reparse-symbol namespacesubparts) [179650 179903]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [171837 179906]))                  
                :type "namespace")
                nil [171819 179932])
            ("memory" include (:system-flag t) nil [180055 180072])
            ("Catch" type
               (:members 
                  ( ("IResultCapture" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [180097 180119])
                    ("IRunner" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [180124 180139])
                    ("IConfig" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [180144 180159])
                    ("IMutableContext" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [180164 180187])
                    ("std::shared_ptr" variable (:type "int") (reparse-symbol namespacesubparts) [180212 180243])
                    ("IContext" type
                       (:members 
                          ( ("IContext" function
                               (:prototype-flag t
                                :destructor-flag t
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [180279 180299])
                            ("getResultCapture" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :pointer 1
                                :typemodifiers ("virtual")
                                :type ("IResultCapture" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [180309 180356])
                            ("getRunner" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :pointer 1
                                :typemodifiers ("virtual")
                                :type ("IRunner" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [180365 180398])
                            ("getConfig" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type ("IConfigPtr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [180407 180455]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [180249 180462])
                    ("IMutableContext" type
                       (:superclasses 
                          ( ("IContext" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("IMutableContext" function
                               (:prototype-flag t
                                :destructor-flag t
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [180516 180543])
                            ("setResultCapture" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("resultCapture" variable
                                       (:pointer 1
                                        :type ("IResultCapture" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [180583 180614]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [180552 180619])
                            ("setRunner" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("runner" variable
                                       (:pointer 1
                                        :type ("IRunner" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [180652 180669]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [180628 180674])
                            ("setConfig" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("config" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("IConfigPtr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [180707 180733]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [180683 180738])
                            ("private" label nil (reparse-symbol classsubparts) [180744 180752])
                            ("currentContext" variable
                               (:pointer 1
                                :typemodifiers ("static")
                                :type ("IMutableContext" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [180761 180800])
                            ("getCurrentMutableContext" function
                               (:prototype-flag t
                                :typemodifiers ("friend")
                                :type ("IMutableContext" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [180809 180860])
                            ("cleanUpContext" function
                               (:prototype-flag t
                                :typemodifiers ("friend")
                                :type "void")
                                (reparse-symbol classsubparts) [180869 180898])
                            ("createContext" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :type "void")
                                (reparse-symbol classsubparts) [180907 180935]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [180468 180942])
                    ("getCurrentMutableContext" function
                       (:typemodifiers ("inline")
                        :type ("IMutableContext" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [180948 181225])
                    ("getCurrentContext" function
                       (:typemodifiers ("inline")
                        :type ("IContext" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [181231 181322])
                    ("cleanUpContext" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol namespacesubparts) [181328 181350])
                    ("SimplePcg32" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [181356 181374])
                    ("rng" function
                       (:prototype-flag t
                        :type ("SimplePcg32" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [181379 181398]))                  
                :type "namespace")
                nil [180074 181400])
            ("Catch" type
               (:members 
                  ( ("Option" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [181579 181586])
                            ("Option" function
                               (:constructor-flag t
                                :type ("Option" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [181595 181633])
                            ("Option" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("_value" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [181650 181667]))                                  
                                :type ("Option" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [181642 181732])
                            ("Option" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("_other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Option" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [181749 181771]))                                  
                                :type ("Option" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [181741 181856])
                            ("Option" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [181866 181908])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("_other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Option" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [181938 181960]))                                  
                                :type ("Option" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [181918 182167])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("_value" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [182197 182214]))                                  
                                :type ("Option" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [182176 182329])
                            ("reset" function (:type "void") (reparse-symbol classsubparts) [182339 182469])
                            ("" function
                               (:operator-flag t
                                :function-pointer t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [182479 182520])
                            ("" function
                               (:methodconst-flag t
                                :operator-flag t
                                :function-pointer t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [182529 182582])
                            ("->" function
                               (:operator-flag t
                                :pointer 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [182591 182632])
                            ("->" function
                               (:methodconst-flag t
                                :operator-flag t
                                :pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [182641 182694])
                            ("valueOr" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("defaultValue" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [182715 182738]))                                  
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [182704 182822])
                            ("some" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [182832 182886])
                            ("none" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [182895 182949])
                            ("!" function
                               (:methodconst-flag t
                                :operator-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [182959 183019])
                            ("private" label nil (reparse-symbol classsubparts) [183103 183111])
                            ("nullableValue" variable
                               (:pointer 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [183120 183137])
                            ("storage" variable
                               (:dereference 1
                                :type "char")
                                (reparse-symbol classsubparts) [183166 183190]))                          )
                        (reparse-symbol namespacesubparts) [181535 183197]))                  
                :type "namespace")
                nil [181488 183200])
            ("chrono" include (:system-flag t) nil [183249 183266])
            ("iosfwd" include (:system-flag t) nil [183267 183284])
            ("string" include (:system-flag t) nil [183285 183302])
            ("vector" include (:system-flag t) nil [183303 183320])
            ("memory" include (:system-flag t) nil [183321 183338])
            ("Catch" type
               (:members 
                  ( ("Verbosity" type (:type "class") (reparse-symbol namespacesubparts) [183368 183440])
                    ("WarnAbout" type
                       (:members 
                          ( ("What" type
                               (:members 
                                  ( ("Nothing" variable
                                       (:constant-flag t
                                        :default-value (183495 183499)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [183485 183499])
                                    ("NoAssertions" variable
                                       (:constant-flag t
                                        :default-value (183524 183528)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [183509 183528])
                                    ("NoTests" variable
                                       (:constant-flag t
                                        :default-value (183548 183552)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [183538 183552]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [183465 183559]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [183446 183562])
                    ("ShowDurations" type
                       (:members 
                          ( ("OrNot" type
                               (:members 
                                  ( ("DefaultForReporter" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [183612 183631])
                                    ("Always" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [183640 183647])
                                    ("Never" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [183656 183667]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [183591 183668]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [183568 183671])
                    ("RunTests" type
                       (:members 
                          ( ("InWhatOrder" type
                               (:members 
                                  ( ("InDeclarationOrder" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [183721 183740])
                                    ("InLexicographicalOrder" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [183749 183772])
                                    ("InRandomOrder" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [183781 183800]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [183694 183801]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [183676 183804])
                    ("UseColour" type
                       (:members 
                          ( ("YesOrNo" type
                               (:members 
                                  ( ("Auto" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [183851 183856])
                                    ("Yes" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [183865 183869])
                                    ("No" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [183878 183886]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [183828 183887]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [183809 183890])
                    ("WaitForKeypress" type
                       (:members 
                          ( ("When" type
                               (:members 
                                  ( ("Never" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [183940 183946])
                                    ("BeforeStart" variable
                                       (:constant-flag t
                                        :default-value (183969 183970)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [183955 183970])
                                    ("BeforeExit" variable
                                       (:constant-flag t
                                        :default-value (183993 183994)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [183980 183994])
                                    ("BeforeStartAndExit" variable
                                       (:constant-flag t
                                        :default-value (184025 184049)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [184004 184049]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [183920 184056]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [183895 184059])
                    ("TestSpec" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [184065 184080])
                    ("IConfig" type
                       (:superclasses 
                          ( ("NonCopyable" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("IConfig" function
                               (:prototype-flag t
                                :destructor-flag t
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [184126 184145])
                            ("allowThrows" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type "bool")
                                (reparse-symbol classsubparts) [184155 184192])
                            ("stream" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type ("std::ostream" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [184201 184242])
                            ("name" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [184251 184288])
                            ("includeSuccessfulResults" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type "bool")
                                (reparse-symbol classsubparts) [184297 184347])
                            ("shouldDebugBreak" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type "bool")
                                (reparse-symbol classsubparts) [184356 184398])
                            ("warnAboutMissingAssertions" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type "bool")
                                (reparse-symbol classsubparts) [184407 184459])
                            ("warnAboutNoTests" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type "bool")
                                (reparse-symbol classsubparts) [184468 184510])
                            ("abortAfter" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type "int")
                                (reparse-symbol classsubparts) [184519 184554])
                            ("showInvisibles" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type "bool")
                                (reparse-symbol classsubparts) [184563 184603])
                            ("showDurations" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type ("ShowDurations::OrNot" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [184612 184667])
                            ("minDuration" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type "double")
                                (reparse-symbol classsubparts) [184676 184715])
                            ("testSpec" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type ("TestSpec" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [184724 184769])
                            ("hasTestFilters" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type "bool")
                                (reparse-symbol classsubparts) [184778 184818])
                            ("getTestsOrTags" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("std::string" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [184827 184894])
                            ("runOrder" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type ("RunTests::InWhatOrder" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [184903 184954])
                            ("rngSeed" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [184963 185004])
                            ("useColour" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type ("UseColour::YesOrNo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [185013 185062])
                            ("getSectionsToRun" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("std::string" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [185071 185140])
                            ("verbosity" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type ("Verbosity" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [185149 185189])
                            ("benchmarkNoAnalysis" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type "bool")
                                (reparse-symbol classsubparts) [185199 185244])
                            ("benchmarkSamples" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type "int")
                                (reparse-symbol classsubparts) [185253 185294])
                            ("benchmarkConfidenceInterval" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type "double")
                                (reparse-symbol classsubparts) [185303 185358])
                            ("benchmarkResamples" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [185367 185419])
                            ("benchmarkWarmupTime" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type ("std::chrono::milliseconds" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [185428 185494]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [184086 185501])
                    ("std::shared_ptr" variable (:type "int") (reparse-symbol namespacesubparts) [185526 185557]))                  
                :type "namespace")
                nil [183340 185559])
            ("cstdint" include (:system-flag t) nil [185636 185654])
            ("Catch" type
               (:members 
                  ( ("SimplePcg32" type
                       (:members 
                          ( ("std::uint64_t" variable (:type "int") (reparse-symbol classsubparts) [186036 186050])
                            ("public" label nil (reparse-symbol classsubparts) [186055 186062])
                            ("std::uint32_t" variable (:type "int") (reparse-symbol classsubparts) [186091 186105])
                            ("result_type" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("" variable (:type ("min" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [186144 186148]))                                  
                                :type ("constexpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [186114 186150])
                            ("result_type" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("" variable (:type ("max" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [186223 186227]))                                  
                                :type ("constexpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [186193 186229])
                            ("SimplePcg32" function
                               (:constructor-flag t
                                :type ("SimplePcg32" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [186374 186415])
                            ("SimplePcg32" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("seed_" variable (:type ("result_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [186446 186464]))                                  
                                :type ("SimplePcg32" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [186434 186465])
                            ("seed" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("seed_" variable (:type ("result_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [186485 186503]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [186475 186504])
                            ("discard" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("skip" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [186526 186540]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [186513 186541])
                            ("()" function
                               (:prototype-flag t
                                :operator-flag t
                                :type ("result_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [186551 186576])
                            ("private" label nil (reparse-symbol classsubparts) [186582 186590])
                            ("==" function
                               (:prototype-flag t
                                :operator-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("lhs" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SimplePcg32" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [186622 186645])
                                    ("rhs" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SimplePcg32" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [186646 186669]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [186599 186670])
                            ("!=" function
                               (:prototype-flag t
                                :operator-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("lhs" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SimplePcg32" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [186702 186725])
                                    ("rhs" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SimplePcg32" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [186726 186749]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [186679 186750])
                            ("m_state" variable (:type ("std::uint64_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [186893 186915])
                            ("s_inc" variable
                               (:typemodifiers ("static")
                                :constant-flag t
                                :default-value "(0x13ed0cc53f939476ULL << 1ULL) | 1ULL"
                                :type ("std::uint64_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [187184 187258]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [185989 187265]))                  
                :type "namespace")
                nil [185656 187268])
            ("random" include (:system-flag t) nil [187332 187349])
            ("Catch" type
               (:members 
                  ( ("Generators" type
                       (:members 
                          ( ("IGenerator" variable (:type "int") (reparse-symbol namespacesubparts) [187464 187913])
                            ("IGenerator" variable (:type "int") (reparse-symbol namespacesubparts) [187987 188446])
                            ("random" function
                               (:arguments 
                                  ( ("a" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [188733 188737])
                                    ("b" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [188738 188742]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [188721 188842])
                            ("random" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("std::enable_if::type" type (:type "class") nil nil)
                                :arguments 
                                  ( ("a" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [188958 188962])
                                    ("b" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [188963 188967]))                                  
                                :typemodifiers ("typename"))
                                (reparse-symbol namespacesubparts) [188844 189068])
                            ("IGenerator" variable (:type "int") (reparse-symbol namespacesubparts) [189128 189989])
                            ("range" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("GeneratorWrapper" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("start" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [190039 190054])
                                    ("end" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [190055 190068])
                                    ("step" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [190069 190083]))                                  )
                                (reparse-symbol namespacesubparts) [189991 190279])
                            ("range" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("GeneratorWrapper" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("start" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [190329 190344])
                                    ("end" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [190345 190358]))                                  )
                                (reparse-symbol namespacesubparts) [190281 190549])
                            ("IGenerator" variable (:type "int") (reparse-symbol namespacesubparts) [190612 191333])
                            ("from_range" function
                               (:arguments 
                                  ( ("from" variable (:type ("InputIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [191533 191552])
                                    ("to" variable (:type ("InputSentinel" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [191553 191570]))                                  
                                :type ("GeneratorWrapper" type
                                     (:template-specifier 
                                        ( ("ResultType" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol namespacesubparts) [191493 191673])
                            ("from_range" function
                               (:arguments 
                                  ( ("cnt" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Container" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [191809 191830]))                                  
                                :type ("GeneratorWrapper" type
                                     (:template-specifier 
                                        ( ("ResultType" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol namespacesubparts) [191769 191947]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [187369 191950]))                  
                :type "namespace")
                nil [187351 191976])
            ("string" include (:system-flag t) nil [192189 192206])
            ("vector" include (:system-flag t) nil [192207 192224])
            ("memory" include (:system-flag t) nil [192225 192242])
            ("Catch" type
               (:members 
                  ( ("ITestInvoker" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [192366 192386])
                    ("TestCaseInfo" type
                       (:members 
                          ( ("SpecialProperties" type
                               (:members 
                                  ( ("None" variable
                                       (:constant-flag t
                                        :default-value (192465 192466)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [192458 192466])
                                    ("IsHidden" variable
                                       (:constant-flag t
                                        :default-value (192491 192492)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [192480 192492])
                                    ("ShouldFail" variable
                                       (:constant-flag t
                                        :default-value (192524 192525)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [192511 192525])
                                    ("MayFail" variable
                                       (:constant-flag t
                                        :default-value (192554 192555)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [192544 192555])
                                    ("Throws" variable
                                       (:constant-flag t
                                        :default-value (192583 192584)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [192574 192584])
                                    ("NonPortable" variable
                                       (:constant-flag t
                                        :default-value (192617 192618)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [192603 192618])
                                    ("Benchmark" variable
                                       (:constant-flag t
                                        :default-value (192649 192650)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [192637 192650]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [192422 192666])
                            ("TestCaseInfo" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("_name" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [192692 192717])
                                    ("_className" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [192742 192772])
                                    ("_description" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [192797 192829])
                                    ("_tags" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::vector" type
                                             (:template-specifier 
                                                ( ("std::string" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [192854 192892])
                                    ("_lineInfo" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SourceLineInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [192917 192950]))                                  
                                :type ("TestCaseInfo" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [192676 192951])
                            ("setTags" function
                               (:prototype-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("testCaseInfo" variable
                                       (:reference 1
                                        :type ("TestCaseInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [192982 193009])
                                    ("tags" variable (:type ("std::vector" type
                                         (:template-specifier 
                                            ( ("std::string" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [193010 193041]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [192961 193042])
                            ("isHidden" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [193052 193074])
                            ("throws" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [193083 193103])
                            ("okToFail" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [193112 193134])
                            ("expectedToFail" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [193143 193171])
                            ("tagsAsString" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [193181 193214])
                            ("name" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [193224 193241])
                            ("className" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [193250 193272])
                            ("description" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [193281 193305])
                            ("tags" variable (:type ("std::vector" type
                                 (:template-specifier 
                                    ( ("std::string" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [193314 193344])
                            ("lcaseTags" variable (:type ("std::vector" type
                                 (:template-specifier 
                                    ( ("std::string" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [193353 193388])
                            ("lineInfo" variable (:type ("SourceLineInfo" type (:type "class") nil nil)) (reparse-symbol classsubparts) [193397 193421])
                            ("properties" variable (:type ("SpecialProperties" type (:type "class") nil nil)) (reparse-symbol classsubparts) [193430 193459]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [192392 193466])
                    ("TestCase" type
                       (:superclasses 
                          ( ("TestCaseInfo" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [193515 193522])
                            ("TestCase" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("testCase" variable
                                       (:pointer 1
                                        :type ("ITestInvoker" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [193542 193565])
                                    ("" variable
                                       (:reference 1
                                        :type ("TestCaseInfo" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [193566 193580])
                                    ("" variable (:type ("info" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [193581 193587]))                                  
                                :type ("TestCase" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [193532 193588])
                            ("withName" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("_newName" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [193617 193646]))                                  
                                :type ("TestCase" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [193598 193653])
                            ("invoke" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [193663 193683])
                            ("getTestCaseInfo" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("TestCaseInfo" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [193693 193737])
                            ("==" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TestCase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [193766 193789]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [193747 193796])
                            ("<" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TestCase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [193823 193846]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [193805 193853])
                            ("private" label nil (reparse-symbol classsubparts) [193859 193867])
                            ("test" variable (:type ("std::shared_ptr" type
                                 (:template-specifier 
                                    ( ("ITestInvoker" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [193876 193911]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [193472 193918])
                    ("makeTestCase" function
                       (:prototype-flag t
                        :arguments 
                          ( ("testCase" variable
                               (:pointer 1
                                :type ("ITestInvoker" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [193948 193971])
                            ("className" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [194000 194029])
                            ("nameAndTags" variable
                               (:reference 1
                                :constant-flag t
                                :type ("NameAndTags" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [194058 194089])
                            ("lineInfo" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SourceLineInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [194118 194150]))                          
                        :type ("TestCase" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [193924 194151]))                  
                :type "namespace")
                nil [192343 194153])
            ("Catch" type
               (:members 
                  ( ("IRunner" type
                       (:members 
                          ( ("IRunner" function
                               (:prototype-flag t
                                :destructor-flag t
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [194323 194342])
                            ("aborting" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("virtual")
                                :type "bool")
                                (reparse-symbol classsubparts) [194351 194385]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [194298 194392]))                  
                :type "namespace")
                nil [194275 194394])
            ("REQUIRE" variable (:constant-flag t) nil [638689 638696])
            ("REQUIRE_FALSE" variable (:constant-flag t) nil [638793 638806])
            ("REQUIRE_THROWS" variable (:constant-flag t) nil [638947 638961])
            ("REQUIRE_THROWS_AS" variable (:constant-flag t) nil [639066 639083])
            ("REQUIRE_THROWS_WITH" variable (:constant-flag t) nil [639218 639237])
            ("REQUIRE_THROWS_MATCHES" variable (:constant-flag t) nil [639415 639437])
            ("REQUIRE_NOTHROW" variable (:constant-flag t) nil [639640 639655])
            ("CHECK" variable (:constant-flag t) nil [639764 639769])
            ("CHECK_FALSE" variable (:constant-flag t) nil [639874 639885])
            ("CHECKED_IF" variable (:constant-flag t) nil [640034 640044])
            ("CHECKED_ELSE" variable (:constant-flag t) nil [640152 640164])
            ("CHECK_NOFAIL" variable (:constant-flag t) nil [640276 640288])
            ("CHECK_THROWS" variable (:constant-flag t) nil [640442 640454])
            ("CHECK_THROWS_AS" variable (:constant-flag t) nil [640569 640584])
            ("CHECK_THROWS_WITH" variable (:constant-flag t) nil [640728 640745])
            ("CHECK_THROWS_MATCHES" variable (:constant-flag t) nil [640932 640952])
            ("CHECK_NOTHROW" variable (:constant-flag t) nil [641164 641177])
            ("CHECK_THAT" variable (:constant-flag t) nil [641339 641349])
            ("REQUIRE_THAT" variable (:constant-flag t) nil [641470 641482])
            ("INFO" variable (:constant-flag t) nil [641634 641638])
            ("UNSCOPED_INFO" variable (:constant-flag t) nil [641689 641702])
            ("WARN" variable (:constant-flag t) nil [641771 641775])
            ("CAPTURE" variable (:constant-flag t) nil [641897 641904])
            ("TEST_CASE" variable (:constant-flag t) nil [642007 642016])
            ("TEST_CASE_METHOD" variable (:constant-flag t) nil [642071 642087])
            ("METHOD_AS_TEST_CASE" variable (:constant-flag t) nil [642172 642191])
            ("REGISTER_TEST_CASE" variable (:constant-flag t) nil [642273 642291])
            ("SECTION" variable (:constant-flag t) nil [642375 642382])
            ("DYNAMIC_SECTION" variable (:constant-flag t) nil [642436 642451])
            ("FAIL" variable (:constant-flag t) nil [642513 642517])
            ("FAIL_CHECK" variable (:constant-flag t) nil [642644 642654])
            ("SUCCEED" variable (:constant-flag t) nil [642798 642805])
            ("ANON_TEST_CASE" variable (:constant-flag t) nil [642933 642947])
            ("TEMPLATE_TEST_CASE" variable (:constant-flag t) nil [643036 643054])
            ("TEMPLATE_TEST_CASE_SIG" variable (:constant-flag t) nil [643119 643141])
            ("TEMPLATE_TEST_CASE_METHOD" variable (:constant-flag t) nil [643210 643235])
            ("TEMPLATE_TEST_CASE_METHOD_SIG" variable (:constant-flag t) nil [643329 643358])
            ("TEMPLATE_PRODUCT_TEST_CASE" variable (:constant-flag t) nil [643456 643482])
            ("TEMPLATE_PRODUCT_TEST_CASE_SIG" variable (:constant-flag t) nil [643555 643585])
            ("TEMPLATE_PRODUCT_TEST_CASE_METHOD" variable (:constant-flag t) nil [643662 643695])
            ("TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG" variable (:constant-flag t) nil [643797 643834])
            ("TEMPLATE_LIST_TEST_CASE" variable (:constant-flag t) nil [643940 643963])
            ("TEMPLATE_LIST_TEST_CASE_METHOD" variable (:constant-flag t) nil [644031 644061])
            ("STATIC_REQUIRE" variable (:constant-flag t) nil [645660 645674])
            ("STATIC_REQUIRE_FALSE" variable (:constant-flag t) nil [645767 645787])
            ("CATCH_TRANSLATE_EXCEPTION" variable (:constant-flag t) nil [646038 646063])
            ("SCENARIO" variable (:constant-flag t) nil [646170 646178])
            ("SCENARIO_METHOD" variable (:constant-flag t) nil [646232 646247])
            ("GIVEN" variable (:constant-flag t) nil [646346 646351])
            ("AND_GIVEN" variable (:constant-flag t) nil [646428 646437])
            ("WHEN" variable (:constant-flag t) nil [646510 646514])
            ("AND_WHEN" variable (:constant-flag t) nil [646592 646600])
            ("THEN" variable (:constant-flag t) nil [646674 646678])
            ("AND_THEN" variable (:constant-flag t) nil [646756 646764])
            ("Catch::Detail::Approx" using (:type ("Catch::Detail::Approx" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [647236 647264]))          
      :file "catch.hpp"
      :pointmax 657277
      :fsize 657276
      :lastmodtime '(25202 63622 0 0)
      :unmatched-syntax '((symbol 657157 . 657160) (symbol 657146 . 657156) (symbol 657142 . 657145) (symbol 657135 . 657141) (punctuation 657130 . 657131) (punctuation 193579 . 193580) (number 192654 . 192655) (punctuation 192652 . 192653) (punctuation 192651 . 192652) (number 192622 . 192623) (punctuation 192620 . 192621) (punctuation 192619 . 192620) (number 192588 . 192589) (punctuation 192586 . 192587) (punctuation 192585 . 192586) (number 192559 . 192560) (punctuation 192557 . 192558) (punctuation 192556 . 192557) (number 192529 . 192530) (punctuation 192527 . 192528) (punctuation 192526 . 192527) (number 192496 . 192497) (punctuation 192494 . 192495) (punctuation 192493 . 192494) (number 192654 . 192655) (punctuation 192652 . 192653) (punctuation 192651 . 192652) (number 192622 . 192623) (punctuation 192620 . 192621) (punctuation 192619 . 192620) (number 192588 . 192589) (punctuation 192586 . 192587) (punctuation 192585 . 192586) (number 192559 . 192560) (punctuation 192557 . 192558) (punctuation 192556 . 192557) (number 192529 . 192530) (punctuation 192527 . 192528) (punctuation 192526 . 192527) (number 192496 . 192497) (punctuation 192494 . 192495) (punctuation 192493 . 192494) (punctuation 191767 . 191768) (symbol 191757 . 191767) (punctuation 191756 . 191757) (punctuation 191755 . 191756) (symbol 191746 . 191755) (TYPENAME 191737 . 191745) (punctuation 191735 . 191736) (symbol 191724 . 191734) (TYPENAME 191715 . 191723) (punctuation 191703 . 191704) (symbol 191694 . 191703) (TYPENAME 191685 . 191693) (punctuation 191684 . 191685) (TEMPLATE 191675 . 191683) (punctuation 191491 . 191492) (symbol 191481 . 191491) (punctuation 191480 . 191481) (punctuation 191479 . 191480) (punctuation 191478 . 191479) (symbol 191465 . 191478) (punctuation 191464 . 191465) (symbol 191449 . 191464) (punctuation 191448 . 191449) (punctuation 191447 . 191448) (symbol 191444 . 191447) (TYPENAME 191435 . 191443) (punctuation 191433 . 191434) (symbol 191422 . 191432) (TYPENAME 191413 . 191421) (punctuation 191401 . 191402) (symbol 191388 . 191401) (TYPENAME 191379 . 191387) (punctuation 191367 . 191368) (symbol 191354 . 191367) (TYPENAME 191345 . 191353) (punctuation 191344 . 191345) (TEMPLATE 191335 . 191343) (PUBLIC 190605 . 190611) (punctuation 190603 . 190604) (symbol 190597 . 190602) (symbol 190579 . 190596) (CLASS 190573 . 190578) (punctuation 190571 . 190572) (symbol 190570 . 190571) (TYPENAME 190561 . 190569) (punctuation 190560 . 190561) (TEMPLATE 190551 . 190559) (PUBLIC 189121 . 189127) (punctuation 189119 . 189120) (symbol 189113 . 189118) (symbol 189098 . 189112) (CLASS 189092 . 189097) (punctuation 189090 . 189091) (symbol 189089 . 189090) (TYPENAME 189080 . 189088) (punctuation 189079 . 189080) (TEMPLATE 189070 . 189078) (punctuation 188720 . 188721) (punctuation 188719 . 188720) (punctuation 188718 . 188719) (punctuation 188717 . 188718) (symbol 188716 . 188717) (punctuation 188715 . 188716) (symbol 188699 . 188715) (punctuation 188697 . 188698) (symbol 188692 . 188697) (punctuation 188691 . 188692) (punctuation 188690 . 188691) (punctuation 188689 . 188690) (BOOL 188685 . 188689) (punctuation 188683 . 188684) (symbol 188682 . 188683) (punctuation 188681 . 188682) (symbol 188674 . 188681) (punctuation 188673 . 188674) (punctuation 188672 . 188673) (symbol 188669 . 188672) (punctuation 188668 . 188669) (punctuation 188666 . 188667) (punctuation 188665 . 188666) (symbol 188659 . 188664) (punctuation 188658 . 188659) (punctuation 188657 . 188658) (punctuation 188656 . 188657) (symbol 188655 . 188656) (punctuation 188654 . 188655) (symbol 188643 . 188654) (punctuation 188642 . 188643) (punctuation 188641 . 188642) (symbol 188638 . 188641) (punctuation 188637 . 188638) (symbol 188628 . 188637) (punctuation 188627 . 188628) (punctuation 188626 . 188627) (symbol 188623 . 188626) (TYPENAME 188614 . 188622) (punctuation 188612 . 188613) (symbol 188611 . 188612) (TYPENAME 188602 . 188610) (punctuation 188601 . 188602) (TEMPLATE 188592 . 188600) (PUBLIC 187980 . 187986) (punctuation 187978 . 187979) (symbol 187972 . 187977) (symbol 187949 . 187971) (CLASS 187943 . 187948) (punctuation 187941 . 187942) (symbol 187934 . 187941) (TYPENAME 187925 . 187933) (punctuation 187924 . 187925) (TEMPLATE 187915 . 187923) (PUBLIC 187457 . 187463) (punctuation 187455 . 187456) (symbol 187449 . 187454) (symbol 187425 . 187448) (CLASS 187419 . 187424) (punctuation 187417 . 187418) (symbol 187412 . 187417) (TYPENAME 187403 . 187411) (punctuation 187402 . 187403) (TEMPLATE 187393 . 187401) (EXPLICIT 186425 . 186433) (semantic-list 186230 . 186290) (semantic-list 186151 . 186184) (punctuation 186089 . 186090) (symbol 186077 . 186088) (USING 186071 . 186076) (punctuation 186034 . 186035) (symbol 186023 . 186033) (USING 186017 . 186022) (punctuation 185524 . 185525) (symbol 185513 . 185523) (USING 185507 . 185512) (symbol 183429 . 183433) (punctuation 183419 . 183420) (symbol 183413 . 183419) (punctuation 183403 . 183404) (number 183402 . 183403) (punctuation 183400 . 183401) (symbol 183394 . 183399) (ENUM 183363 . 183367) (semantic-list 183153 . 183165) (symbol 183146 . 183153) (semantic-list 183059 . 183097) (CONST 183053 . 183058) (semantic-list 183050 . 183052) (BOOL 183046 . 183050) (OPERATOR 183037 . 183045) (EXPLICIT 183028 . 183036) (punctuation 180210 . 180211) (symbol 180199 . 180209) (USING 180193 . 180198) (punctuation 179748 . 179749) (PUBLIC 178418 . 178424) (punctuation 178416 . 178417) (symbol 178410 . 178415) (symbol 178395 . 178409) (CLASS 178389 . 178394) (punctuation 178383 . 178384) (symbol 178382 . 178383) (TYPENAME 178373 . 178381) (punctuation 178372 . 178373) (TEMPLATE 178363 . 178371) (punctuation 178184 . 178185) (punctuation 178152 . 178153) (punctuation 177891 . 177892) (punctuation 177859 . 177860) (semantic-list 177544 . 177734) (symbol 177535 . 177543) (semantic-list 177532 . 177534) (symbol 177528 . 177532) (BOOL 177523 . 177527) (semantic-list 177475 . 177514) (symbol 177466 . 177474) (CONST 177460 . 177465) (semantic-list 177457 . 177459) (symbol 177454 . 177457) (punctuation 177452 . 177453) (CONST 177447 . 177452) (symbol 177445 . 177446) (punctuation 177260 . 177261) (punctuation 177228 . 177229) (punctuation 176678 . 176679) (semantic-list 175626 . 176576) (symbol 175617 . 175625) (semantic-list 175614 . 175616) (symbol 175610 . 175614) (BOOL 175605 . 175609) (semantic-list 175383 . 175595) (symbol 175374 . 175382) (CONST 175368 . 175373) (semantic-list 175365 . 175367) (symbol 175362 . 175365) (punctuation 175360 . 175361) (CONST 175355 . 175360) (symbol 175353 . 175354) (punctuation 175135 . 175136) (string 174826 . 174871) (string 174763 . 174813) (punctuation 174720 . 174721) (punctuation 174430 . 174431) (punctuation 174402 . 174403) (semantic-list 173972 . 174014) (symbol 173963 . 173971) (semantic-list 173960 . 173962) (symbol 173956 . 173960) (BOOL 173951 . 173955) (semantic-list 173892 . 173941) (symbol 173883 . 173891) (CONST 173877 . 173882) (semantic-list 173874 . 173876) (symbol 173871 . 173874) (punctuation 173869 . 173870) (CONST 173864 . 173869) (symbol 173862 . 173863) (punctuation 173300 . 173301) (punctuation 173272 . 173273) (punctuation 172900 . 172901) (semantic-list 172400 . 172801) (symbol 172391 . 172399) (semantic-list 172388 . 172390) (symbol 172384 . 172388) (BOOL 172379 . 172383) (semantic-list 172321 . 172370) (symbol 172312 . 172320) (CONST 172306 . 172311) (semantic-list 172303 . 172305) (symbol 172300 . 172303) (punctuation 172298 . 172299) (CONST 172293 . 172298) (symbol 172291 . 172292) (punctuation 172102 . 172103) (semantic-list 170201 . 170203) (punctuation 170197 . 170198) (semantic-list 170195 . 170197) (punctuation 170194 . 170195) (semantic-list 170171 . 170194) (punctuation 170162 . 170163) (punctuation 170139 . 170140) (punctuation 170138 . 170139) (semantic-list 170048 . 170137) (symbol 170040 . 170048) (symbol 170035 . 170039) (punctuation 169858 . 169859) (symbol 169857 . 169858) (TYPENAME 169848 . 169856) (punctuation 169847 . 169848) (TEMPLATE 169839 . 169847) (punctuation 169832 . 169833) (punctuation 169831 . 169832) (symbol 169814 . 169831) (punctuation 169812 . 169813) (punctuation 169811 . 169812) (semantic-list 169751 . 169810) (symbol 169728 . 169751) (symbol 169723 . 169727) (semantic-list 169600 . 169717) (punctuation 169598 . 169599) (symbol 169597 . 169598) (punctuation 169596 . 169597) (symbol 169586 . 169596) (punctuation 169584 . 169585) (punctuation 169583 . 169584) (semantic-list 169539 . 169582) (symbol 169525 . 169539) (punctuation 169564 . 169565) (punctuation 169563 . 169564) (punctuation 169562 . 169563) (punctuation 169561 . 169562) (punctuation 169550 . 169551) (symbol 169520 . 169524) (punctuation 169564 . 169565) (punctuation 169563 . 169564) (punctuation 169562 . 169563) (punctuation 169561 . 169562) (punctuation 169550 . 169551) (punctuation 169514 . 169515) (symbol 169512 . 169514) (punctuation 169510 . 169511) (punctuation 169509 . 169510) (punctuation 169508 . 169509) (TYPENAME 169500 . 169508) (punctuation 169498 . 169499) (symbol 169497 . 169498) (TYPENAME 169488 . 169496) (punctuation 169486 . 169487) (symbol 169485 . 169486) (TYPENAME 169476 . 169484) (punctuation 169475 . 169476) (TEMPLATE 169467 . 169475) (semantic-list 169350 . 169462) (punctuation 169348 . 169349) (symbol 169347 . 169348) (punctuation 169346 . 169347) (symbol 169336 . 169346) (punctuation 169334 . 169335) (punctuation 169333 . 169334) (semantic-list 169296 . 169332) (symbol 169282 . 169296) (punctuation 169314 . 169315) (punctuation 169313 . 169314) (punctuation 169312 . 169313) (punctuation 169311 . 169312) (punctuation 169300 . 169301) (symbol 169277 . 169281) (punctuation 169314 . 169315) (punctuation 169313 . 169314) (punctuation 169312 . 169313) (punctuation 169311 . 169312) (punctuation 169300 . 169301) (punctuation 169271 . 169272) (symbol 169269 . 169271) (punctuation 169267 . 169268) (punctuation 169266 . 169267) (punctuation 169265 . 169266) (TYPENAME 169257 . 169265) (punctuation 169255 . 169256) (symbol 169254 . 169255) (TYPENAME 169245 . 169253) (punctuation 169244 . 169245) (TEMPLATE 169236 . 169244) (semantic-list 169172 . 169231) (punctuation 169170 . 169171) (symbol 169169 . 169170) (punctuation 169168 . 169169) (symbol 169158 . 169168) (punctuation 169156 . 169157) (punctuation 169155 . 169156) (semantic-list 169119 . 169154) (symbol 169105 . 169119) (punctuation 169141 . 169142) (symbol 169100 . 169104) (punctuation 169141 . 169142) (punctuation 169094 . 169095) (symbol 169093 . 169094) (TYPENAME 169084 . 169092) (punctuation 169083 . 169084) (TEMPLATE 169075 . 169083) (punctuation 169141 . 169142) (semantic-list 168974 . 169070) (punctuation 168972 . 168973) (symbol 168971 . 168972) (punctuation 168970 . 168971) (symbol 168960 . 168970) (punctuation 168958 . 168959) (punctuation 168957 . 168958) (semantic-list 168896 . 168956) (symbol 168882 . 168896) (punctuation 168938 . 168939) (punctuation 168937 . 168938) (punctuation 168936 . 168937) (punctuation 168935 . 168936) (punctuation 168918 . 168919) (symbol 168877 . 168881) (punctuation 168938 . 168939) (punctuation 168937 . 168938) (punctuation 168936 . 168937) (punctuation 168935 . 168936) (punctuation 168918 . 168919) (punctuation 168871 . 168872) (symbol 168869 . 168871) (punctuation 168867 . 168868) (punctuation 168866 . 168867) (punctuation 168865 . 168866) (TYPENAME 168857 . 168865) (punctuation 168855 . 168856) (symbol 168854 . 168855) (TYPENAME 168845 . 168853) (punctuation 168844 . 168845) (TEMPLATE 168836 . 168844) (punctuation 168619 . 168620) (punctuation 168618 . 168619) (punctuation 168617 . 168618) (punctuation 168616 . 168617) (punctuation 168615 . 168616) (punctuation 168585 . 168586) (punctuation 168574 . 168575) (punctuation 168544 . 168545) (punctuation 168543 . 168544) (punctuation 168542 . 168543) (punctuation 168541 . 168542) (punctuation 168540 . 168541) (symbol 168538 . 168540) (punctuation 168537 . 168538) (symbol 168532 . 168537) (punctuation 168531 . 168532) (punctuation 168530 . 168531) (symbol 168527 . 168530) (punctuation 168526 . 168527) (symbol 168510 . 168526) (punctuation 168504 . 168505) (symbol 168502 . 168504) (punctuation 168500 . 168501) (punctuation 168499 . 168500) (punctuation 168498 . 168499) (TYPENAME 168490 . 168498) (punctuation 168489 . 168490) (TEMPLATE 168481 . 168489) (semantic-list 168159 . 168468) (symbol 168150 . 168158) (semantic-list 168147 . 168149) (symbol 168143 . 168147) (BOOL 168138 . 168142) (semantic-list 168067 . 168128) (symbol 168058 . 168066) (CONST 168052 . 168057) (semantic-list 168049 . 168051) (symbol 168046 . 168049) (punctuation 168044 . 168045) (CONST 168039 . 168044) (symbol 168037 . 168038) (punctuation 167890 . 167891) (punctuation 167889 . 167890) (punctuation 167888 . 167889) (punctuation 167887 . 167888) (punctuation 167862 . 167863) (symbol 167860 . 167862) (punctuation 167858 . 167859) (punctuation 167857 . 167858) (punctuation 167856 . 167857) (TYPENAME 167848 . 167856) (punctuation 167847 . 167848) (TEMPLATE 167838 . 167846) (punctuation 167671 . 167672) (punctuation 167670 . 167671) (punctuation 167669 . 167670) (punctuation 167668 . 167669) (punctuation 167644 . 167645) (punctuation 167618 . 167619) (symbol 167616 . 167618) (punctuation 167614 . 167615) (punctuation 167613 . 167614) (punctuation 167612 . 167613) (TYPENAME 167604 . 167612) (punctuation 167602 . 167603) (symbol 167601 . 167602) (TYPENAME 167592 . 167600) (punctuation 167591 . 167592) (TEMPLATE 167583 . 167591) (punctuation 167509 . 167510) (punctuation 167369 . 167370) (punctuation 167259 . 167260) (punctuation 166756 . 166757) (PUBLIC 165698 . 165704) (punctuation 165696 . 165697) (symbol 165690 . 165695) (symbol 165669 . 165689) (CLASS 165663 . 165668) (punctuation 165657 . 165658) (symbol 165656 . 165657) (TYPENAME 165647 . 165655) (punctuation 165646 . 165647) (TEMPLATE 165638 . 165646) (PUBLIC 165355 . 165361) (punctuation 165353 . 165354) (symbol 165347 . 165352) (symbol 165326 . 165346) (CLASS 165320 . 165325) (punctuation 165314 . 165315) (symbol 165313 . 165314) (TYPENAME 165304 . 165312) (punctuation 165303 . 165304) (TEMPLATE 165295 . 165303) (USING 165267 . 165272) (punctuation 165023 . 165024) (DEFAULT 165016 . 165023) (punctuation 165014 . 165015) (semantic-list 165011 . 165013) (symbol 165001 . 165011) (punctuation 165000 . 165001) (VIRTUAL 164992 . 164999) (punctuation 164809 . 164810) (punctuation 164808 . 164809) (punctuation 164807 . 164808) (punctuation 164806 . 164807) (punctuation 164759 . 164760) (symbol 164755 . 164759) (punctuation 164753 . 164754) (punctuation 164752 . 164753) (punctuation 164751 . 164752) (TYPENAME 164743 . 164751) (punctuation 164741 . 164742) (symbol 164740 . 164741) (TYPENAME 164731 . 164739) (punctuation 164730 . 164731) (TEMPLATE 164722 . 164730) (symbol 164598 . 164606) (CONST 164592 . 164597) (semantic-list 164589 . 164591) (symbol 164585 . 164589) (punctuation 164583 . 164584) (CHAR 164579 . 164583) (CONST 164573 . 164578) (semantic-list 163635 . 163647) (semantic-list 163565 . 163577) (semantic-list 163496 . 163508) (semantic-list 163274 . 163286) (punctuation 163268 . 163269) (symbol 163266 . 163268) (TYPENAME 163257 . 163265) (punctuation 163256 . 163257) (TEMPLATE 163247 . 163255) (punctuation 163039 . 163040) (punctuation 162973 . 162974) (number 162972 . 162973) (punctuation 162970 . 162971) (punctuation 162968 . 162969) (CONST 162963 . 162968) (symbol 162946 . 162962) (punctuation 162945 . 162946) (punctuation 162944 . 162945) (symbol 162934 . 162944) (punctuation 162932 . 162933) (punctuation 162931 . 162932) (CONST 162925 . 162930) (semantic-list 162922 . 162924) (symbol 162910 . 162922) (symbol 162905 . 162909) (VIRTUAL 162897 . 162904) (punctuation 162887 . 162888) (number 162886 . 162887) (punctuation 162884 . 162885) (BOOL 162879 . 162883) (punctuation 162877 . 162878) (punctuation 162876 . 162877) (CONST 162870 . 162875) (semantic-list 162867 . 162869) (symbol 162855 . 162867) (symbol 162850 . 162854) (VIRTUAL 162842 . 162849) (punctuation 162692 . 162693) (symbol 162675 . 162691) (USING 162669 . 162674) (punctuation 162376 . 162377) (DEFAULT 162369 . 162376) (punctuation 162367 . 162368) (semantic-list 162364 . 162366) (symbol 162344 . 162364) (semantic-list 160241 . 160321) (punctuation 160239 . 160240) (symbol 160231 . 160239) (punctuation 160229 . 160230) (symbol 160225 . 160229) (punctuation 160224 . 160225) (symbol 160215 . 160224) (punctuation 160213 . 160214) (punctuation 160212 . 160213) (semantic-list 160134 . 160211) (symbol 160121 . 160134) (symbol 160116 . 160120) (punctuation 160110 . 160111) (symbol 160102 . 160110) (TYPENAME 160093 . 160101) (punctuation 160091 . 160092) (symbol 160087 . 160091) (TYPENAME 160078 . 160086) (punctuation 160077 . 160078) (TEMPLATE 160069 . 160077) (punctuation 159892 . 159893) (symbol 159878 . 159891) (USING 159872 . 159877) (semantic-list 159573 . 159859) (symbol 159564 . 159572) (CONST 159558 . 159563) (semantic-list 159537 . 159557) (symbol 159508 . 159537) (VOID 159503 . 159507) (punctuation 158711 . 158712) (symbol 158702 . 158711) (punctuation 158700 . 158701) (symbol 158689 . 158699) (TYPENAME 158680 . 158688) (punctuation 158678 . 158679) (punctuation 158677 . 158678) (symbol 158676 . 158677) (punctuation 158675 . 158676) (symbol 158666 . 158675) (punctuation 158665 . 158666) (punctuation 158664 . 158665) (symbol 158661 . 158664) (punctuation 158659 . 158660) (symbol 158649 . 158658) (TYPENAME 158640 . 158648) (punctuation 158638 . 158639) (symbol 158637 . 158638) (TYPENAME 158628 . 158636) (punctuation 158627 . 158628) (TEMPLATE 158619 . 158627) (punctuation 158420 . 158421) (symbol 158411 . 158420) (punctuation 158409 . 158410) (symbol 158398 . 158408) (TYPENAME 158389 . 158397) (punctuation 158387 . 158388) (punctuation 158386 . 158387) (symbol 158385 . 158386) (punctuation 158384 . 158385) (symbol 158375 . 158384) (punctuation 158374 . 158375) (punctuation 158373 . 158374) (symbol 158370 . 158373) (punctuation 158368 . 158369) (symbol 158358 . 158367) (TYPENAME 158349 . 158357) (punctuation 158347 . 158348) (symbol 158346 . 158347) (TYPENAME 158337 . 158345) (punctuation 158336 . 158337) (TEMPLATE 158328 . 158336) (punctuation 158129 . 158130) (symbol 158120 . 158129) (punctuation 158118 . 158119) (symbol 158107 . 158117) (TYPENAME 158098 . 158106) (punctuation 158096 . 158097) (punctuation 158095 . 158096) (symbol 158094 . 158095) (punctuation 158093 . 158094) (symbol 158084 . 158093) (punctuation 158083 . 158084) (punctuation 158082 . 158083) (symbol 158079 . 158082) (punctuation 158077 . 158078) (symbol 158067 . 158076) (TYPENAME 158058 . 158066) (punctuation 158056 . 158057) (symbol 158055 . 158056) (TYPENAME 158046 . 158054) (punctuation 158045 . 158046) (TEMPLATE 158037 . 158045) (punctuation 157868 . 157869) (punctuation 157867 . 157868) (symbol 157866 . 157867) (punctuation 157865 . 157866) (symbol 157856 . 157865) (punctuation 157855 . 157856) (punctuation 157854 . 157855) (symbol 157851 . 157854) (punctuation 157849 . 157850) (symbol 157843 . 157848) (TYPENAME 157834 . 157842) (punctuation 157832 . 157833) (symbol 157831 . 157832) (TYPENAME 157822 . 157830) (punctuation 157821 . 157822) (TEMPLATE 157813 . 157821) (punctuation 157608 . 157609) (symbol 157599 . 157608) (punctuation 157597 . 157598) (symbol 157586 . 157596) (TYPENAME 157577 . 157585) (punctuation 157575 . 157576) (punctuation 157574 . 157575) (symbol 157573 . 157574) (punctuation 157572 . 157573) (symbol 157563 . 157572) (punctuation 157562 . 157563) (punctuation 157561 . 157562) (symbol 157558 . 157561) (punctuation 157556 . 157557) (symbol 157546 . 157555) (TYPENAME 157537 . 157545) (punctuation 157535 . 157536) (symbol 157534 . 157535) (TYPENAME 157525 . 157533) (punctuation 157524 . 157525) (TEMPLATE 157516 . 157524) (semantic-list 157191 . 157289) (symbol 157182 . 157190) (CONST 157176 . 157181) (semantic-list 157173 . 157175) (symbol 157165 . 157173) (symbol 157158 . 157164) (punctuation 157157 . 157158) (punctuation 157156 . 157157) (symbol 157153 . 157156) (semantic-list 156928 . 157139) (symbol 156919 . 156927) (CONST 156913 . 156918) (semantic-list 156873 . 156912) (symbol 156868 . 156873) (BOOL 156863 . 156867) (punctuation 156303 . 156304) (symbol 156299 . 156303) (punctuation 156298 . 156299) (punctuation 156297 . 156298) (punctuation 156296 . 156297) (symbol 156291 . 156296) (punctuation 156290 . 156291) (punctuation 156289 . 156290) (punctuation 156288 . 156289) (symbol 156287 . 156288) (punctuation 156285 . 156286) (DOUBLE 156279 . 156285) (punctuation 156278 . 156279) (symbol 156262 . 156278) (punctuation 156261 . 156262) (punctuation 156260 . 156261) (symbol 156257 . 156260) (punctuation 156256 . 156257) (symbol 156247 . 156256) (punctuation 156246 . 156247) (punctuation 156245 . 156246) (symbol 156242 . 156245) (TYPENAME 156233 . 156241) (punctuation 156231 . 156232) (TYPENAME 156222 . 156230) (punctuation 156221 . 156222) (TEMPLATE 156212 . 156220) (punctuation 156054 . 156055) (symbol 156050 . 156054) (punctuation 156049 . 156050) (punctuation 156048 . 156049) (punctuation 156047 . 156048) (symbol 156042 . 156047) (punctuation 156041 . 156042) (punctuation 156040 . 156041) (punctuation 156039 . 156040) (symbol 156038 . 156039) (punctuation 156036 . 156037) (DOUBLE 156030 . 156036) (punctuation 156029 . 156030) (symbol 156013 . 156029) (punctuation 156012 . 156013) (punctuation 156011 . 156012) (symbol 156008 . 156011) (punctuation 156007 . 156008) (symbol 155998 . 156007) (punctuation 155997 . 155998) (punctuation 155996 . 155997) (symbol 155993 . 155996) (TYPENAME 155984 . 155992) (punctuation 155982 . 155983) (TYPENAME 155973 . 155981) (punctuation 155972 . 155973) (TEMPLATE 155963 . 155971) (punctuation 155801 . 155802) (symbol 155797 . 155801) (punctuation 155796 . 155797) (punctuation 155795 . 155796) (punctuation 155794 . 155795) (symbol 155789 . 155794) (punctuation 155788 . 155789) (punctuation 155787 . 155788) (punctuation 155786 . 155787) (symbol 155785 . 155786) (punctuation 155783 . 155784) (DOUBLE 155777 . 155783) (punctuation 155776 . 155777) (symbol 155760 . 155776) (punctuation 155759 . 155760) (punctuation 155758 . 155759) (symbol 155755 . 155758) (punctuation 155754 . 155755) (symbol 155745 . 155754) (punctuation 155744 . 155745) (punctuation 155743 . 155744) (symbol 155740 . 155743) (TYPENAME 155731 . 155739) (punctuation 155729 . 155730) (TYPENAME 155720 . 155728) (punctuation 155719 . 155720) (TEMPLATE 155710 . 155718) (semantic-list 155599 . 155697) (symbol 155590 . 155598) (CONST 155584 . 155589) (semantic-list 155581 . 155583) (symbol 155573 . 155581) (symbol 155566 . 155572) (punctuation 155565 . 155566) (punctuation 155564 . 155565) (symbol 155561 . 155564) (semantic-list 155263 . 155548) (symbol 155254 . 155262) (CONST 155248 . 155253) (semantic-list 155210 . 155247) (symbol 155205 . 155210) (BOOL 155200 . 155204) (semantic-list 154773 . 154868) (symbol 154764 . 154772) (CONST 154758 . 154763) (semantic-list 154755 . 154757) (symbol 154747 . 154755) (symbol 154740 . 154746) (punctuation 154739 . 154740) (punctuation 154738 . 154739) (symbol 154735 . 154738) (semantic-list 154124 . 154722) (symbol 154115 . 154123) (CONST 154109 . 154114) (semantic-list 154071 . 154108) (symbol 154066 . 154071) (BOOL 154061 . 154065) (semantic-list 153631 . 153728) (symbol 153622 . 153630) (CONST 153616 . 153621) (semantic-list 153613 . 153615) (symbol 153605 . 153613) (symbol 153598 . 153604) (punctuation 153597 . 153598) (punctuation 153596 . 153597) (symbol 153593 . 153596) (semantic-list 152959 . 153580) (symbol 152950 . 152958) (CONST 152944 . 152949) (semantic-list 152906 . 152943) (symbol 152901 . 152906) (BOOL 152896 . 152900) (semantic-list 152486 . 152583) (symbol 152477 . 152485) (CONST 152471 . 152476) (semantic-list 152468 . 152470) (symbol 152460 . 152468) (symbol 152453 . 152459) (punctuation 152452 . 152453) (punctuation 152451 . 152452) (symbol 152448 . 152451) (semantic-list 152223 . 152434) (symbol 152214 . 152222) (CONST 152208 . 152213) (semantic-list 152175 . 152207) (symbol 152170 . 152175) (BOOL 152165 . 152169) (punctuation 151737 . 151738) (punctuation 151736 . 151737) (punctuation 151612 . 151613) (punctuation 151611 . 151612) (punctuation 151481 . 151482) (punctuation 151480 . 151481) (punctuation 151354 . 151355) (punctuation 151353 . 151354) (punctuation 151227 . 151228) (punctuation 151226 . 151227) (semantic-list 150836 . 150838) (symbol 150828 . 150836) (symbol 150821 . 150827) (punctuation 150820 . 150821) (punctuation 150819 . 150820) (symbol 150816 . 150819) (semantic-list 150757 . 150787) (symbol 150752 . 150757) (BOOL 150747 . 150751) (semantic-list 150534 . 150563) (symbol 150529 . 150534) (BOOL 150524 . 150528) (semantic-list 150340 . 150369) (symbol 150335 . 150340) (BOOL 150330 . 150334) (semantic-list 150142 . 150171) (symbol 150137 . 150142) (BOOL 150132 . 150136) (semantic-list 149948 . 149977) (symbol 149943 . 149948) (BOOL 149938 . 149942) (semantic-list 149708 . 149710) (symbol 149700 . 149708) (symbol 149693 . 149699) (punctuation 149692 . 149693) (punctuation 149691 . 149692) (symbol 149688 . 149691) (punctuation 148843 . 148844) (CONST 148838 . 148843) (punctuation 148836 . 148837) (semantic-list 148826 . 148836) (punctuation 148821 . 148822) (semantic-list 148432 . 148469) (symbol 148423 . 148431) (CONST 148417 . 148422) (semantic-list 148414 . 148416) (symbol 148406 . 148414) (symbol 148399 . 148405) (punctuation 148398 . 148399) (punctuation 148397 . 148398) (symbol 148394 . 148397) (semantic-list 148347 . 148388) (symbol 148338 . 148346) (CONST 148332 . 148337) (semantic-list 148314 . 148331) (symbol 148309 . 148314) (BOOL 148304 . 148308) (punctuation 148161 . 148162) (CONST 148156 . 148161) (punctuation 148154 . 148155) (semantic-list 148144 . 148154) (punctuation 148139 . 148140) (punctuation 148050 . 148051) (semantic-list 148040 . 148050) (BOOL 148036 . 148040) (punctuation 148035 . 148036) (symbol 148027 . 148035) (punctuation 148026 . 148027) (punctuation 148025 . 148026) (symbol 148022 . 148025) (semantic-list 146792 . 146794) (symbol 146784 . 146792) (symbol 146777 . 146783) (punctuation 146776 . 146777) (punctuation 146775 . 146776) (symbol 146772 . 146775) (semantic-list 146720 . 146743) (symbol 146715 . 146720) (BOOL 146710 . 146714) (semantic-list 146024 . 146026) (symbol 146016 . 146024) (symbol 146009 . 146015) (punctuation 146008 . 146009) (punctuation 146007 . 146008) (symbol 146004 . 146007) (semantic-list 145952 . 145975) (symbol 145947 . 145952) (BOOL 145942 . 145946) (semantic-list 145678 . 145680) (symbol 145670 . 145678) (symbol 145663 . 145669) (punctuation 145662 . 145663) (punctuation 145661 . 145662) (symbol 145658 . 145661) (semantic-list 145606 . 145629) (symbol 145601 . 145606) (BOOL 145596 . 145600) (ENUM 145427 . 145431) (semantic-list 145113 . 145115) (symbol 145105 . 145113) (symbol 145098 . 145104) (punctuation 145097 . 145098) (punctuation 145096 . 145097) (symbol 145093 . 145096) (semantic-list 145045 . 145071) (symbol 145040 . 145045) (BOOL 145035 . 145039) (semantic-list 143922 . 144001) (symbol 143913 . 143921) (CONST 143907 . 143912) (semantic-list 143904 . 143906) (symbol 143896 . 143904) (symbol 143889 . 143895) (punctuation 143888 . 143889) (punctuation 143887 . 143888) (symbol 143884 . 143887) (semantic-list 143797 . 143870) (symbol 143788 . 143796) (CONST 143782 . 143787) (semantic-list 143762 . 143781) (symbol 143757 . 143762) (BOOL 143752 . 143756) (semantic-list 142724 . 143258) (symbol 142715 . 142723) (CONST 142709 . 142714) (semantic-list 142706 . 142708) (symbol 142698 . 142706) (symbol 142691 . 142697) (punctuation 142690 . 142691) (punctuation 142689 . 142690) (symbol 142686 . 142689) (semantic-list 142477 . 142673) (symbol 142468 . 142476) (CONST 142462 . 142467) (semantic-list 142442 . 142461) (symbol 142437 . 142442) (BOOL 142432 . 142436) (semantic-list 141520 . 142055) (symbol 141511 . 141519) (CONST 141505 . 141510) (semantic-list 141502 . 141504) (symbol 141494 . 141502) (symbol 141487 . 141493) (punctuation 141486 . 141487) (punctuation 141485 . 141486) (symbol 141482 . 141485) (semantic-list 141272 . 141469) (symbol 141263 . 141271) (CONST 141257 . 141262) (semantic-list 141237 . 141256) (symbol 141232 . 141237) (BOOL 141227 . 141231) (punctuation 139902 . 139903) (DELETE 139896 . 139902) (punctuation 139894 . 139895) (semantic-list 139864 . 139893) (punctuation 139862 . 139863) (OPERATOR 139853 . 139861) (punctuation 139851 . 139852) (symbol 139833 . 139851) (punctuation 139819 . 139820) (DEFAULT 139812 . 139819) (punctuation 139810 . 139811) (semantic-list 139780 . 139809) (symbol 139761 . 139779) (punctuation 139747 . 139748) (DEFAULT 139740 . 139747) (punctuation 139738 . 139739) (semantic-list 139735 . 139737) (symbol 139717 . 139735) (string 137751 . 137753) (OPERATOR 137742 . 137750) (symbol 137735 . 137741) (punctuation 137734 . 137735) (punctuation 137733 . 137734) (symbol 137727 . 137733) (string 137699 . 137701) (OPERATOR 137690 . 137698) (symbol 137683 . 137689) (punctuation 137682 . 137683) (punctuation 137681 . 137682) (symbol 137675 . 137681) (punctuation 137328 . 137329) (symbol 137324 . 137328) (punctuation 137323 . 137324) (punctuation 137322 . 137323) (punctuation 137321 . 137322) (symbol 137316 . 137321) (punctuation 137315 . 137316) (punctuation 137314 . 137315) (punctuation 137313 . 137314) (symbol 137312 . 137313) (punctuation 137310 . 137311) (DOUBLE 137304 . 137310) (punctuation 137303 . 137304) (symbol 137287 . 137303) (punctuation 137286 . 137287) (punctuation 137285 . 137286) (symbol 137282 . 137285) (punctuation 137281 . 137282) (symbol 137272 . 137281) (punctuation 137271 . 137272) (punctuation 137270 . 137271) (symbol 137267 . 137270) (TYPENAME 137258 . 137266) (punctuation 137256 . 137257) (TYPENAME 137247 . 137255) (punctuation 137245 . 137246) (symbol 137244 . 137245) (TYPENAME 137235 . 137243) (punctuation 137234 . 137235) (TEMPLATE 137225 . 137233) (punctuation 137024 . 137025) (symbol 137020 . 137024) (punctuation 137019 . 137020) (punctuation 137018 . 137019) (punctuation 137017 . 137018) (symbol 137012 . 137017) (punctuation 137011 . 137012) (punctuation 137010 . 137011) (punctuation 137009 . 137010) (symbol 137008 . 137009) (punctuation 137006 . 137007) (DOUBLE 137000 . 137006) (punctuation 136999 . 137000) (symbol 136983 . 136999) (punctuation 136982 . 136983) (punctuation 136981 . 136982) (symbol 136978 . 136981) (punctuation 136977 . 136978) (symbol 136968 . 136977) (punctuation 136967 . 136968) (punctuation 136966 . 136967) (symbol 136963 . 136966) (TYPENAME 136954 . 136962) (punctuation 136952 . 136953) (TYPENAME 136943 . 136951) (punctuation 136941 . 136942) (symbol 136940 . 136941) (TYPENAME 136931 . 136939) (punctuation 136930 . 136931) (TEMPLATE 136921 . 136929) (punctuation 136714 . 136715) (symbol 136710 . 136714) (punctuation 136709 . 136710) (punctuation 136708 . 136709) (punctuation 136707 . 136708) (symbol 136702 . 136707) (punctuation 136701 . 136702) (punctuation 136700 . 136701) (punctuation 136699 . 136700) (symbol 136698 . 136699) (punctuation 136696 . 136697) (DOUBLE 136690 . 136696) (punctuation 136689 . 136690) (symbol 136673 . 136689) (punctuation 136672 . 136673) (punctuation 136671 . 136672) (symbol 136668 . 136671) (punctuation 136667 . 136668) (symbol 136658 . 136667) (punctuation 136657 . 136658) (punctuation 136656 . 136657) (symbol 136653 . 136656) (TYPENAME 136644 . 136652) (punctuation 136642 . 136643) (TYPENAME 136633 . 136641) (punctuation 136631 . 136632) (symbol 136630 . 136631) (TYPENAME 136621 . 136629) (punctuation 136620 . 136621) (TEMPLATE 136611 . 136619) (punctuation 136447 . 136448) (symbol 136443 . 136447) (punctuation 136442 . 136443) (punctuation 136441 . 136442) (punctuation 136440 . 136441) (symbol 136435 . 136440) (punctuation 136434 . 136435) (punctuation 136433 . 136434) (punctuation 136432 . 136433) (symbol 136431 . 136432) (punctuation 136429 . 136430) (DOUBLE 136423 . 136429) (punctuation 136422 . 136423) (symbol 136406 . 136422) (punctuation 136405 . 136406) (punctuation 136404 . 136405) (symbol 136401 . 136404) (punctuation 136400 . 136401) (symbol 136391 . 136400) (punctuation 136390 . 136391) (punctuation 136389 . 136390) (symbol 136386 . 136389) (TYPENAME 136377 . 136385) (punctuation 136375 . 136376) (TYPENAME 136366 . 136374) (punctuation 136364 . 136365) (symbol 136363 . 136364) (TYPENAME 136354 . 136362) (punctuation 136353 . 136354) (TEMPLATE 136344 . 136352) (punctuation 136180 . 136181) (symbol 136176 . 136180) (punctuation 136175 . 136176) (punctuation 136174 . 136175) (punctuation 136173 . 136174) (symbol 136168 . 136173) (punctuation 136167 . 136168) (punctuation 136166 . 136167) (punctuation 136165 . 136166) (symbol 136164 . 136165) (punctuation 136162 . 136163) (DOUBLE 136156 . 136162) (punctuation 136155 . 136156) (symbol 136139 . 136155) (punctuation 136138 . 136139) (punctuation 136137 . 136138) (symbol 136134 . 136137) (punctuation 136133 . 136134) (symbol 136124 . 136133) (punctuation 136123 . 136124) (punctuation 136122 . 136123) (symbol 136119 . 136122) (TYPENAME 136110 . 136118) (punctuation 136108 . 136109) (TYPENAME 136099 . 136107) (punctuation 136097 . 136098) (symbol 136096 . 136097) (TYPENAME 136087 . 136095) (punctuation 136086 . 136087) (TEMPLATE 136077 . 136085) (punctuation 135913 . 135914) (symbol 135909 . 135913) (punctuation 135908 . 135909) (punctuation 135907 . 135908) (punctuation 135906 . 135907) (symbol 135901 . 135906) (punctuation 135900 . 135901) (punctuation 135899 . 135900) (punctuation 135898 . 135899) (symbol 135897 . 135898) (punctuation 135895 . 135896) (DOUBLE 135889 . 135895) (punctuation 135888 . 135889) (symbol 135872 . 135888) (punctuation 135871 . 135872) (punctuation 135870 . 135871) (symbol 135867 . 135870) (punctuation 135866 . 135867) (symbol 135857 . 135866) (punctuation 135856 . 135857) (punctuation 135855 . 135856) (symbol 135852 . 135855) (TYPENAME 135843 . 135851) (punctuation 135841 . 135842) (TYPENAME 135832 . 135840) (punctuation 135830 . 135831) (symbol 135829 . 135830) (TYPENAME 135820 . 135828) (punctuation 135819 . 135820) (TEMPLATE 135810 . 135818) (punctuation 135646 . 135647) (symbol 135642 . 135646) (punctuation 135641 . 135642) (punctuation 135640 . 135641) (punctuation 135639 . 135640) (symbol 135634 . 135639) (punctuation 135633 . 135634) (punctuation 135632 . 135633) (punctuation 135631 . 135632) (symbol 135630 . 135631) (punctuation 135628 . 135629) (DOUBLE 135622 . 135628) (punctuation 135621 . 135622) (symbol 135605 . 135621) (punctuation 135604 . 135605) (punctuation 135603 . 135604) (symbol 135600 . 135603) (punctuation 135599 . 135600) (symbol 135590 . 135599) (punctuation 135589 . 135590) (punctuation 135588 . 135589) (symbol 135585 . 135588) (TYPENAME 135576 . 135584) (punctuation 135574 . 135575) (TYPENAME 135565 . 135573) (punctuation 135563 . 135564) (symbol 135562 . 135563) (TYPENAME 135553 . 135561) (punctuation 135552 . 135553) (TEMPLATE 135543 . 135551) (punctuation 135408 . 135409) (symbol 135404 . 135408) (punctuation 135403 . 135404) (punctuation 135402 . 135403) (punctuation 135401 . 135402) (symbol 135396 . 135401) (punctuation 135395 . 135396) (punctuation 135394 . 135395) (punctuation 135393 . 135394) (symbol 135392 . 135393) (punctuation 135390 . 135391) (DOUBLE 135384 . 135390) (punctuation 135383 . 135384) (symbol 135367 . 135383) (punctuation 135366 . 135367) (punctuation 135365 . 135366) (symbol 135362 . 135365) (punctuation 135361 . 135362) (symbol 135352 . 135361) (punctuation 135351 . 135352) (punctuation 135350 . 135351) (symbol 135347 . 135350) (TYPENAME 135338 . 135346) (punctuation 135336 . 135337) (TYPENAME 135327 . 135335) (punctuation 135325 . 135326) (symbol 135324 . 135325) (TYPENAME 135315 . 135323) (punctuation 135314 . 135315) (TEMPLATE 135305 . 135313) (punctuation 135170 . 135171) (symbol 135166 . 135170) (punctuation 135165 . 135166) (punctuation 135164 . 135165) (punctuation 135163 . 135164) (symbol 135158 . 135163) (punctuation 135157 . 135158) (punctuation 135156 . 135157) (punctuation 135155 . 135156) (symbol 135154 . 135155) (punctuation 135152 . 135153) (DOUBLE 135146 . 135152) (punctuation 135145 . 135146) (symbol 135129 . 135145) (punctuation 135128 . 135129) (punctuation 135127 . 135128) (symbol 135124 . 135127) (punctuation 135123 . 135124) (symbol 135114 . 135123) (punctuation 135113 . 135114) (punctuation 135112 . 135113) (symbol 135109 . 135112) (TYPENAME 135100 . 135108) (punctuation 135098 . 135099) (TYPENAME 135089 . 135097) (punctuation 135087 . 135088) (symbol 135086 . 135087) (TYPENAME 135077 . 135085) (punctuation 135076 . 135077) (TEMPLATE 135067 . 135075) (punctuation 134933 . 134934) (symbol 134929 . 134933) (punctuation 134928 . 134929) (punctuation 134927 . 134928) (punctuation 134926 . 134927) (symbol 134921 . 134926) (punctuation 134920 . 134921) (punctuation 134919 . 134920) (punctuation 134918 . 134919) (symbol 134917 . 134918) (punctuation 134915 . 134916) (DOUBLE 134909 . 134915) (punctuation 134908 . 134909) (symbol 134892 . 134908) (punctuation 134891 . 134892) (punctuation 134890 . 134891) (symbol 134887 . 134890) (punctuation 134886 . 134887) (symbol 134877 . 134886) (punctuation 134876 . 134877) (punctuation 134875 . 134876) (symbol 134872 . 134875) (TYPENAME 134863 . 134871) (punctuation 134861 . 134862) (TYPENAME 134852 . 134860) (punctuation 134850 . 134851) (symbol 134849 . 134850) (TYPENAME 134840 . 134848) (punctuation 134839 . 134840) (TEMPLATE 134830 . 134838) (punctuation 134634 . 134635) (symbol 134630 . 134634) (punctuation 134629 . 134630) (punctuation 134628 . 134629) (punctuation 134627 . 134628) (symbol 134622 . 134627) (punctuation 134621 . 134622) (punctuation 134620 . 134621) (punctuation 134619 . 134620) (symbol 134618 . 134619) (punctuation 134616 . 134617) (DOUBLE 134610 . 134616) (punctuation 134609 . 134610) (symbol 134593 . 134609) (punctuation 134592 . 134593) (punctuation 134591 . 134592) (symbol 134588 . 134591) (punctuation 134587 . 134588) (symbol 134578 . 134587) (punctuation 134577 . 134578) (punctuation 134576 . 134577) (symbol 134573 . 134576) (TYPENAME 134564 . 134572) (punctuation 134562 . 134563) (TYPENAME 134553 . 134561) (punctuation 134551 . 134552) (symbol 134550 . 134551) (TYPENAME 134541 . 134549) (punctuation 134540 . 134541) (TEMPLATE 134531 . 134539) (EXPLICIT 134441 . 134449) (punctuation 134431 . 134432) (symbol 134427 . 134431) (punctuation 134426 . 134427) (punctuation 134425 . 134426) (punctuation 134424 . 134425) (symbol 134419 . 134424) (punctuation 134418 . 134419) (punctuation 134417 . 134418) (punctuation 134416 . 134417) (symbol 134415 . 134416) (punctuation 134413 . 134414) (DOUBLE 134407 . 134413) (punctuation 134406 . 134407) (symbol 134390 . 134406) (punctuation 134389 . 134390) (punctuation 134388 . 134389) (symbol 134385 . 134388) (punctuation 134384 . 134385) (symbol 134375 . 134384) (punctuation 134374 . 134375) (punctuation 134373 . 134374) (symbol 134370 . 134373) (TYPENAME 134361 . 134369) (punctuation 134359 . 134360) (TYPENAME 134350 . 134358) (punctuation 134348 . 134349) (symbol 134347 . 134348) (TYPENAME 134338 . 134346) (punctuation 134337 . 134338) (TEMPLATE 134328 . 134336) (punctuation 134051 . 134052) (symbol 134047 . 134051) (punctuation 134046 . 134047) (punctuation 134045 . 134046) (punctuation 134044 . 134045) (symbol 134039 . 134044) (punctuation 134038 . 134039) (punctuation 134037 . 134038) (punctuation 134036 . 134037) (symbol 134035 . 134036) (punctuation 134033 . 134034) (DOUBLE 134027 . 134033) (punctuation 134026 . 134027) (symbol 134010 . 134026) (punctuation 134009 . 134010) (punctuation 134008 . 134009) (symbol 134005 . 134008) (punctuation 134004 . 134005) (symbol 133995 . 134004) (punctuation 133994 . 133995) (punctuation 133993 . 133994) (symbol 133990 . 133993) (TYPENAME 133981 . 133989) (punctuation 133979 . 133980) (TYPENAME 133970 . 133978) (punctuation 133968 . 133969) (symbol 133967 . 133968) (TYPENAME 133958 . 133966) (punctuation 133957 . 133958) (TEMPLATE 133948 . 133956) (EXPLICIT 133837 . 133845) (semantic-list 131776 . 132222) (symbol 131767 . 131775) (CONST 131761 . 131766) (semantic-list 131673 . 131760) (symbol 131664 . 131673) (symbol 131657 . 131663) (punctuation 131656 . 131657) (punctuation 131655 . 131656) (symbol 131652 . 131655) (punctuation 130897 . 130898) (symbol 130876 . 130896) (USING 130870 . 130875) (punctuation 130812 . 130813) (symbol 130785 . 130811) (USING 130779 . 130784) (semantic-list 130214 . 130216) (symbol 130190 . 130214) (VOID 130185 . 130189) (VIRTUAL 130177 . 130184) (punctuation 129114 . 129115) (symbol 129094 . 129113) (USING 129088 . 129093) (punctuation 127738 . 127739) (CONST 127733 . 127738) (semantic-list 127730 . 127732) (BOOL 127726 . 127730) (OPERATOR 127717 . 127725) (EXPLICIT 127708 . 127716) (punctuation 127426 . 127427) (DOUBLE 127420 . 127426) (punctuation 127418 . 127419) (punctuation 127417 . 127418) (CONST 127411 . 127416) (semantic-list 127408 . 127410) (symbol 127391 . 127408) (symbol 127386 . 127390) (punctuation 127376 . 127377) (INT 127373 . 127376) (UNSIGNED 127364 . 127372) (punctuation 127362 . 127363) (punctuation 127361 . 127362) (CONST 127355 . 127360) (semantic-list 127352 . 127354) (symbol 127330 . 127352) (symbol 127325 . 127329) (punctuation 127305 . 127306) (punctuation 127304 . 127305) (CONST 127298 . 127303) (semantic-list 127295 . 127297) (symbol 127273 . 127295) (symbol 127268 . 127272) (punctuation 127248 . 127249) (punctuation 127247 . 127248) (CONST 127241 . 127246) (semantic-list 127238 . 127240) (symbol 127217 . 127238) (symbol 127212 . 127216) (punctuation 127103 . 127104) (punctuation 127102 . 127103) (semantic-list 127099 . 127101) (symbol 127072 . 127099) (symbol 127067 . 127071) (punctuation 127051 . 127052) (punctuation 127050 . 127051) (semantic-list 127047 . 127049) (symbol 127016 . 127047) (symbol 127011 . 127015) (punctuation 118107 . 118108) (punctuation 118106 . 118107) (punctuation 118105 . 118106) (punctuation 118036 . 118037) (symbol 118034 . 118036) (punctuation 118032 . 118033) (punctuation 118031 . 118032) (punctuation 118030 . 118031) (TYPENAME 118022 . 118030) (punctuation 118020 . 118021) (symbol 118019 . 118020) (TYPENAME 118010 . 118018) (punctuation 118009 . 118010) (TEMPLATE 118001 . 118009) (punctuation 117345 . 117346) (punctuation 117306 . 117307) (DELETE 117300 . 117306) (punctuation 117298 . 117299) (semantic-list 117269 . 117297) (symbol 117256 . 117269) (EXPLICIT 117191 . 117199) (punctuation 115732 . 115733) (BOOL 115728 . 115732) (punctuation 115726 . 115727) (punctuation 115725 . 115726) (CONST 115719 . 115724) (semantic-list 115716 . 115718) (symbol 115705 . 115716) (symbol 115700 . 115704) (punctuation 114392 . 114393) (punctuation 114391 . 114392) (symbol 114384 . 114391) (punctuation 114383 . 114384) (punctuation 114382 . 114383) (symbol 114379 . 114382) (punctuation 114377 . 114378) (punctuation 114376 . 114377) (semantic-list 114323 . 114375) (punctuation 114321 . 114322) (punctuation 114320 . 114321) (OPERATOR 114311 . 114319) (symbol 114306 . 114310) (FRIEND 114299 . 114305) (punctuation 114288 . 114289) (CONST 114283 . 114288) (semantic-list 114280 . 114282) (BOOL 114276 . 114280) (OPERATOR 114267 . 114275) (EXPLICIT 114258 . 114266) (punctuation 114247 . 114248) (DELETE 114241 . 114247) (punctuation 114239 . 114240) (semantic-list 114213 . 114238) (punctuation 114211 . 114212) (OPERATOR 114202 . 114210) (punctuation 114200 . 114201) (symbol 114186 . 114200) (punctuation 113971 . 113972) (FRIEND 113910 . 113916) (punctuation 113900 . 113901) (punctuation 111560 . 111561) (number 111559 . 111560) (punctuation 111557 . 111558) (punctuation 111555 . 111556) (symbol 111538 . 111555) (punctuation 111536 . 111537) (punctuation 111535 . 111536) (semantic-list 111475 . 111534) (symbol 111452 . 111475) (symbol 111447 . 111451) (VIRTUAL 111439 . 111446) (semantic-list 110310 . 110364) (punctuation 110308 . 110309) (BOOL 110304 . 110308) (punctuation 110303 . 110304) (symbol 110296 . 110303) (punctuation 110294 . 110295) (punctuation 110293 . 110294) (semantic-list 110278 . 110292) (punctuation 110277 . 110278) (punctuation 110276 . 110277) (OPERATOR 110267 . 110275) (symbol 110262 . 110266) (semantic-list 110196 . 110252) (punctuation 110194 . 110195) (punctuation 110193 . 110194) (CONST 110188 . 110193) (symbol 110186 . 110187) (punctuation 110185 . 110186) (symbol 110178 . 110185) (punctuation 110176 . 110177) (punctuation 110175 . 110176) (semantic-list 110158 . 110174) (punctuation 110156 . 110157) (punctuation 110155 . 110156) (OPERATOR 110146 . 110154) (symbol 110141 . 110145) (punctuation 110131 . 110132) (symbol 110130 . 110131) (TYPENAME 110121 . 110129) (punctuation 110120 . 110121) (TEMPLATE 110112 . 110120) (semantic-list 109815 . 109871) (punctuation 109813 . 109814) (symbol 109809 . 109813) (punctuation 109808 . 109809) (symbol 109799 . 109808) (punctuation 109797 . 109798) (punctuation 109796 . 109797) (CONST 109790 . 109795) (semantic-list 109787 . 109789) (symbol 109774 . 109787) (symbol 109769 . 109773) (semantic-list 109561 . 109759) (CONST 109555 . 109560) (punctuation 109553 . 109554) (punctuation 109552 . 109553) (CONST 109547 . 109552) (symbol 109542 . 109546) (punctuation 109540 . 109541) (symbol 109536 . 109540) (punctuation 109535 . 109536) (symbol 109525 . 109535) (punctuation 109523 . 109524) (punctuation 109522 . 109523) (semantic-list 109506 . 109521) (punctuation 109504 . 109505) (punctuation 109503 . 109504) (OPERATOR 109494 . 109502) (symbol 109489 . 109493) (punctuation 109479 . 109480) (symbol 109475 . 109479) (TYPENAME 109466 . 109474) (punctuation 109465 . 109466) (TEMPLATE 109457 . 109465) (semantic-list 109249 . 109447) (CONST 109243 . 109248) (punctuation 109241 . 109242) (punctuation 109240 . 109241) (CONST 109235 . 109240) (symbol 109230 . 109234) (punctuation 109228 . 109229) (symbol 109224 . 109228) (punctuation 109223 . 109224) (symbol 109213 . 109223) (punctuation 109211 . 109212) (punctuation 109210 . 109211) (semantic-list 109194 . 109209) (punctuation 109192 . 109193) (punctuation 109191 . 109192) (OPERATOR 109182 . 109190) (symbol 109177 . 109181) (punctuation 109167 . 109168) (symbol 109163 . 109167) (TYPENAME 109154 . 109162) (punctuation 109153 . 109154) (TEMPLATE 109145 . 109153) (semantic-list 109052 . 109135) (CONST 109046 . 109051) (punctuation 109044 . 109045) (punctuation 109043 . 109044) (CONST 109038 . 109043) (symbol 109033 . 109037) (punctuation 109031 . 109032) (symbol 109027 . 109031) (punctuation 109026 . 109027) (symbol 109016 . 109026) (punctuation 109014 . 109015) (punctuation 109013 . 109014) (semantic-list 108995 . 109012) (punctuation 108993 . 108994) (OPERATOR 108984 . 108992) (symbol 108979 . 108983) (punctuation 108969 . 108970) (symbol 108965 . 108969) (TYPENAME 108956 . 108964) (punctuation 108955 . 108956) (TEMPLATE 108946 . 108954) (semantic-list 108854 . 108937) (CONST 108848 . 108853) (punctuation 108846 . 108847) (punctuation 108845 . 108846) (CONST 108840 . 108845) (symbol 108835 . 108839) (punctuation 108833 . 108834) (symbol 108829 . 108833) (punctuation 108828 . 108829) (symbol 108818 . 108828) (punctuation 108816 . 108817) (punctuation 108815 . 108816) (semantic-list 108797 . 108814) (punctuation 108795 . 108796) (OPERATOR 108786 . 108794) (symbol 108781 . 108785) (punctuation 108771 . 108772) (symbol 108767 . 108771) (TYPENAME 108758 . 108766) (punctuation 108757 . 108758) (TEMPLATE 108748 . 108756) (semantic-list 108656 . 108739) (CONST 108650 . 108655) (punctuation 108648 . 108649) (punctuation 108647 . 108648) (CONST 108642 . 108647) (symbol 108637 . 108641) (punctuation 108635 . 108636) (symbol 108631 . 108635) (punctuation 108630 . 108631) (symbol 108620 . 108630) (punctuation 108618 . 108619) (punctuation 108617 . 108618) (semantic-list 108599 . 108616) (punctuation 108597 . 108598) (OPERATOR 108588 . 108596) (symbol 108583 . 108587) (punctuation 108573 . 108574) (symbol 108569 . 108573) (TYPENAME 108560 . 108568) (punctuation 108559 . 108560) (TEMPLATE 108550 . 108558) (semantic-list 108456 . 108541) (CONST 108450 . 108455) (punctuation 108448 . 108449) (punctuation 108447 . 108448) (CONST 108442 . 108447) (symbol 108437 . 108441) (punctuation 108435 . 108436) (symbol 108431 . 108435) (punctuation 108430 . 108431) (symbol 108420 . 108430) (punctuation 108418 . 108419) (punctuation 108417 . 108418) (semantic-list 108397 . 108416) (punctuation 108395 . 108396) (punctuation 108394 . 108395) (OPERATOR 108385 . 108393) (symbol 108380 . 108384) (punctuation 108370 . 108371) (symbol 108366 . 108370) (TYPENAME 108357 . 108365) (punctuation 108356 . 108357) (TEMPLATE 108348 . 108356) (semantic-list 108254 . 108339) (CONST 108248 . 108253) (punctuation 108246 . 108247) (punctuation 108245 . 108246) (CONST 108240 . 108245) (symbol 108235 . 108239) (punctuation 108233 . 108234) (symbol 108229 . 108233) (punctuation 108228 . 108229) (symbol 108218 . 108228) (punctuation 108216 . 108217) (punctuation 108215 . 108216) (semantic-list 108195 . 108214) (punctuation 108193 . 108194) (punctuation 108192 . 108193) (OPERATOR 108183 . 108191) (symbol 108178 . 108182) (punctuation 108168 . 108169) (symbol 108164 . 108168) (TYPENAME 108155 . 108163) (punctuation 108154 . 108155) (TEMPLATE 108146 . 108154) (semantic-list 108054 . 108137) (CONST 108048 . 108053) (punctuation 108046 . 108047) (punctuation 108045 . 108046) (CONST 108040 . 108045) (symbol 108035 . 108039) (punctuation 108033 . 108034) (symbol 108029 . 108033) (punctuation 108028 . 108029) (symbol 108018 . 108028) (punctuation 108016 . 108017) (punctuation 108015 . 108016) (semantic-list 107995 . 108014) (punctuation 107993 . 107994) (OPERATOR 107984 . 107992) (symbol 107979 . 107983) (punctuation 107969 . 107970) (symbol 107965 . 107969) (TYPENAME 107956 . 107964) (punctuation 107955 . 107956) (TEMPLATE 107947 . 107955) (semantic-list 107855 . 107938) (CONST 107849 . 107854) (punctuation 107847 . 107848) (punctuation 107846 . 107847) (CONST 107841 . 107846) (symbol 107836 . 107840) (punctuation 107834 . 107835) (symbol 107830 . 107834) (punctuation 107829 . 107830) (symbol 107819 . 107829) (punctuation 107817 . 107818) (punctuation 107816 . 107817) (semantic-list 107796 . 107815) (punctuation 107794 . 107795) (OPERATOR 107785 . 107793) (symbol 107780 . 107784) (punctuation 107770 . 107771) (symbol 107766 . 107770) (TYPENAME 107757 . 107765) (punctuation 107756 . 107757) (TEMPLATE 107748 . 107756) (semantic-list 107672 . 107738) (CONST 107666 . 107671) (punctuation 107664 . 107665) (BOOL 107660 . 107664) (punctuation 107658 . 107659) (symbol 107654 . 107658) (punctuation 107653 . 107654) (symbol 107643 . 107653) (punctuation 107641 . 107642) (punctuation 107640 . 107641) (semantic-list 107627 . 107639) (punctuation 107625 . 107626) (punctuation 107624 . 107625) (OPERATOR 107615 . 107623) (symbol 107610 . 107614) (semantic-list 107518 . 107601) (CONST 107512 . 107517) (punctuation 107510 . 107511) (punctuation 107509 . 107510) (CONST 107504 . 107509) (symbol 107499 . 107503) (punctuation 107497 . 107498) (symbol 107493 . 107497) (punctuation 107492 . 107493) (symbol 107482 . 107492) (punctuation 107480 . 107481) (punctuation 107479 . 107480) (semantic-list 107459 . 107478) (punctuation 107457 . 107458) (punctuation 107456 . 107457) (OPERATOR 107447 . 107455) (symbol 107442 . 107446) (punctuation 107432 . 107433) (symbol 107428 . 107432) (TYPENAME 107419 . 107427) (punctuation 107418 . 107419) (TEMPLATE 107410 . 107418) (semantic-list 107334 . 107400) (CONST 107328 . 107333) (punctuation 107326 . 107327) (BOOL 107322 . 107326) (punctuation 107320 . 107321) (symbol 107316 . 107320) (punctuation 107315 . 107316) (symbol 107305 . 107315) (punctuation 107303 . 107304) (punctuation 107302 . 107303) (semantic-list 107289 . 107301) (punctuation 107287 . 107288) (punctuation 107286 . 107287) (OPERATOR 107277 . 107285) (symbol 107272 . 107276) (semantic-list 107183 . 107263) (CONST 107177 . 107182) (punctuation 107175 . 107176) (punctuation 107174 . 107175) (CONST 107169 . 107174) (symbol 107164 . 107168) (punctuation 107162 . 107163) (symbol 107158 . 107162) (punctuation 107157 . 107158) (symbol 107147 . 107157) (punctuation 107145 . 107146) (punctuation 107144 . 107145) (semantic-list 107124 . 107143) (punctuation 107122 . 107123) (punctuation 107121 . 107122) (OPERATOR 107112 . 107120) (symbol 107107 . 107111) (punctuation 107097 . 107098) (symbol 107093 . 107097) (TYPENAME 107084 . 107092) (punctuation 107083 . 107084) (TEMPLATE 107075 . 107083) (EXPLICIT 107019 . 107027) (semantic-list 106874 . 106929) (BOOL 106869 . 106873) (punctuation 106867 . 106868) (punctuation 106866 . 106867) (semantic-list 106838 . 106865) (symbol 106823 . 106838) (punctuation 106858 . 106859) (symbol 106818 . 106822) (punctuation 106858 . 106859) (punctuation 106812 . 106813) (symbol 106811 . 106812) (TYPENAME 106802 . 106810) (punctuation 106801 . 106802) (TEMPLATE 106793 . 106801) (punctuation 106858 . 106859) (semantic-list 106733 . 106788) (BOOL 106728 . 106732) (punctuation 106726 . 106727) (punctuation 106725 . 106726) (semantic-list 106698 . 106724) (symbol 106683 . 106698) (punctuation 106717 . 106718) (symbol 106678 . 106682) (punctuation 106717 . 106718) (punctuation 106672 . 106673) (symbol 106671 . 106672) (TYPENAME 106662 . 106670) (punctuation 106661 . 106662) (TEMPLATE 106653 . 106661) (punctuation 106717 . 106718) (semantic-list 106593 . 106648) (BOOL 106588 . 106592) (punctuation 106586 . 106587) (punctuation 106585 . 106586) (semantic-list 106557 . 106584) (symbol 106542 . 106557) (punctuation 106567 . 106568) (symbol 106537 . 106541) (punctuation 106567 . 106568) (punctuation 106531 . 106532) (symbol 106530 . 106531) (TYPENAME 106521 . 106529) (punctuation 106520 . 106521) (TEMPLATE 106512 . 106520) (punctuation 106567 . 106568) (semantic-list 106452 . 106507) (BOOL 106447 . 106451) (punctuation 106445 . 106446) (punctuation 106444 . 106445) (semantic-list 106417 . 106443) (symbol 106402 . 106417) (punctuation 106427 . 106428) (symbol 106397 . 106401) (punctuation 106427 . 106428) (punctuation 106391 . 106392) (symbol 106390 . 106391) (TYPENAME 106381 . 106389) (punctuation 106380 . 106381) (TEMPLATE 106372 . 106380) (punctuation 106427 . 106428) (semantic-list 106326 . 106367) (BOOL 106321 . 106325) (punctuation 106319 . 106320) (punctuation 106318 . 106319) (semantic-list 106286 . 106317) (symbol 106271 . 106286) (punctuation 106310 . 106311) (symbol 106266 . 106270) (punctuation 106310 . 106311) (punctuation 106260 . 106261) (symbol 106256 . 106260) (TYPENAME 106247 . 106255) (punctuation 106245 . 106246) (symbol 106241 . 106245) (TYPENAME 106232 . 106240) (punctuation 106231 . 106232) (TEMPLATE 106223 . 106231) (punctuation 106310 . 106311) (semantic-list 106162 . 106217) (BOOL 106157 . 106161) (punctuation 106155 . 106156) (punctuation 106154 . 106155) (semantic-list 106126 . 106153) (symbol 106114 . 106126) (punctuation 106146 . 106147) (symbol 106109 . 106113) (punctuation 106146 . 106147) (punctuation 106103 . 106104) (symbol 106102 . 106103) (TYPENAME 106093 . 106101) (punctuation 106092 . 106093) (TEMPLATE 106084 . 106092) (punctuation 106146 . 106147) (semantic-list 106024 . 106079) (BOOL 106019 . 106023) (punctuation 106017 . 106018) (punctuation 106016 . 106017) (semantic-list 105989 . 106015) (symbol 105977 . 105989) (punctuation 106008 . 106009) (symbol 105972 . 105976) (punctuation 106008 . 106009) (punctuation 105966 . 105967) (symbol 105965 . 105966) (TYPENAME 105956 . 105964) (punctuation 105955 . 105956) (TEMPLATE 105947 . 105955) (punctuation 106008 . 106009) (semantic-list 105887 . 105942) (BOOL 105882 . 105886) (punctuation 105880 . 105881) (punctuation 105879 . 105880) (semantic-list 105851 . 105878) (symbol 105839 . 105851) (punctuation 105861 . 105862) (symbol 105834 . 105838) (punctuation 105861 . 105862) (punctuation 105828 . 105829) (symbol 105827 . 105828) (TYPENAME 105818 . 105826) (punctuation 105817 . 105818) (TEMPLATE 105809 . 105817) (punctuation 105861 . 105862) (semantic-list 105749 . 105804) (BOOL 105744 . 105748) (punctuation 105742 . 105743) (punctuation 105741 . 105742) (semantic-list 105714 . 105740) (symbol 105702 . 105714) (punctuation 105724 . 105725) (symbol 105697 . 105701) (punctuation 105724 . 105725) (punctuation 105691 . 105692) (symbol 105690 . 105691) (TYPENAME 105681 . 105689) (punctuation 105680 . 105681) (TEMPLATE 105672 . 105680) (punctuation 105724 . 105725) (semantic-list 105626 . 105667) (BOOL 105621 . 105625) (punctuation 105619 . 105620) (punctuation 105618 . 105619) (semantic-list 105581 . 105617) (symbol 105569 . 105581) (symbol 105564 . 105568) (punctuation 105558 . 105559) (symbol 105554 . 105558) (TYPENAME 105545 . 105553) (punctuation 105543 . 105544) (symbol 105539 . 105543) (TYPENAME 105530 . 105538) (punctuation 105529 . 105530) (TEMPLATE 105521 . 105529) (EXPLICIT 105253 . 105261) (semantic-list 105167 . 105231) (symbol 105158 . 105166) (CONST 105152 . 105157) (semantic-list 105131 . 105151) (symbol 105102 . 105131) (VOID 105097 . 105101) (semantic-list 104774 . 104979) (CONST 104768 . 104773) (punctuation 104766 . 104767) (punctuation 104765 . 104766) (CONST 104760 . 104765) (symbol 104755 . 104759) (punctuation 104753 . 104754) (symbol 104749 . 104753) (punctuation 104748 . 104749) (symbol 104738 . 104748) (punctuation 104736 . 104737) (punctuation 104735 . 104736) (CONST 104729 . 104734) (semantic-list 104723 . 104728) (punctuation 104721 . 104722) (punctuation 104720 . 104721) (OPERATOR 104711 . 104719) (symbol 104706 . 104710) (punctuation 104696 . 104697) (symbol 104695 . 104696) (TYPENAME 104686 . 104694) (punctuation 104685 . 104686) (TEMPLATE 104677 . 104685) (semantic-list 104462 . 104667) (CONST 104456 . 104461) (punctuation 104454 . 104455) (punctuation 104453 . 104454) (CONST 104448 . 104453) (symbol 104443 . 104447) (punctuation 104441 . 104442) (symbol 104437 . 104441) (punctuation 104436 . 104437) (symbol 104426 . 104436) (punctuation 104424 . 104425) (punctuation 104423 . 104424) (CONST 104417 . 104422) (semantic-list 104411 . 104416) (punctuation 104409 . 104410) (punctuation 104408 . 104409) (OPERATOR 104399 . 104407) (symbol 104394 . 104398) (punctuation 104384 . 104385) (symbol 104383 . 104384) (TYPENAME 104374 . 104382) (punctuation 104373 . 104374) (TEMPLATE 104365 . 104373) (semantic-list 104150 . 104355) (CONST 104144 . 104149) (punctuation 104142 . 104143) (punctuation 104141 . 104142) (CONST 104136 . 104141) (symbol 104131 . 104135) (punctuation 104129 . 104130) (symbol 104125 . 104129) (punctuation 104124 . 104125) (symbol 104114 . 104124) (punctuation 104112 . 104113) (punctuation 104111 . 104112) (CONST 104105 . 104110) (semantic-list 104099 . 104104) (punctuation 104097 . 104098) (OPERATOR 104088 . 104096) (symbol 104083 . 104087) (punctuation 104073 . 104074) (symbol 104072 . 104073) (TYPENAME 104063 . 104071) (punctuation 104062 . 104063) (TEMPLATE 104054 . 104062) (semantic-list 103839 . 104044) (CONST 103833 . 103838) (punctuation 103831 . 103832) (punctuation 103830 . 103831) (CONST 103825 . 103830) (symbol 103820 . 103824) (punctuation 103818 . 103819) (symbol 103814 . 103818) (punctuation 103813 . 103814) (symbol 103803 . 103813) (punctuation 103801 . 103802) (punctuation 103800 . 103801) (CONST 103794 . 103799) (semantic-list 103788 . 103793) (punctuation 103786 . 103787) (OPERATOR 103777 . 103785) (symbol 103772 . 103776) (punctuation 103762 . 103763) (symbol 103761 . 103762) (TYPENAME 103752 . 103760) (punctuation 103751 . 103752) (TEMPLATE 103743 . 103751) (semantic-list 103528 . 103733) (CONST 103522 . 103527) (punctuation 103520 . 103521) (punctuation 103519 . 103520) (CONST 103514 . 103519) (symbol 103509 . 103513) (punctuation 103507 . 103508) (symbol 103503 . 103507) (punctuation 103502 . 103503) (symbol 103492 . 103502) (punctuation 103490 . 103491) (punctuation 103489 . 103490) (CONST 103483 . 103488) (semantic-list 103477 . 103482) (punctuation 103475 . 103476) (punctuation 103474 . 103475) (OPERATOR 103465 . 103473) (symbol 103460 . 103464) (punctuation 103450 . 103451) (symbol 103449 . 103450) (TYPENAME 103440 . 103448) (punctuation 103439 . 103440) (TEMPLATE 103431 . 103439) (semantic-list 103216 . 103421) (CONST 103210 . 103215) (punctuation 103208 . 103209) (punctuation 103207 . 103208) (CONST 103202 . 103207) (symbol 103197 . 103201) (punctuation 103195 . 103196) (symbol 103191 . 103195) (punctuation 103190 . 103191) (symbol 103180 . 103190) (punctuation 103178 . 103179) (punctuation 103177 . 103178) (CONST 103171 . 103176) (semantic-list 103165 . 103170) (punctuation 103163 . 103164) (punctuation 103162 . 103163) (OPERATOR 103153 . 103161) (symbol 103148 . 103152) (punctuation 103138 . 103139) (symbol 103137 . 103138) (TYPENAME 103128 . 103136) (punctuation 103127 . 103128) (TEMPLATE 103119 . 103127) (semantic-list 102904 . 103109) (CONST 102898 . 102903) (punctuation 102896 . 102897) (punctuation 102895 . 102896) (CONST 102890 . 102895) (symbol 102885 . 102889) (punctuation 102883 . 102884) (symbol 102879 . 102883) (punctuation 102878 . 102879) (symbol 102868 . 102878) (punctuation 102866 . 102867) (punctuation 102865 . 102866) (CONST 102859 . 102864) (semantic-list 102853 . 102858) (punctuation 102851 . 102852) (punctuation 102850 . 102851) (OPERATOR 102841 . 102849) (symbol 102836 . 102840) (punctuation 102826 . 102827) (symbol 102825 . 102826) (TYPENAME 102816 . 102824) (punctuation 102815 . 102816) (TEMPLATE 102807 . 102815) (semantic-list 102592 . 102797) (CONST 102586 . 102591) (punctuation 102584 . 102585) (punctuation 102583 . 102584) (CONST 102578 . 102583) (symbol 102573 . 102577) (punctuation 102571 . 102572) (symbol 102567 . 102571) (punctuation 102566 . 102567) (symbol 102556 . 102566) (punctuation 102554 . 102555) (punctuation 102553 . 102554) (CONST 102547 . 102552) (semantic-list 102541 . 102546) (punctuation 102539 . 102540) (punctuation 102538 . 102539) (OPERATOR 102529 . 102537) (symbol 102524 . 102528) (punctuation 102514 . 102515) (symbol 102513 . 102514) (TYPENAME 102504 . 102512) (punctuation 102503 . 102504) (TEMPLATE 102495 . 102503) (semantic-list 102091 . 102248) (symbol 102082 . 102090) (CONST 102076 . 102081) (semantic-list 102055 . 102075) (symbol 102026 . 102055) (VOID 102021 . 102025) (semantic-list 101224 . 101244) (BOOL 101219 . 101223) (punctuation 101217 . 101218) (punctuation 101216 . 101217) (CONST 101210 . 101215) (semantic-list 101207 . 101209) (symbol 101198 . 101207) (symbol 101193 . 101197) (semantic-list 101152 . 101184) (BOOL 101147 . 101151) (punctuation 101145 . 101146) (punctuation 101144 . 101145) (CONST 101138 . 101143) (semantic-list 101135 . 101137) (symbol 101117 . 101135) (symbol 101112 . 101116) (punctuation 96118 . 96119) (semantic-list 96006 . 96118) (punctuation 96004 . 96005) (semantic-list 96000 . 96004) (symbol 95999 . 96000) (punctuation 95998 . 95999) (symbol 95987 . 95998) (STRUCT 95980 . 95986) (punctuation 95974 . 95975) (symbol 95972 . 95974) (INT 95968 . 95971) (punctuation 95966 . 95967) (symbol 95965 . 95966) (TYPENAME 95956 . 95964) (punctuation 95955 . 95956) (TEMPLATE 95946 . 95954) (punctuation 95939 . 95940) (semantic-list 95824 . 95939) (punctuation 95822 . 95823) (symbol 95818 . 95822) (punctuation 95817 . 95818) (punctuation 95816 . 95817) (punctuation 95815 . 95816) (symbol 95810 . 95815) (punctuation 95809 . 95810) (punctuation 95808 . 95809) (punctuation 95807 . 95808) (symbol 95806 . 95807) (punctuation 95805 . 95806) (symbol 95787 . 95805) (punctuation 95786 . 95787) (punctuation 95785 . 95786) (symbol 95779 . 95785) (punctuation 95778 . 95779) (punctuation 95777 . 95778) (symbol 95772 . 95777) (punctuation 95771 . 95772) (punctuation 95770 . 95771) (punctuation 95769 . 95770) (punctuation 95767 . 95768) (punctuation 95766 . 95767) (symbol 95760 . 95765) (punctuation 95759 . 95760) (punctuation 95758 . 95759) (punctuation 95757 . 95758) (symbol 95756 . 95757) (punctuation 95755 . 95756) (symbol 95747 . 95755) (punctuation 95746 . 95747) (symbol 95737 . 95746) (punctuation 95736 . 95737) (punctuation 95735 . 95736) (symbol 95732 . 95735) (TYPENAME 95723 . 95731) (punctuation 95721 . 95722) (symbol 95720 . 95721) (punctuation 95719 . 95720) (symbol 95708 . 95719) (STRUCT 95701 . 95707) (punctuation 95695 . 95696) (symbol 95694 . 95695) (TYPENAME 95685 . 95693) (punctuation 95684 . 95685) (TEMPLATE 95676 . 95684) (punctuation 94729 . 94730) (punctuation 94727 . 94728) (symbol 94723 . 94727) (punctuation 94722 . 94723) (punctuation 94721 . 94722) (punctuation 94720 . 94721) (semantic-list 94694 . 94720) (symbol 94686 . 94694) (semantic-list 94700 . 94719) (punctuation 94685 . 94686) (symbol 94676 . 94685) (TYPENAME 94667 . 94675) (punctuation 94665 . 94666) (symbol 94664 . 94665) (punctuation 94663 . 94664) (symbol 94650 . 94663) (STRUCT 94643 . 94649) (punctuation 94633 . 94634) (symbol 94632 . 94633) (TYPENAME 94623 . 94631) (punctuation 94622 . 94623) (TEMPLATE 94613 . 94621) (punctuation 94542 . 94543) (VOID 94538 . 94542) (punctuation 94536 . 94537) (TYPENAME 94527 . 94535) (punctuation 94525 . 94526) (symbol 94524 . 94525) (TYPENAME 94515 . 94523) (punctuation 94514 . 94515) (TEMPLATE 94505 . 94513) (punctuation 94483 . 94484) (VOID 94479 . 94483) (punctuation 94477 . 94478) (symbol 94472 . 94476) (USING 94466 . 94471) (punctuation 94425 . 94426) (punctuation 94424 . 94425) (punctuation 94423 . 94424) (punctuation 94422 . 94423) (TYPENAME 94414 . 94422) (punctuation 94413 . 94414) (TEMPLATE 94404 . 94412) (punctuation 89058 . 89059) (semantic-list 88842 . 89058) (punctuation 88840 . 88841) (punctuation 88839 . 88840) (punctuation 88838 . 88839) (punctuation 88837 . 88838) (symbol 88836 . 88837) (symbol 88834 . 88835) (punctuation 88833 . 88834) (symbol 88822 . 88833) (STRUCT 88815 . 88821) (punctuation 88809 . 88810) (symbol 88808 . 88809) (TYPENAME 88799 . 88807) (punctuation 88797 . 88798) (symbol 88796 . 88797) (TYPENAME 88787 . 88795) (punctuation 88786 . 88787) (TEMPLATE 88777 . 88785) (punctuation 86796 . 86797) (semantic-list 86617 . 86796) (punctuation 86615 . 86616) (semantic-list 86611 . 86615) (CHAR 86607 . 86611) (UNSIGNED 86598 . 86606) (punctuation 86597 . 86598) (symbol 86586 . 86597) (STRUCT 86579 . 86585) (punctuation 86573 . 86574) (symbol 86571 . 86573) (INT 86567 . 86570) (punctuation 86566 . 86567) (TEMPLATE 86558 . 86566) (punctuation 86552 . 86553) (semantic-list 86375 . 86552) (punctuation 86373 . 86374) (semantic-list 86369 . 86373) (CHAR 86365 . 86369) (SIGNED 86358 . 86364) (punctuation 86357 . 86358) (symbol 86346 . 86357) (STRUCT 86339 . 86345) (punctuation 86333 . 86334) (symbol 86331 . 86333) (INT 86327 . 86330) (punctuation 86326 . 86327) (TEMPLATE 86318 . 86326) (punctuation 86312 . 86313) (semantic-list 86174 . 86312) (punctuation 86172 . 86173) (semantic-list 86168 . 86172) (CHAR 86164 . 86168) (punctuation 86163 . 86164) (symbol 86152 . 86163) (STRUCT 86145 . 86151) (punctuation 86139 . 86140) (symbol 86137 . 86139) (INT 86133 . 86136) (punctuation 86132 . 86133) (TEMPLATE 86124 . 86132) (punctuation 83843 . 83844) (punctuation 83842 . 83843) (punctuation 83841 . 83842) (symbol 83835 . 83841) (punctuation 83834 . 83835) (punctuation 83833 . 83834) (symbol 83830 . 83833) (punctuation 83828 . 83829) (symbol 83823 . 83828) (punctuation 83822 . 83823) (punctuation 83821 . 83822) (punctuation 83820 . 83821) (symbol 83816 . 83820) (punctuation 83815 . 83816) (symbol 83797 . 83815) (punctuation 83796 . 83797) (punctuation 83795 . 83796) (symbol 83789 . 83795) (punctuation 83788 . 83789) (punctuation 83787 . 83788) (symbol 83782 . 83787) (punctuation 83781 . 83782) (punctuation 83780 . 83781) (punctuation 83779 . 83780) (punctuation 83778 . 83779) (symbol 83769 . 83778) (punctuation 83768 . 83769) (punctuation 83767 . 83768) (symbol 83764 . 83767) (TYPENAME 83755 . 83763) (STATIC 83740 . 83746) (punctuation 83730 . 83731) (symbol 83729 . 83730) (punctuation 83727 . 83728) (symbol 83722 . 83726) (TYPENAME 83713 . 83721) (punctuation 83712 . 83713) (TEMPLATE 83703 . 83711) (punctuation 83373 . 83374) (punctuation 83372 . 83373) (punctuation 83371 . 83372) (symbol 83365 . 83371) (punctuation 83364 . 83365) (punctuation 83363 . 83364) (symbol 83360 . 83363) (punctuation 83358 . 83359) (symbol 83353 . 83358) (punctuation 83352 . 83353) (punctuation 83351 . 83352) (punctuation 83350 . 83351) (symbol 83346 . 83350) (punctuation 83345 . 83346) (symbol 83327 . 83345) (punctuation 83326 . 83327) (punctuation 83325 . 83326) (symbol 83319 . 83325) (punctuation 83318 . 83319) (punctuation 83317 . 83318) (symbol 83312 . 83317) (punctuation 83311 . 83312) (punctuation 83310 . 83311) (punctuation 83309 . 83310) (symbol 83300 . 83309) (punctuation 83299 . 83300) (punctuation 83298 . 83299) (symbol 83295 . 83298) (TYPENAME 83286 . 83294) (STATIC 83271 . 83277) (punctuation 83261 . 83262) (symbol 83260 . 83261) (punctuation 83258 . 83259) (symbol 83253 . 83257) (TYPENAME 83244 . 83252) (punctuation 83243 . 83244) (TEMPLATE 83234 . 83242) (punctuation 83199 . 83200) (VOID 83195 . 83199) (punctuation 83193 . 83194) (TYPENAME 83184 . 83192) (punctuation 83182 . 83183) (symbol 83181 . 83182) (TYPENAME 83172 . 83180) (punctuation 83171 . 83172) (TEMPLATE 83162 . 83170) (punctuation 82285 . 82286) (punctuation 82284 . 82285) (punctuation 82283 . 82284) (symbol 82277 . 82283) (punctuation 82276 . 82277) (punctuation 82275 . 82276) (symbol 82272 . 82275) (punctuation 82261 . 82262) (symbol 82256 . 82261) (punctuation 82255 . 82256) (punctuation 82254 . 82255) (punctuation 82253 . 82254) (symbol 82252 . 82253) (punctuation 82250 . 82251) (symbol 82241 . 82250) (punctuation 82240 . 82241) (punctuation 82239 . 82240) (symbol 82236 . 82239) (punctuation 82235 . 82236) (symbol 82225 . 82235) (punctuation 82224 . 82225) (punctuation 82223 . 82224) (symbol 82220 . 82223) (punctuation 82218 . 82219) (punctuation 82217 . 82218) (symbol 82211 . 82216) (punctuation 82210 . 82211) (punctuation 82209 . 82210) (punctuation 82208 . 82209) (symbol 82207 . 82208) (punctuation 82206 . 82207) (symbol 82199 . 82206) (punctuation 82198 . 82199) (punctuation 82197 . 82198) (symbol 82194 . 82197) (punctuation 82193 . 82194) (punctuation 82179 . 82180) (symbol 82170 . 82179) (punctuation 82169 . 82170) (punctuation 82168 . 82169) (symbol 82165 . 82168) (TYPENAME 82156 . 82164) (punctuation 82146 . 82147) (symbol 82145 . 82146) (TYPENAME 82136 . 82144) (punctuation 82135 . 82136) (TEMPLATE 82127 . 82135) (punctuation 82023 . 82024) (punctuation 82022 . 82023) (punctuation 82021 . 82022) (symbol 82015 . 82021) (punctuation 82014 . 82015) (punctuation 82013 . 82014) (symbol 82010 . 82013) (punctuation 82000 . 82001) (symbol 81995 . 82000) (punctuation 81994 . 81995) (punctuation 81993 . 81994) (punctuation 81992 . 81993) (symbol 81991 . 81992) (punctuation 81989 . 81990) (symbol 81980 . 81989) (punctuation 81979 . 81980) (punctuation 81978 . 81979) (symbol 81975 . 81978) (punctuation 81974 . 81975) (symbol 81964 . 81974) (punctuation 81963 . 81964) (punctuation 81962 . 81963) (symbol 81959 . 81962) (punctuation 81958 . 81959) (punctuation 81956 . 81957) (punctuation 81955 . 81956) (symbol 81949 . 81954) (punctuation 81948 . 81949) (punctuation 81947 . 81948) (punctuation 81946 . 81947) (symbol 81945 . 81946) (punctuation 81944 . 81945) (symbol 81937 . 81944) (punctuation 81936 . 81937) (punctuation 81935 . 81936) (symbol 81932 . 81935) (punctuation 81931 . 81932) (punctuation 81917 . 81918) (symbol 81908 . 81917) (punctuation 81907 . 81908) (punctuation 81906 . 81907) (symbol 81903 . 81906) (TYPENAME 81894 . 81902) (punctuation 81884 . 81885) (symbol 81883 . 81884) (TYPENAME 81874 . 81882) (punctuation 81873 . 81874) (TEMPLATE 81865 . 81873) (punctuation 81752 . 81753) (punctuation 81751 . 81752) (semantic-list 81718 . 81751) (symbol 81710 . 81718) (semantic-list 81747 . 81750) (punctuation 81708 . 81709) (symbol 81702 . 81707) (BOOL 81697 . 81701) (CONST 81691 . 81696) (STATIC 81684 . 81690) (punctuation 81637 . 81638) (punctuation 81636 . 81637) (semantic-list 81631 . 81636) (symbol 81627 . 81631) (symbol 81622 . 81626) (STATIC 81615 . 81621) (punctuation 81601 . 81602) (TYPENAME 81593 . 81601) (punctuation 81591 . 81592) (TYPENAME 81583 . 81591) (punctuation 81582 . 81583) (TEMPLATE 81574 . 81582) (semantic-list 81556 . 81558) (semantic-list 81538 . 81540) (punctuation 81521 . 81522) (punctuation 81520 . 81521) (semantic-list 81517 . 81519) (punctuation 81485 . 81486) (punctuation 81484 . 81485) (semantic-list 81462 . 81467) (symbol 81458 . 81462) (symbol 81453 . 81457) (STATIC 81446 . 81452) (punctuation 81432 . 81433) (symbol 81431 . 81432) (TYPENAME 81422 . 81430) (punctuation 81420 . 81421) (symbol 81414 . 81420) (TYPENAME 81405 . 81413) (punctuation 81404 . 81405) (TEMPLATE 81396 . 81404) (semantic-list 78460 . 78478) (punctuation 78458 . 78459) (symbol 78451 . 78458) (punctuation 78450 . 78451) (punctuation 78449 . 78450) (symbol 78446 . 78449) (punctuation 78444 . 78445) (punctuation 78443 . 78444) (semantic-list 78440 . 78442) (symbol 78437 . 78440) (symbol 78432 . 78436) (semantic-list 78357 . 78423) (punctuation 78355 . 78356) (symbol 78335 . 78355) (punctuation 78333 . 78334) (punctuation 78332 . 78333) (semantic-list 78313 . 78331) (punctuation 78311 . 78312) (punctuation 78310 . 78311) (OPERATOR 78301 . 78309) (symbol 78296 . 78300) (punctuation 78286 . 78287) (symbol 78285 . 78286) (TYPENAME 78276 . 78284) (punctuation 78275 . 78276) (TEMPLATE 78267 . 78275) (punctuation 78243 . 78244) (punctuation 78242 . 78243) (CONST 78236 . 78241) (semantic-list 78233 . 78235) (symbol 78230 . 78233) (symbol 78225 . 78229) (punctuation 78031 . 78032) (punctuation 78030 . 78031) (CONST 78025 . 78030) (symbol 78017 . 78024) (punctuation 78015 . 78016) (punctuation 78014 . 78015) (semantic-list 77984 . 78013) (symbol 77974 . 77984) (symbol 77969 . 77973) (semantic-list 49713 . 49834) (symbol 49706 . 49713) (semantic-list 49538 . 49616) (symbol 49527 . 49538) (semantic-list 49428 . 49500) (punctuation 49426 . 49427) (symbol 49414 . 49426) (punctuation 49412 . 49413) (punctuation 49411 . 49412) (symbol 49402 . 49410) (semantic-list 49372 . 49401) (symbol 49357 . 49372) (symbol 49352 . 49356) (punctuation 49350 . 49351) (symbol 49349 . 49350) (TYPENAME 49340 . 49348) (punctuation 49339 . 49340) (TEMPLATE 49331 . 49339) (punctuation 49328 . 49329) (punctuation 49327 . 49328) (symbol 49315 . 49327) (punctuation 49313 . 49314) (punctuation 49312 . 49313) (symbol 49303 . 49311) (semantic-list 49275 . 49302) (symbol 49260 . 49275) (symbol 49255 . 49259) (semantic-list 49195 . 49250) (symbol 49186 . 49194) (CONST 49180 . 49185) (semantic-list 49177 . 49179) (symbol 49171 . 49177) (VOID 49166 . 49170) (punctuation 49125 . 49126) (symbol 49116 . 49124) (semantic-list 49086 . 49115) (symbol 49067 . 49086) (punctuation 49053 . 49054) (semantic-list 49051 . 49053) (semantic-list 49031 . 49051) (VOID 49026 . 49030) (punctuation 48839 . 48840) (punctuation 48838 . 48839) (punctuation 48837 . 48838) (symbol 48833 . 48837) (punctuation 48832 . 48833) (punctuation 48831 . 48832) (punctuation 48830 . 48831) (symbol 48826 . 48830) (punctuation 48825 . 48826) (punctuation 48824 . 48825) (punctuation 48823 . 48824) (semantic-list 48817 . 48823) (symbol 48813 . 48817) (punctuation 48812 . 48813) (symbol 48803 . 48812) (punctuation 48802 . 48803) (punctuation 48801 . 48802) (symbol 48798 . 48801) (TYPENAME 48789 . 48797) (punctuation 48788 . 48789) (symbol 48779 . 48788) (punctuation 48778 . 48779) (punctuation 48777 . 48778) (symbol 48774 . 48777) (TYPENAME 48765 . 48773) (punctuation 48764 . 48765) (symbol 48748 . 48764) (punctuation 48747 . 48748) (punctuation 48746 . 48747) (symbol 48743 . 48746) (TYPENAME 48734 . 48742) (punctuation 48732 . 48733) (symbol 48713 . 48731) (USING 48707 . 48712) (punctuation 48701 . 48702) (symbol 48700 . 48701) (punctuation 48698 . 48699) (punctuation 48697 . 48698) (punctuation 48696 . 48697) (TYPENAME 48688 . 48696) (punctuation 48686 . 48687) (symbol 48682 . 48686) (TYPENAME 48673 . 48681) (punctuation 48672 . 48673) (TEMPLATE 48663 . 48671) (punctuation 48245 . 48246) (semantic-list 48238 . 48241) (punctuation 48237 . 48238) (punctuation 48236 . 48237) (punctuation 48235 . 48236) (punctuation 48234 . 48235) (punctuation 48224 . 48225) (punctuation 48189 . 48190) (punctuation 48187 . 48188) (semantic-list 48178 . 48187) (symbol 48175 . 48178) (punctuation 48174 . 48175) (symbol 48163 . 48174) (STRUCT 48156 . 48162) (punctuation 48150 . 48151) (symbol 48146 . 48150) (punctuation 48144 . 48145) (punctuation 48143 . 48144) (punctuation 48142 . 48143) (TYPENAME 48134 . 48142) (punctuation 48132 . 48133) (symbol 48129 . 48132) (TYPENAME 48120 . 48128) (punctuation 48119 . 48120) (TEMPLATE 48110 . 48118) (punctuation 48003 . 48004) (punctuation 48002 . 48003) (punctuation 48001 . 48002) (punctuation 48000 . 48001) (TYPENAME 47992 . 48000) (punctuation 47991 . 47992) (TEMPLATE 47982 . 47990) (punctuation 47954 . 47955) (semantic-list 47908 . 47954) (symbol 47900 . 47908) (semantic-list 47947 . 47949) (punctuation 47899 . 47900) (symbol 47889 . 47899) (punctuation 47879 . 47880) (symbol 47875 . 47879) (punctuation 47873 . 47874) (punctuation 47872 . 47873) (punctuation 47871 . 47872) (TYPENAME 47863 . 47871) (punctuation 47861 . 47862) (symbol 47858 . 47861) (TYPENAME 47849 . 47857) (punctuation 47848 . 47849) (TEMPLATE 47839 . 47847) (punctuation 47758 . 47759) (TYPENAME 47750 . 47758) (punctuation 47749 . 47750) (TEMPLATE 47740 . 47748) (semantic-list 25501 . 25551) (symbol 25491 . 25500) (punctuation 25490 . 25491) (punctuation 25489 . 25490) (symbol 25484 . 25489) (punctuation 25482 . 25483) (punctuation 25481 . 25482) (symbol 25472 . 25480) (semantic-list 25429 . 25471) (symbol 25420 . 25429) (string 25417 . 25419) (OPERATOR 25408 . 25416) (symbol 25403 . 25407) (symbol 25393 . 25402) (semantic-list 25319 . 25370) (symbol 25309 . 25318) (punctuation 25307 . 25308) (punctuation 25306 . 25307) (symbol 25297 . 25305) (semantic-list 25254 . 25296) (symbol 25251 . 25254) (string 25248 . 25250) (OPERATOR 25239 . 25247) (symbol 25234 . 25238) (symbol 25224 . 25233) (punctuation 25217 . 25218) (punctuation 25216 . 25217) (symbol 25209 . 25216) (punctuation 25208 . 25209) (punctuation 25207 . 25208) (symbol 25204 . 25207) (punctuation 25202 . 25203) (punctuation 25201 . 25202) (semantic-list 25159 . 25200) (punctuation 25157 . 25158) (punctuation 25156 . 25157) (OPERATOR 25147 . 25155) (symbol 25142 . 25146) (punctuation 25136 . 25137) (punctuation 25135 . 25136) (symbol 25129 . 25135) (punctuation 25128 . 25129) (punctuation 25127 . 25128) (symbol 25124 . 25127) (punctuation 25122 . 25123) (punctuation 25121 . 25122) (semantic-list 25079 . 25120) (punctuation 25077 . 25078) (punctuation 25076 . 25077) (OPERATOR 25067 . 25075) (symbol 25062 . 25066) (symbol 24984 . 24993) (symbol 24917 . 24926) (semantic-list 24827 . 24882) (BOOL 24822 . 24826) (punctuation 24820 . 24821) (punctuation 24819 . 24820) (symbol 24810 . 24818) (CONST 24804 . 24809) (semantic-list 24801 . 24803) (symbol 24785 . 24801) (symbol 24780 . 24784) (symbol 24770 . 24779) (punctuation 24759 . 24760) (punctuation 24758 . 24759) (CONST 24753 . 24758) (CHAR 24748 . 24752) (punctuation 24746 . 24747) (punctuation 24745 . 24746) (symbol 24736 . 24744) (CONST 24730 . 24735) (semantic-list 24727 . 24729) (symbol 24723 . 24727) (symbol 24718 . 24722) (punctuation 24622 . 24623) (punctuation 24621 . 24622) (symbol 24612 . 24620) (CONST 24606 . 24611) (semantic-list 24568 . 24605) (symbol 24562 . 24568) (symbol 24557 . 24561) (punctuation 24311 . 24312) (punctuation 24310 . 24311) (CONST 24305 . 24310) (CHAR 24300 . 24304) (punctuation 24298 . 24299) (punctuation 24297 . 24298) (CONST 24291 . 24296) (semantic-list 24288 . 24290) (symbol 24283 . 24288) (symbol 24278 . 24282) (semantic-list 24103 . 24141) (symbol 24093 . 24102) (punctuation 24091 . 24092) (punctuation 24090 . 24091) (symbol 24081 . 24089) (CONST 24075 . 24080) (semantic-list 24072 . 24074) (symbol 24068 . 24072) (symbol 24063 . 24067) (symbol 24053 . 24062) (semantic-list 24001 . 24044) (BOOL 23996 . 24000) (punctuation 23994 . 23995) (punctuation 23993 . 23994) (symbol 23984 . 23992) (CONST 23978 . 23983) (semantic-list 23975 . 23977) (symbol 23970 . 23975) (symbol 23965 . 23969) (symbol 23955 . 23964) (semantic-list 23834 . 23916) (CHAR 23829 . 23833) (punctuation 23827 . 23828) (punctuation 23826 . 23827) (symbol 23817 . 23825) (CONST 23811 . 23816) (semantic-list 23791 . 23810) (semantic-list 23788 . 23790) (OPERATOR 23780 . 23788) (symbol 23775 . 23779) (semantic-list 23716 . 23765) (BOOL 23711 . 23715) (punctuation 23709 . 23710) (punctuation 23708 . 23709) (symbol 23699 . 23707) (CONST 23693 . 23698) (semantic-list 23668 . 23692) (punctuation 23666 . 23667) (punctuation 23665 . 23666) (OPERATOR 23656 . 23664) (symbol 23651 . 23655) (punctuation 23641 . 23642) (BOOL 23637 . 23641) (punctuation 23635 . 23636) (punctuation 23634 . 23635) (symbol 23625 . 23633) (CONST 23619 . 23624) (semantic-list 23592 . 23618) (punctuation 23590 . 23591) (punctuation 23589 . 23590) (OPERATOR 23580 . 23588) (symbol 23575 . 23579) (OPERATOR 23451 . 23459) (EXPLICIT 23442 . 23450) (semantic-list 23377 . 23379) (punctuation 23371 . 23372) (punctuation 23349 . 23350) (symbol 23332 . 23340) (semantic-list 23299 . 23331) (symbol 23290 . 23299) (punctuation 23218 . 23219) (symbol 23201 . 23209) (semantic-list 23160 . 23200) (symbol 23151 . 23160) (symbol 23141 . 23150) (semantic-list 23097 . 23121) (symbol 23088 . 23097) (punctuation 23077 . 23078) (DEFAULT 23070 . 23077) (punctuation 23068 . 23069) (symbol 23059 . 23067) (semantic-list 23056 . 23058) (symbol 23047 . 23056) (symbol 23037 . 23046) (symbol 22888 . 22897) (STATIC 22881 . 22887) (punctuation 22857 . 22858) (punctuation 22856 . 22857) (CHAR 22852 . 22856) (CONST 22846 . 22851) (punctuation 22844 . 22845) (symbol 22829 . 22843) (USING 22823 . 22828) (punctuation 22800 . 22801) (symbol 22790 . 22799) (USING 22784 . 22789) (punctuation 20456 . 20457) (punctuation 20455 . 20456) (punctuation 20454 . 20455) (OPERATOR 20446 . 20454) (punctuation 20445 . 20446) (punctuation 20444 . 20445) (USING 20438 . 20443) (semantic-list 20064 . 20095) (punctuation 20062 . 20063) (OPERATOR 20053 . 20061) (BOOL 20048 . 20052) (semantic-list 19992 . 20023) (punctuation 19990 . 19991) (punctuation 19989 . 19990) (OPERATOR 19980 . 19988) (BOOL 19975 . 19979) (semantic-list 19939 . 19966) (symbol 19930 . 19938) (CONST 19924 . 19929) (semantic-list 19921 . 19923) (symbol 19916 . 19921) (BOOL 19911 . 19915) (punctuation 19900 . 19901) (DEFAULT 19893 . 19900) (punctuation 19891 . 19892) (symbol 19882 . 19890) (semantic-list 19861 . 19881) (punctuation 19859 . 19860) (OPERATOR 19850 . 19858) (punctuation 19878 . 19879) (punctuation 19848 . 19849) (symbol 19834 . 19848) (punctuation 19878 . 19879) (punctuation 19824 . 19825) (DEFAULT 19817 . 19824) (punctuation 19815 . 19816) (symbol 19806 . 19814) (semantic-list 19772 . 19792) (symbol 19758 . 19772) (punctuation 19789 . 19790) (punctuation 19748 . 19749) (DEFAULT 19741 . 19748) (punctuation 19739 . 19740) (semantic-list 19709 . 19734) (punctuation 19707 . 19708) (OPERATOR 19698 . 19706) (punctuation 19696 . 19697) (symbol 19682 . 19696) (punctuation 19672 . 19673) (DEFAULT 19665 . 19672) (punctuation 19663 . 19664) (semantic-list 19620 . 19651) (symbol 19606 . 19620) (punctuation 19541 . 19542) (symbol 19524 . 19532) (semantic-list 19483 . 19523) (symbol 19469 . 19483) (punctuation 19459 . 19460) (DELETE 19453 . 19459) (punctuation 19451 . 19452) (semantic-list 19448 . 19450) (symbol 19434 . 19448) (punctuation 19316 . 19317) (DELETE 19310 . 19316) (punctuation 19308 . 19309) (semantic-list 19285 . 19303) (punctuation 19283 . 19284) (OPERATOR 19274 . 19282) (punctuation 19300 . 19301) (punctuation 19272 . 19273) (symbol 19261 . 19272) (punctuation 19300 . 19301) (punctuation 19251 . 19252) (DELETE 19245 . 19251) (punctuation 19243 . 19244) (semantic-list 19220 . 19242) (punctuation 19218 . 19219) (OPERATOR 19209 . 19217) (punctuation 19207 . 19208) (symbol 19196 . 19207) (punctuation 19186 . 19187) (DELETE 19180 . 19186) (punctuation 19178 . 19179) (semantic-list 19142 . 19160) (symbol 19131 . 19142) (punctuation 19157 . 19158) (punctuation 19121 . 19122) (DELETE 19115 . 19121) (punctuation 19113 . 19114) (semantic-list 19077 . 19099) (symbol 19066 . 19077) (string 1602 . 1612) (symbol 1594 . 1601) (symbol 1583 . 1593) (symbol 1579 . 1582) (symbol 1572 . 1578) (punctuation 1567 . 1568) (string 1547 . 1566) (symbol 1539 . 1546) (symbol 1528 . 1538) (symbol 1524 . 1527) (symbol 1517 . 1523) (punctuation 1512 . 1513) (symbol 1507 . 1511) (symbol 1496 . 1506) (symbol 1492 . 1495) (symbol 1485 . 1491) (punctuation 1480 . 1481) (string 1439 . 1454) (symbol 1431 . 1438) (symbol 1420 . 1430) (symbol 1416 . 1419) (symbol 1409 . 1415) (punctuation 1404 . 1405) (symbol 747 . 760) (symbol 743 . 746) (symbol 736 . 742) (punctuation 731 . 732))
      :lexical-table 
        '(("CATCH_CPP14_OR_GREATER")
          ("CATCH_INTERNAL_CONFIG_COUNTER")
          ("CATCH_RECURSION_LEVEL4" (spp-arg-list ("...") 26050 . 26055) . ((symbol "CATCH_RECURSION_LEVEL3" 26056 . 26078) (semantic-list "(CATCH_RECURSION_LEVEL3(CATCH_RECURSION_LEVEL3(__VA_ARGS__)))" 26078 . 26139)))
          ("CATCH_REC_GET_END2" (spp-arg-list nil 26821 . 26823) . 
              ((number "0" 26824 . 26825) (punctuation "," 26825 . 26826) (symbol "CATCH_REC_END" 26827 . 26840)))
          ("INTERNAL_CATCH_REMOVE_PARENS_9_ARG" (spp-arg-list ("_0" "_1" "_2" "_3" "_4" "_5" "_6" "_7" "_8") 31551 . 31587) . 
              ((symbol "INTERNAL_CATCH_REMOVE_PARENS" 31588 . 31616) (semantic-list "(_0)" 31616 . 31620) (punctuation "," 31620 . 31621) (symbol "INTERNAL_CATCH_REMOVE_PARENS_8_ARG" 31622 . 31656) (semantic-list "(_1, _2, _3, _4, _5, _6, _7, _8)" 31656 . 31688)))
          ("INTERNAL_CATCH_NTTP_REGISTER" (spp-arg-list ("TestFunc" "signature" "...") 37010 . 37036) . 
              ((TEMPLATE "template" 37042 . 37050) (punctuation "<" 37050 . 37051) (symbol "INTERNAL_CATCH_REMOVE_PARENS" 37051 . 37079) (semantic-list "(signature)" 37079 . 37090) (punctuation ">" 37090 . 37091) (VOID "void" 37097 . 37101) (symbol "reg_test" 37102 . 37110) (semantic-list "(Nttp<__VA_ARGS__>, Catch::NameAndTags nameAndTags)" 37110 . 37161) (semantic-list "{\\
        Catch::AutoReg( Catch::makeTestInvoker(&TestFunc<__VA_ARGS__>), CATCH_INTERNAL_LINEINFO, Catch::StringRef(), nameAndTags);\\
    }" 37167 . 37307)))
          ("INTERNAL_CATCH_NTTP_REGISTER_METHOD" (spp-arg-list ("TestName" "signature" "...") 37684 . 37710) . 
              ((TEMPLATE "template" 37716 . 37724) (punctuation "<" 37724 . 37725) (symbol "INTERNAL_CATCH_REMOVE_PARENS" 37725 . 37753) (semantic-list "(signature)" 37753 . 37764) (punctuation ">" 37764 . 37765) (VOID "void" 37771 . 37775) (symbol "reg_test" 37776 . 37784) (semantic-list "(Nttp<__VA_ARGS__>, Catch::StringRef className, Catch::NameAndTags nameAndTags)" 37784 . 37863) (semantic-list "{\\
        Catch::AutoReg( Catch::makeTestInvoker(&TestName<__VA_ARGS__>::test), CATCH_INTERNAL_LINEINFO, className, nameAndTags);\\
    }" 37869 . 38006)))
          ("INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD0" (spp-arg-list ("TestName") 38594 . 38604))
          ("INTERNAL_CATCH_IF" (spp-arg-list ("macroName" "resultDisposition" "...") 120065 . 120102) . 
              ((symbol "INTERNAL_CATCH_TEST" 120109 . 120128) (semantic-list "( macroName, resultDisposition, __VA_ARGS__ )" 120128 . 120173) (punctuation ";" 120173 . 120174) (IF "if" 120181 . 120183) (semantic-list "( Catch::getResultCapture().lastAssertionPassed() )" 120183 . 120234)))
          ("CHECK_NOFAIL" (spp-arg-list ("...") 640288 . 640295) . ((symbol "INTERNAL_CATCH_TEST" 640296 . 640315) (semantic-list "( \"CHECK_NOFAIL\", Catch::ResultDisposition::ContinueOnFailure | Catch::ResultDisposition::SuppressFail, __VA_ARGS__ )" 640315 . 640432)))
          ("METHOD_AS_TEST_CASE" (spp-arg-list ("method" "...") 642191 . 642206) . ((symbol "INTERNAL_CATCH_METHOD_AS_TEST_CASE" 642207 . 642241) (semantic-list "( method, __VA_ARGS__ )" 642241 . 642264)))
          ("DYNAMIC_SECTION" (spp-arg-list ("...") 642451 . 642458) . ((symbol "INTERNAL_CATCH_DYNAMIC_SECTION" 642459 . 642489) (semantic-list "( __VA_ARGS__ )" 642489 . 642504)))
          ("FAIL" (spp-arg-list ("...") 642517 . 642524) . ((symbol "INTERNAL_CATCH_MSG" 642525 . 642543) (semantic-list "( \"FAIL\", Catch::ResultWas::ExplicitFailure, Catch::ResultDisposition::Normal, __VA_ARGS__ )" 642543 . 642635)))
          ("AND_WHEN" (spp-arg-list ("desc") 646600 . 646608) . ((symbol "INTERNAL_CATCH_DYNAMIC_SECTION" 646610 . 646640) (semantic-list "( \" And when: \" << desc )" 646640 . 646665)))
          ("CATCH_CPP17_OR_GREATER")
          ("CATCH_INTERNAL_START_WARNINGS_SUPPRESSION" . ((symbol "_Pragma" 4592 . 4599) (semantic-list "( \"GCC diagnostic push\" )" 4599 . 4624)))
          ("CATCH_CONFIG_CPP11_TO_STRING")
          ("CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS")
          ("INTERNAL_CATCH_UNIQUE_NAME_LINE2" (spp-arg-list ("name" "line") 18326 . 18340) . ((spp-symbol-merge ((symbol "name" 18341 . 18345) (symbol "line" 18347 . 18351)) 18341 . 18351)))
          ("CATCH_RECURSION_LEVEL5" (spp-arg-list ("...") 26170 . 26175) . ((symbol "CATCH_RECURSION_LEVEL4" 26176 . 26198) (semantic-list "(CATCH_RECURSION_LEVEL4(CATCH_RECURSION_LEVEL4(__VA_ARGS__)))" 26198 . 26259)))
          ("CATCH_REC_NEXT0" (spp-arg-list ("test" "next" "...") 26965 . 26982) . ((symbol "next" 26983 . 26987) (symbol "CATCH_REC_OUT" 26988 . 27001)))
          ("INTERNAL_CATCH_DEF" (spp-arg-list ("...") 28695 . 28700) . ((symbol "INTERNAL_CATCH_DEF" 28701 . 28719) (symbol "__VA_ARGS__" 28720 . 28731)))
          ("INTERNAL_CATCH_NOINTERNAL_CATCH_DEF")
          ("INTERNAL_CATCH_REMOVE_PARENS_5_ARG" (spp-arg-list ("_0" "_1" "_2" "_3" "_4") 30911 . 30931) . 
              ((symbol "INTERNAL_CATCH_REMOVE_PARENS" 30932 . 30960) (semantic-list "(_0)" 30960 . 30964) (punctuation "," 30964 . 30965) (symbol "INTERNAL_CATCH_REMOVE_PARENS_4_ARG" 30966 . 31000) (semantic-list "(_1, _2, _3, _4)" 31000 . 31016)))
          ("INTERNAL_CATCH_VA_NARGS_IMPL" (spp-arg-list ("_0" "_1" "_2" "_3" "_4" "_5" "_6" "_7" "_8" "_9" "_10" "N" "...") 32115 . 32168) . ((symbol "N" 32169 . 32170)))
          ("INTERNAL_CATCH_DEFINE_SIG_TEST_X" (spp-arg-list ("TestName" "signature" "...") 36569 . 36594) . 
              ((TEMPLATE "template" 36600 . 36608) (punctuation "<" 36608 . 36609) (symbol "INTERNAL_CATCH_REMOVE_PARENS" 36609 . 36637) (semantic-list "(signature)" 36637 . 36648) (punctuation ">" 36648 . 36649) (STATIC "static" 36655 . 36661) (VOID "void" 36662 . 36666) (symbol "TestName" 36667 . 36675) (semantic-list "()" 36675 . 36677)))
          ("INTERNAL_CATCH_NTTP_REGISTER_METHOD0" (spp-arg-list ("TestName" "signature" "...") 37353 . 37379) . 
              ((TEMPLATE "template" 37385 . 37393) (punctuation "<" 37393 . 37394) (TYPENAME "typename" 37394 . 37402) (symbol "Type" 37403 . 37407) (punctuation ">" 37407 . 37408) (VOID "void" 37414 . 37418) (symbol "reg_test" 37419 . 37427) (semantic-list "(TypeList<Type>, Catch::StringRef className, Catch::NameAndTags nameAndTags)" 37427 . 37503) (semantic-list "{\\
        Catch::AutoReg( Catch::makeTestInvoker(&TestName<Type>::test), CATCH_INTERNAL_LINEINFO, className, nameAndTags);\\
    }" 37509 . 37639)))
          ("INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD1" (spp-arg-list ("TestName" "signature") 38651 . 38672) . 
              ((TEMPLATE "template" 38678 . 38686) (punctuation "<" 38686 . 38687) (TYPENAME "typename" 38687 . 38695) (symbol "TestType" 38696 . 38704) (punctuation ">" 38704 . 38705) (VOID "void" 38712 . 38716) (symbol "INTERNAL_CATCH_MAKE_NAMESPACE" 38717 . 38746) (semantic-list "(TestName)" 38746 . 38756) (punctuation ":" 38756 . 38757) (punctuation ":" 38757 . 38758) (symbol "TestName" 38758 . 38766) (punctuation "<" 38766 . 38767) (symbol "TestType" 38767 . 38775) (punctuation ">" 38775 . 38776) (punctuation ":" 38776 . 38777) (punctuation ":" 38777 . 38778) (symbol "test" 38778 . 38782) (semantic-list "()" 38782 . 38784)))
          ("INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD_X" (spp-arg-list ("TestName" "signature" "...") 38832 . 38858) . 
              ((TEMPLATE "template" 38864 . 38872) (punctuation "<" 38872 . 38873) (symbol "INTERNAL_CATCH_REMOVE_PARENS" 38873 . 38901) (semantic-list "(signature)" 38901 . 38912) (punctuation ">" 38912 . 38913) (VOID "void" 38920 . 38924) (symbol "INTERNAL_CATCH_MAKE_NAMESPACE" 38925 . 38954) (semantic-list "(TestName)" 38954 . 38964) (punctuation ":" 38964 . 38965) (punctuation ":" 38965 . 38966) (symbol "TestName" 38966 . 38974) (punctuation "<" 38974 . 38975) (symbol "__VA_ARGS__" 38975 . 38986) (punctuation ">" 38986 . 38987) (punctuation ":" 38987 . 38988) (punctuation ":" 38988 . 38989) (symbol "test" 38989 . 38993) (semantic-list "()" 38993 . 38995)))
          ("INTERNAL_CATCH_NTTP_REG_GEN" (spp-arg-list ("TestFunc" "...") 41319 . 41334) . 
              ((symbol "INTERNAL_CATCH_VA_NARGS_IMPL" 41335 . 41363) (semantic-list "( \"dummy\", __VA_ARGS__, INTERNAL_CATCH_NTTP_REGISTER, INTERNAL_CATCH_NTTP_REGISTER, INTERNAL_CATCH_NTTP_REGISTER, INTERNAL_CATCH_NTTP_REGISTER, INTERNAL_CATCH_NTTP_REGISTER, INTERNAL_CATCH_NTTP_REGISTER, INTERNAL_CATCH_NTTP_REGISTER, INTERNAL_CATCH_NTTP_REGISTER, INTERNAL_CATCH_NTTP_REGISTER, INTERNAL_CATCH_NTTP_REGISTER0, INTERNAL_CATCH_NTTP_REGISTER0)" 41363 . 41718) (semantic-list "(TestFunc, __VA_ARGS__)" 41718 . 41741)))
          ("INTERNAL_CATCH_DEFINE_SIG_TEST" (spp-arg-list ("TestName" "...") 41780 . 41795) . 
              ((symbol "INTERNAL_CATCH_VA_NARGS_IMPL" 41796 . 41824) (semantic-list "( \"dummy\", __VA_ARGS__, INTERNAL_CATCH_DEFINE_SIG_TEST_X, INTERNAL_CATCH_DEFINE_SIG_TEST_X, INTERNAL_CATCH_DEFINE_SIG_TEST_X, INTERNAL_CATCH_DEFINE_SIG_TEST_X, INTERNAL_CATCH_DEFINE_SIG_TEST_X, INTERNAL_CATCH_DEFINE_SIG_TEST_X, INTERNAL_CATCH_DEFINE_SIG_TEST_X, INTERNAL_CATCH_DEFINE_SIG_TEST_X,INTERNAL_CATCH_DEFINE_SIG_TEST_X,INTERNAL_CATCH_DEFINE_SIG_TEST1, INTERNAL_CATCH_DEFINE_SIG_TEST0)" 41824 . 42217) (semantic-list "(TestName, __VA_ARGS__)" 42217 . 42240)))
          ("INTERNAL_CATCH_REMOVE_PARENS_GEN" (spp-arg-list ("...") 42790 . 42795) . 
              ((symbol "INTERNAL_CATCH_VA_NARGS_IMPL" 42796 . 42824) (semantic-list "(__VA_ARGS__, INTERNAL_CATCH_REMOVE_PARENS_11_ARG,INTERNAL_CATCH_REMOVE_PARENS_10_ARG,INTERNAL_CATCH_REMOVE_PARENS_9_ARG,INTERNAL_CATCH_REMOVE_PARENS_8_ARG,INTERNAL_CATCH_REMOVE_PARENS_7_ARG,INTERNAL_CATCH_REMOVE_PARENS_6_ARG,INTERNAL_CATCH_REMOVE_PARENS_5_ARG,INTERNAL_CATCH_REMOVE_PARENS_4_ARG,INTERNAL_CATCH_REMOVE_PARENS_3_ARG,INTERNAL_CATCH_REMOVE_PARENS_2_ARG,INTERNAL_CATCH_REMOVE_PARENS_1_ARG)" 42824 . 43225) (semantic-list "(__VA_ARGS__)" 43225 . 43238)))
          ("INTERNAL_CATCH_DYNAMIC_SECTION" (spp-arg-list ("...") 128295 . 128302) . 
              ((symbol "CATCH_INTERNAL_START_WARNINGS_SUPPRESSION" 128309 . 128350) (symbol "CATCH_INTERNAL_SUPPRESS_UNUSED_WARNINGS" 128357 . 128396) (IF "if" 128403 . 128405) (semantic-list "( Catch::Section const& INTERNAL_CATCH_UNIQUE_NAME( catch_internal_Section ) = Catch::SectionInfo( CATCH_INTERNAL_LINEINFO, (Catch::ReusableStringStream() << __VA_ARGS__).str() ) )" 128405 . 128585) (symbol "CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION" 128592 . 128632)))
          ("CATCH_RUNTIME_ERROR" (spp-arg-list ("...") 164084 . 164089) . 
              ((symbol "Catch" 164096 . 164101) (punctuation ":" 164101 . 164102) (punctuation ":" 164102 . 164103) (symbol "throw_runtime_error" 164103 . 164122) (semantic-list "(CATCH_MAKE_MSG( __VA_ARGS__ ))" 164122 . 164153)))
          ("CHECK_FALSE" (spp-arg-list ("...") 639885 . 639892) . ((symbol "INTERNAL_CATCH_TEST" 639893 . 639912) (semantic-list "( \"CHECK_FALSE\", Catch::ResultDisposition::ContinueOnFailure | Catch::ResultDisposition::FalseTest, __VA_ARGS__ )" 639912 . 640025)))
          ("TEMPLATE_PRODUCT_TEST_CASE_SIG" (spp-arg-list ("...") 643585 . 643592) . ((symbol "INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG" 643593 . 643638) (semantic-list "( __VA_ARGS__ )" 643638 . 643653)))
          ("TEMPLATE_LIST_TEST_CASE_METHOD" (spp-arg-list ("className" "...") 644061 . 644079) . ((symbol "INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_METHOD" 644080 . 644125) (semantic-list "( className, __VA_ARGS__ )" 644125 . 644151)))
          ("CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION" . ((symbol "_Pragma" 4679 . 4686) (semantic-list "( \"GCC diagnostic pop\" )" 4686 . 4710)))
          ("INTERNAL_CATCH_UNIQUE_NAME" (spp-arg-list ("name") 18517 . 18525) . ((symbol "INTERNAL_CATCH_UNIQUE_NAME_LINE" 18526 . 18557) (semantic-list "( name, __COUNTER__ )" 18557 . 18578)))
          ("CATCH_REC_NEXT1" (spp-arg-list ("test" "next") 27025 . 27037) . 
              ((symbol "CATCH_DEFER" 27038 . 27049) (semantic-list "( CATCH_REC_NEXT0 )" 27050 . 27069) (semantic-list "( test, next, 0)" 27070 . 27086)))
          ("CATCH_REC_NEXT" (spp-arg-list ("test" "next") 27109 . 27121) . ((symbol "CATCH_REC_NEXT1" 27123 . 27138) (semantic-list "(CATCH_REC_GET_END test, next)" 27138 . 27168)))
          ("INTERNAL_CATCH_STRINGIZE2" (spp-arg-list ("...") 28937 . 28942) . ((punctuation "#" 28943 . 28944) (symbol "__VA_ARGS__" 28944 . 28955)))
          ("INTERNAL_CATCH_REMOVE_PARENS_1_ARG" (spp-arg-list ("_0") 30435 . 30439) . ((symbol "INTERNAL_CATCH_REMOVE_PARENS" 30440 . 30468) (semantic-list "(_0)" 30468 . 30472)))
          ("INTERNAL_CATCH_REMOVE_PARENS_10_ARG" (spp-arg-list ("_0" "_1" "_2" "_3" "_4" "_5" "_6" "_7" "_8" "_9") 31732 . 31772) . 
              ((symbol "INTERNAL_CATCH_REMOVE_PARENS" 31773 . 31801) (semantic-list "(_0)" 31801 . 31805) (punctuation "," 31805 . 31806) (symbol "INTERNAL_CATCH_REMOVE_PARENS_9_ARG" 31807 . 31841) (semantic-list "(_1, _2, _3, _4, _5, _6, _7, _8, _9)" 31841 . 31877)))
          ("INTERNAL_CATCH_DEFINE_SIG_TEST0" (spp-arg-list ("TestName") 36374 . 36384))
          ("INTERNAL_CATCH_DEFINE_SIG_TEST1" (spp-arg-list ("TestName" "signature") 36424 . 36445) . 
              ((TEMPLATE "template" 36451 . 36459) (punctuation "<" 36459 . 36460) (symbol "INTERNAL_CATCH_REMOVE_PARENS" 36460 . 36488) (semantic-list "(signature)" 36488 . 36499) (punctuation ">" 36499 . 36500) (STATIC "static" 36506 . 36512) (VOID "void" 36513 . 36517) (symbol "TestName" 36518 . 36526) (semantic-list "()" 36526 . 36528)))
          ("INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD" (spp-arg-list ("TestName" "ClassName" "...") 40172 . 40198) . 
              ((symbol "INTERNAL_CATCH_VA_NARGS_IMPL" 40199 . 40227) (semantic-list "( \"dummy\", __VA_ARGS__, INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD_X,INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD_X, INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD_X, INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD_X, INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD_X, INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD_X, INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD_X,INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD_X,INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD_X, INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD1, INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD0)" 40227 . 40707) (semantic-list "(TestName, ClassName, __VA_ARGS__)" 40707 . 40741)))
          ("INTERNAL_CATCH_TESTCASE2" (spp-arg-list ("TestName" "...") 54782 . 54799) . 
              ((STATIC "static" 54810 . 54816) (VOID "void" 54817 . 54821) (symbol "TestName" 54822 . 54830) (semantic-list "()" 54830 . 54832) (punctuation ";" 54832 . 54833) (symbol "CATCH_INTERNAL_START_WARNINGS_SUPPRESSION" 54844 . 54885) (symbol "CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS" 54896 . 54936) (NAMESPACE "namespace" 54947 . 54956) (semantic-list "{ Catch::AutoReg INTERNAL_CATCH_UNIQUE_NAME( autoRegistrar )( Catch::makeTestInvoker( &TestName ), CATCH_INTERNAL_LINEINFO, Catch::StringRef(), Catch::NameAndTags{ __VA_ARGS__ } ); }" 54956 . 55138) (symbol "CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION" 55162 . 55202) (STATIC "static" 55213 . 55219) (VOID "void" 55220 . 55224) (symbol "TestName" 55225 . 55233) (semantic-list "()" 55233 . 55235)))
          ("INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_2" (spp-arg-list ("TestNameClass" "TestName" "ClassName" "Name" "Tags" "Signature" "...") 66853 . 66919) . 
              ((symbol "CATCH_INTERNAL_START_WARNINGS_SUPPRESSION" 66930 . 66971) (symbol "CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS" 66982 . 67022) (symbol "CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS" 67033 . 67079) (symbol "CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS" 67090 . 67138) (NAMESPACE "namespace" 67149 . 67158) (semantic-list "{\\
        namespace INTERNAL_CATCH_MAKE_NAMESPACE(TestName){ \\
            INTERNAL_CATCH_TYPE_GEN\\
            INTERNAL_CATCH_NTTP_GEN(INTERNAL_CATCH_REMOVE_PARENS(Signature))\\
            INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD(TestName, ClassName, INTERNAL_CATCH_REMOVE_PARENS(Signature));\\
            INTERNAL_CATCH_NTTP_REG_METHOD_GEN(TestName, INTERNAL_CATCH_REMOVE_PARENS(Signature))\\
            template<typename...Types> \\
            struct TestNameClass{\\
                TestNameClass(){\\
                    int index = 0;                                    \\
                    constexpr char const* tmpl_types[] = {CATCH_REC_LIST(INTERNAL_CATCH_STRINGIZE_WITHOUT_PARENS, __VA_ARGS__)};\\
                    using expander = int[];\\
                    (void)expander{(reg_test(Types{}, #ClassName, Catch::NameAndTags{ Name \" - \" + std::string(tmpl_types[index]), Tags } ), index++)... };/* NOLINT */ \\
                }\\
            };\\
            static int INTERNAL_CATCH_UNIQUE_NAME( globalRegistrar ) = [](){\\
                TestNameClass<INTERNAL_CATCH_MAKE_TYPE_LISTS_FROM_TYPES(__VA_ARGS__)>();\\
                return 0;\\
        }();\\
        }\\
        }" 67159 . 68343) (symbol "CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION" 68353 . 68393) (symbol "INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD" 68404 . 68441) (semantic-list "(TestName, INTERNAL_CATCH_REMOVE_PARENS(Signature))" 68441 . 68492)))
          ("INTERNAL_CATCH_THROWS_MATCHES" (spp-arg-list ("macroName" "exceptionType" "resultDisposition" "matcher" "...") 161100 . 161161) . 
              ((DO "do" 161168 . 161170) (semantic-list "{ \\
        Catch::AssertionHandler catchAssertionHandler( macroName##_catch_sr, CATCH_INTERNAL_LINEINFO, CATCH_INTERNAL_STRINGIFY(__VA_ARGS__) \", \" CATCH_INTERNAL_STRINGIFY(exceptionType) \", \" CATCH_INTERNAL_STRINGIFY(matcher), resultDisposition ); \\
        if( catchAssertionHandler.allowThrows() ) \\
            try { \\
                static_cast<void>(__VA_ARGS__ ); \\
                catchAssertionHandler.handleUnexpectedExceptionNotThrown(); \\
            } \\
            catch( exceptionType const& ex ) { \\
                catchAssertionHandler.handleExpr( Catch::makeMatchExpr( ex, matcher, #matcher##_catch_sr ) ); \\
            } \\
            catch( ... ) { \\
                catchAssertionHandler.handleUnexpectedInflightException(); \\
            } \\
        else \\
            catchAssertionHandler.handleThrowingCallSkipped(); \\
        INTERNAL_CATCH_REACT( catchAssertionHandler ) \\
    }" 161171 . 162080) (WHILE "while" 162081 . 162086) (semantic-list "( false )" 162086 . 162095)))
          ("CATCH_INTERNAL_ERROR" (spp-arg-list ("...") 163842 . 163847) . 
              ((symbol "Catch" 163854 . 163859) (punctuation ":" 163859 . 163860) (punctuation ":" 163860 . 163861) (symbol "throw_logic_error" 163861 . 163878) (semantic-list "(CATCH_MAKE_MSG( CATCH_INTERNAL_LINEINFO << \": Internal Catch2 error: \" << __VA_ARGS__))" 163878 . 163966)))
          ("CHECK_THROWS" (spp-arg-list ("...") 640454 . 640461) . ((symbol "INTERNAL_CATCH_THROWS" 640463 . 640484) (semantic-list "( \"CHECK_THROWS\", Catch::ResultDisposition::ContinueOnFailure, __VA_ARGS__ )" 640484 . 640560)))
          ("TEMPLATE_TEST_CASE_SIG" (spp-arg-list ("...") 643141 . 643148) . ((symbol "INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG" 643149 . 643186) (semantic-list "( __VA_ARGS__ )" 643186 . 643201)))
          ("STATIC_REQUIRE_FALSE" (spp-arg-list ("...") 645787 . 645794) . 
              ((symbol "static_assert" 645795 . 645808) (semantic-list "( !(__VA_ARGS__), \"!(\" #__VA_ARGS__ \")\" )" 645808 . 645849) (punctuation ";" 645849 . 645850) (symbol "SUCCEED" 645851 . 645858) (semantic-list "( \"!(\" #__VA_ARGS__ \")\" )" 645858 . 645883)))
          ("THEN" (spp-arg-list ("desc") 646678 . 646686) . ((symbol "INTERNAL_CATCH_DYNAMIC_SECTION" 646692 . 646722) (semantic-list "( \"     Then: \" << desc )" 646722 . 646747)))
          ("CATCH_CONFIG_COUNTER")
          ("CATCH_CONFIG_POSIX_SIGNALS")
          ("CATCH_RECURSE" (spp-arg-list ("...") 26630 . 26635) . ((symbol "CATCH_RECURSION_LEVEL5" 26637 . 26659) (semantic-list "(__VA_ARGS__)" 26659 . 26672)))
          ("CATCH_REC_LIST0_UD" (spp-arg-list ("f" "userdata" "x" "peek" "...") 27578 . 27605) . 
              ((punctuation "," 27606 . 27607) (symbol "f" 27608 . 27609) (semantic-list "(userdata, x)" 27609 . 27622) (symbol "CATCH_DEFER" 27623 . 27634) (semantic-list "( CATCH_REC_NEXT(peek, CATCH_REC_LIST1_UD) )" 27635 . 27679) (semantic-list "( f, userdata, peek, __VA_ARGS__ )" 27680 . 27714)))
          ("INTERNAL_CATCH_MAKE_NAMESPACE2" (spp-arg-list ("...") 29484 . 29489) . ((spp-symbol-merge ((symbol "ns_" 29490 . 29493) (symbol "__VA_ARGS__" 29495 . 29506)) 29490 . 29506)))
          ("INTERNAL_CATCH_REMOVE_PARENS_11_ARG" (spp-arg-list ("_0" "_1" "_2" "_3" "_4" "_5" "_6" "_7" "_8" "_9" "_10") 31921 . 31966) . 
              ((symbol "INTERNAL_CATCH_REMOVE_PARENS" 31967 . 31995) (semantic-list "(_0)" 31995 . 31999) (punctuation "," 31999 . 32000) (symbol "INTERNAL_CATCH_REMOVE_PARENS_10_ARG" 32001 . 32036) (semantic-list "(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10)" 32036 . 32077)))
          ("INTERNAL_CATCH_DECLARE_SIG_TEST_X" (spp-arg-list ("TestName" "signature" "...") 36224 . 36250) . 
              ((TEMPLATE "template" 36256 . 36264) (punctuation "<" 36264 . 36265) (symbol "INTERNAL_CATCH_REMOVE_PARENS" 36265 . 36293) (semantic-list "(signature)" 36293 . 36304) (punctuation ">" 36304 . 36305) (STATIC "static" 36311 . 36317) (VOID "void" 36318 . 36322) (symbol "TestName" 36323 . 36331) (semantic-list "()" 36331 . 36333)))
          ("INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_2" (spp-arg-list ("TestName" "TestFunc" "Name" "Tags" "TmplList") 64776 . 64818) . 
              ((symbol "CATCH_INTERNAL_START_WARNINGS_SUPPRESSION" 64828 . 64869) (symbol "CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS" 64880 . 64920) (symbol "CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS" 64931 . 64979) (TEMPLATE "template" 64990 . 64998) (punctuation "<" 64998 . 64999) (TYPENAME "typename" 64999 . 65007) (symbol "TestType" 65008 . 65016) (punctuation ">" 65016 . 65017) (STATIC "static" 65018 . 65024) (VOID "void" 65025 . 65029) (symbol "TestFunc" 65030 . 65038) (semantic-list "()" 65038 . 65040) (punctuation ";" 65040 . 65041) (NAMESPACE "namespace" 65058 . 65067) (semantic-list "{\\
        namespace INTERNAL_CATCH_MAKE_NAMESPACE(TestName){\\
        INTERNAL_CATCH_TYPE_GEN\\
        template<typename... Types>                               \\
        struct TestName {                                         \\
            void reg_tests() {                                          \\
                int index = 0;                                    \\
                using expander = int[];                           \\
                (void)expander{(Catch::AutoReg( Catch::makeTestInvoker( &TestFunc<Types> ), CATCH_INTERNAL_LINEINFO, Catch::StringRef(), Catch::NameAndTags{ Name \" - \" + std::string(INTERNAL_CATCH_STRINGIZE(TmplList)) + \" - \" + std::to_string(index), Tags } ), index++)... };/* NOLINT */\\
            }                                                     \\
        };\\
        static int INTERNAL_CATCH_UNIQUE_NAME( globalRegistrar ) = [](){ \\
                using TestInit = typename convert<TestName, TmplList>::type; \\
                TestInit t;                                           \\
                t.reg_tests();                                        \\
                return 0;                                             \\
            }();                                                      \\
        }}" 65068 . 66331) (symbol "CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION" 66341 . 66381) (TEMPLATE "template" 66414 . 66422) (punctuation "<" 66422 . 66423) (TYPENAME "typename" 66423 . 66431) (symbol "TestType" 66432 . 66440) (punctuation ">" 66440 . 66441) (STATIC "static" 66486 . 66492) (VOID "void" 66493 . 66497) (symbol "TestFunc" 66498 . 66506) (semantic-list "()" 66506 . 66508)))
          ("INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_2" (spp-arg-list ("TestNameClass" "TestName" "ClassName" "Name" "Tags" "Signature" "TmplTypes" "TypesList") 70090 . 70171) . 
              ((symbol "CATCH_INTERNAL_START_WARNINGS_SUPPRESSION" 70181 . 70222) (symbol "CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS" 70233 . 70273) (symbol "CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS" 70284 . 70330) (symbol "CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS" 70341 . 70389) (TEMPLATE "template" 70400 . 70408) (punctuation "<" 70408 . 70409) (TYPENAME "typename" 70409 . 70417) (symbol "TestType" 70418 . 70426) (punctuation ">" 70426 . 70427) (STRUCT "struct" 70442 . 70448) (symbol "TestName" 70449 . 70457) (punctuation ":" 70458 . 70459) (symbol "INTERNAL_CATCH_REMOVE_PARENS" 70460 . 70488) (semantic-list "(ClassName <TestType>)" 70488 . 70510) (semantic-list "{ \\
                void test();\\
            }" 70511 . 70558) (punctuation ";" 70558 . 70559) (NAMESPACE "namespace" 70569 . 70578) (semantic-list "{\\
        namespace INTERNAL_CATCH_MAKE_NAMESPACE(TestNameClass) {\\
            INTERNAL_CATCH_TYPE_GEN                  \\
            INTERNAL_CATCH_NTTP_GEN(INTERNAL_CATCH_REMOVE_PARENS(Signature))\\
            template<typename...Types>\\
            struct TestNameClass{\\
                void reg_tests(){\\
                    int index = 0;\\
                    using expander = int[];\\
                    constexpr char const* tmpl_types[] = {CATCH_REC_LIST(INTERNAL_CATCH_STRINGIZE_WITHOUT_PARENS, INTERNAL_CATCH_REMOVE_PARENS(TmplTypes))};\\
                    constexpr char const* types_list[] = {CATCH_REC_LIST(INTERNAL_CATCH_STRINGIZE_WITHOUT_PARENS, INTERNAL_CATCH_REMOVE_PARENS(TypesList))};\\
                    constexpr auto num_types = sizeof(types_list) / sizeof(types_list[0]);\\
                    (void)expander{(Catch::AutoReg( Catch::makeTestInvoker( &TestName<Types>::test ), CATCH_INTERNAL_LINEINFO, #ClassName, Catch::NameAndTags{ Name \" - \" + std::string(tmpl_types[index / num_types]) + \"<\" + std::string(types_list[index % num_types]) + \">\", Tags } ), index++)... };/* NOLINT */ \\
                }\\
            };\\
            static int INTERNAL_CATCH_UNIQUE_NAME( globalRegistrar ) = [](){\\
                using TestInit = typename create<TestNameClass, decltype(get_wrapper<INTERNAL_CATCH_REMOVE_PARENS(TmplTypes)>()), TypeList<INTERNAL_CATCH_MAKE_TYPE_LISTS_FROM_TYPES(INTERNAL_CATCH_REMOVE_PARENS(TypesList))>>::type;\\
                TestInit t;\\
                t.reg_tests();\\
                return 0;\\
            }(); \\
        }\\
        }" 70579 . 72164) (symbol "CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION" 72174 . 72214) (TEMPLATE "template" 72225 . 72233) (punctuation "<" 72233 . 72234) (TYPENAME "typename" 72234 . 72242) (symbol "TestType" 72243 . 72251) (punctuation ">" 72251 . 72252) (VOID "void" 72263 . 72267) (symbol "TestName" 72268 . 72276) (punctuation "<" 72276 . 72277) (symbol "TestType" 72277 . 72285) (punctuation ">" 72285 . 72286) (punctuation ":" 72286 . 72287) (punctuation ":" 72287 . 72288) (symbol "test" 72288 . 72292) (semantic-list "()" 72292 . 72294)))
          ("INTERNAL_CATCH_REACT" (spp-arg-list ("handler") 119076 . 119087) . 
              ((symbol "handler" 119088 . 119095) (punctuation "." 119095 . 119096) (symbol "complete" 119096 . 119104) (semantic-list "()" 119104 . 119106) (punctuation ";" 119106 . 119107)))
          ("INTERNAL_CATCH_CAPTURE" (spp-arg-list ("varName" "macroName" "...") 123651 . 123678) . 
              ((symbol "auto" 123685 . 123689) (symbol "varName" 123690 . 123697) (punctuation "=" 123698 . 123699) (symbol "Catch" 123700 . 123705) (punctuation ":" 123705 . 123706) (punctuation ":" 123706 . 123707) (symbol "Capturer" 123707 . 123715) (semantic-list "( macroName, CATCH_INTERNAL_LINEINFO, Catch::ResultWas::Info, #__VA_ARGS__ )" 123715 . 123791) (punctuation ";" 123791 . 123792) (symbol "varName" 123799 . 123806) (punctuation "." 123806 . 123807) (symbol "captureValues" 123807 . 123820) (semantic-list "( 0, __VA_ARGS__ )" 123820 . 123838)))
          ("INTERNAL_CATCH_THROWS_STR_MATCHES" (spp-arg-list ("macroName" "resultDisposition" "matcher" "...") 124630 . 124676) . 
              ((DO "do" 124683 . 124685) (semantic-list "{ \\
        Catch::AssertionHandler catchAssertionHandler( macroName##_catch_sr, CATCH_INTERNAL_LINEINFO, CATCH_INTERNAL_STRINGIFY(__VA_ARGS__) \", \" CATCH_INTERNAL_STRINGIFY(matcher), resultDisposition ); \\
        if( catchAssertionHandler.allowThrows() ) \\
            try { \\
                static_cast<void>(__VA_ARGS__); \\
                catchAssertionHandler.handleUnexpectedExceptionNotThrown(); \\
            } \\
            catch( ... ) { \\
                Catch::handleExceptionMatchExpr( catchAssertionHandler, matcher, #matcher##_catch_sr ); \\
            } \\
        else \\
            catchAssertionHandler.handleThrowingCallSkipped(); \\
        INTERNAL_CATCH_REACT( catchAssertionHandler ) \\
    }" 124686 . 125401) (WHILE "while" 125402 . 125407) (semantic-list "( false )" 125407 . 125416)))
          ("INTERNAL_CATCH_SECTION" (spp-arg-list ("...") 127959 . 127966) . 
              ((symbol "CATCH_INTERNAL_START_WARNINGS_SUPPRESSION" 127973 . 128014) (symbol "CATCH_INTERNAL_SUPPRESS_UNUSED_WARNINGS" 128021 . 128060) (IF "if" 128067 . 128069) (semantic-list "( Catch::Section const& INTERNAL_CATCH_UNIQUE_NAME( catch_internal_Section ) = Catch::SectionInfo( CATCH_INTERNAL_LINEINFO, __VA_ARGS__ ) )" 128069 . 128208) (symbol "CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION" 128215 . 128255)))
          ("UNSCOPED_INFO" (spp-arg-list ("msg") 641702 . 641709) . ((symbol "INTERNAL_CATCH_UNSCOPED_INFO" 641710 . 641738) (semantic-list "( \"UNSCOPED_INFO\", msg )" 641738 . 641762)))
          ("SCENARIO_METHOD" (spp-arg-list ("className" "...") 646247 . 646265) . ((symbol "INTERNAL_CATCH_TEST_CASE_METHOD" 646266 . 646297) (semantic-list "( className, \"Scenario: \" __VA_ARGS__ )" 646297 . 646336)))
          ("CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS")
          ("CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS")
          ("CATCH_REC_GET_END1" (spp-arg-list ("...") 26867 . 26872) . ((symbol "CATCH_REC_GET_END2" 26873 . 26891)))
          ("INTERNAL_CATCH_MAKE_TYPE_LIST2" (spp-arg-list ("...") 29776 . 29781) . ((symbol "decltype" 29782 . 29790) (semantic-list "(get_wrapper<INTERNAL_CATCH_REMOVE_PARENS_GEN(__VA_ARGS__)>())" 29790 . 29852)))
          ("INTERNAL_CATCH_REMOVE_PARENS_6_ARG" (spp-arg-list ("_0" "_1" "_2" "_3" "_4" "_5") 31059 . 31083) . 
              ((symbol "INTERNAL_CATCH_REMOVE_PARENS" 31084 . 31112) (semantic-list "(_0)" 31112 . 31116) (punctuation "," 31116 . 31117) (symbol "INTERNAL_CATCH_REMOVE_PARENS_5_ARG" 31118 . 31152) (semantic-list "(_1, _2, _3, _4, _5)" 31152 . 31172)))
          ("INTERNAL_CATCH_DECLARE_SIG_TEST1" (spp-arg-list ("TestName" "signature") 36078 . 36099) . 
              ((TEMPLATE "template" 36105 . 36113) (punctuation "<" 36113 . 36114) (symbol "INTERNAL_CATCH_REMOVE_PARENS" 36114 . 36142) (semantic-list "(signature)" 36142 . 36153) (punctuation ">" 36153 . 36154) (STATIC "static" 36160 . 36166) (VOID "void" 36167 . 36171) (symbol "TestName" 36172 . 36180) (semantic-list "()" 36180 . 36182)))
          ("INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD0" (spp-arg-list ("TestName" "ClassName") 38055 . 38076))
          ("INTERNAL_CATCH_TESTCASE" (spp-arg-list ("...") 55271 . 55278) . ((symbol "INTERNAL_CATCH_TESTCASE2" 55289 . 55313) (semantic-list "( INTERNAL_CATCH_UNIQUE_NAME( C_A_T_C_H_T_E_S_T_ ), __VA_ARGS__ )" 55313 . 55378)))
          ("INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD" (spp-arg-list ("ClassName" "Name" "Tags" "...") 72407 . 72437) . ((symbol "INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_2" 72447 . 72497) (semantic-list "( INTERNAL_CATCH_UNIQUE_NAME( C_A_T_C_H_T_E_M_P_L_A_T_E_T_E_S_T_ ), INTERNAL_CATCH_UNIQUE_NAME( C_A_T_C_H_T_E_M_P_L_A_T_E_T_E_S_T_F_U_N_C_ ), ClassName, Name, Tags, typename T, __VA_ARGS__ )" 72497 . 72687)))
          ("CATCH_ENFORCE" (spp-arg-list ("condition" "...") 164176 . 164194) . 
              ((DO "do" 164201 . 164203) (semantic-list "{ if( !(condition) ) CATCH_ERROR( __VA_ARGS__ ); }" 164203 . 164253) (WHILE "while" 164254 . 164259) (semantic-list "(false)" 164259 . 164266)))
          ("GENERATE_COPY" (spp-arg-list ("...") 171083 . 171090) . 
              ((symbol "Catch" 171097 . 171102) (punctuation ":" 171102 . 171103) (punctuation ":" 171103 . 171104) (symbol "Generators" 171104 . 171114) (punctuation ":" 171114 . 171115) (punctuation ":" 171115 . 171116) (symbol "generate" 171116 . 171124) (semantic-list "( INTERNAL_CATCH_STRINGIZE(INTERNAL_CATCH_UNIQUE_NAME(generator)), \\
                                 CATCH_INTERNAL_LINEINFO, \\
                                 [=]{ using namespace Catch::Generators; return makeGenerators( __VA_ARGS__ ); } )" 171124 . 171367)))
          ("REQUIRE_THROWS_AS" (spp-arg-list ("expr" "exceptionType") 639083 . 639106) . ((symbol "INTERNAL_CATCH_THROWS_AS" 639107 . 639131) (semantic-list "( \"REQUIRE_THROWS_AS\", exceptionType, Catch::ResultDisposition::Normal, expr )" 639131 . 639209)))
          ("CHECKED_IF" (spp-arg-list ("...") 640044 . 640051) . ((symbol "INTERNAL_CATCH_IF" 640052 . 640069) (semantic-list "( \"CHECKED_IF\", Catch::ResultDisposition::ContinueOnFailure, __VA_ARGS__ )" 640069 . 640143)))
          ("CHECKED_ELSE" (spp-arg-list ("...") 640164 . 640171) . ((symbol "INTERNAL_CATCH_ELSE" 640172 . 640191) (semantic-list "( \"CHECKED_ELSE\", Catch::ResultDisposition::ContinueOnFailure, __VA_ARGS__ )" 640191 . 640267)))
          ("CHECK_THROWS_MATCHES" (spp-arg-list ("expr" "exceptionType" "matcher") 640952 . 640984) . ((symbol "INTERNAL_CATCH_THROWS_MATCHES" 640985 . 641014) (semantic-list "( \"CHECK_THROWS_MATCHES\", exceptionType, Catch::ResultDisposition::ContinueOnFailure, matcher, expr )" 641014 . 641115)))
          ("TEMPLATE_PRODUCT_TEST_CASE_METHOD" (spp-arg-list ("className" "...") 643695 . 643713) . ((symbol "INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD" 643714 . 643762) (semantic-list "( className, __VA_ARGS__ )" 643762 . 643788)))
          ("TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG" (spp-arg-list ("className" "...") 643834 . 643852) . ((symbol "INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG" 643853 . 643905) (semantic-list "( className, __VA_ARGS__ )" 643905 . 643931)))
          ("CATCH_VERSION_MAJOR" . ((number "2" 595 . 596)))
          ("CATCH_INTERNAL_CONFIG_EXCEPTIONS_ENABLED")
          ("CATCH_CATCH_ALL" . ((CATCH "catch" 17946 . 17951) (semantic-list "(...)" 17952 . 17957)))
          ("CATCH_REC_LIST_UD" (spp-arg-list ("f" "userdata" "...") 28320 . 28338) . ((symbol "CATCH_RECURSE" 28339 . 28352) (semantic-list "(CATCH_REC_LIST2_UD(f, userdata, __VA_ARGS__, ()()(), ()()(), ()()(), 0))" 28352 . 28425)))
          ("INTERNAL_CATCH_REMOVE_PARENS_2_ARG" (spp-arg-list ("_0" "_1") 30515 . 30523) . 
              ((symbol "INTERNAL_CATCH_REMOVE_PARENS" 30524 . 30552) (semantic-list "(_0)" 30552 . 30556) (punctuation "," 30556 . 30557) (symbol "INTERNAL_CATCH_REMOVE_PARENS_1_ARG" 30558 . 30592) (semantic-list "(_1)" 30592 . 30596)))
          ("INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD1" (spp-arg-list ("TestName" "ClassName" "signature") 38124 . 38156) . 
              ((TEMPLATE "template" 38162 . 38170) (punctuation "<" 38170 . 38171) (TYPENAME "typename" 38171 . 38179) (symbol "TestType" 38180 . 38188) (punctuation ">" 38188 . 38189) (STRUCT "struct" 38196 . 38202) (symbol "TestName" 38203 . 38211) (punctuation ":" 38212 . 38213) (symbol "INTERNAL_CATCH_REMOVE_PARENS" 38214 . 38242) (semantic-list "(ClassName)" 38242 . 38253) (punctuation "<" 38253 . 38254) (symbol "TestType" 38254 . 38262) (punctuation ">" 38262 . 38263) (semantic-list "{ \\
        void test();\\
    }" 38264 . 38295)))
          ("INTERNAL_CATCH_TEST_CASE_METHOD2" (spp-arg-list ("TestName" "ClassName" "...") 56042 . 56070) . 
              ((symbol "CATCH_INTERNAL_START_WARNINGS_SUPPRESSION" 56080 . 56121) (symbol "CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS" 56132 . 56172) (NAMESPACE "namespace" 56183 . 56192) (semantic-list "{ \\
            struct TestName : INTERNAL_CATCH_REMOVE_PARENS(ClassName) { \\
                void test(); \\
            }; \\
            Catch::AutoReg INTERNAL_CATCH_UNIQUE_NAME( autoRegistrar ) ( Catch::makeTestInvoker( &TestName::test ), CATCH_INTERNAL_LINEINFO, #ClassName, Catch::NameAndTags{ __VA_ARGS__ } ); /* NOLINT */ \\
        }" 56192 . 56532) (symbol "CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION" 56543 . 56583) (VOID "void" 56594 . 56598) (symbol "TestName" 56599 . 56607) (punctuation ":" 56607 . 56608) (punctuation ":" 56608 . 56609) (symbol "test" 56609 . 56613) (semantic-list "()" 56613 . 56615)))
          ("INTERNAL_CATCH_THROWS" (spp-arg-list ("macroName" "resultDisposition" "...") 121286 . 121323) . 
              ((DO "do" 121330 . 121332) (semantic-list "{ \\
        Catch::AssertionHandler catchAssertionHandler( macroName##_catch_sr, CATCH_INTERNAL_LINEINFO, CATCH_INTERNAL_STRINGIFY(__VA_ARGS__), resultDisposition); \\
        if( catchAssertionHandler.allowThrows() ) \\
            try { \\
                static_cast<void>(__VA_ARGS__); \\
                catchAssertionHandler.handleUnexpectedExceptionNotThrown(); \\
            } \\
            catch( ... ) { \\
                catchAssertionHandler.handleExceptionThrownAsExpected(); \\
            } \\
        else \\
            catchAssertionHandler.handleThrowingCallSkipped(); \\
        INTERNAL_CATCH_REACT( catchAssertionHandler ) \\
    }" 121333 . 121977) (WHILE "while" 121978 . 121983) (semantic-list "( false )" 121983 . 121992)))
          ("CATCH_MAKE_MSG" (spp-arg-list ("...") 163748 . 163753) . 
              ((semantic-list "(Catch::ReusableStringStream() << __VA_ARGS__)" 163760 . 163806) (punctuation "." 163806 . 163807) (symbol "str" 163807 . 163810) (semantic-list "()" 163810 . 163812)))
          ("GENERATE" (spp-arg-list ("...") 170738 . 170745) . 
              ((symbol "Catch" 170752 . 170757) (punctuation ":" 170757 . 170758) (punctuation ":" 170758 . 170759) (symbol "Generators" 170759 . 170769) (punctuation ":" 170769 . 170770) (punctuation ":" 170770 . 170771) (symbol "generate" 170771 . 170779) (semantic-list "( INTERNAL_CATCH_STRINGIZE(INTERNAL_CATCH_UNIQUE_NAME(generator)), \\
                                 CATCH_INTERNAL_LINEINFO, \\
                                 [ ]{ using namespace Catch::Generators; return makeGenerators( __VA_ARGS__ ); } )" 170779 . 171022)))
          ("SUCCEED" (spp-arg-list ("...") 642805 . 642812) . ((symbol "INTERNAL_CATCH_MSG" 642813 . 642831) (semantic-list "( \"SUCCEED\", Catch::ResultWas::Ok, Catch::ResultDisposition::ContinueOnFailure, __VA_ARGS__ )" 642831 . 642924)))
          ("CATCH_TRANSLATE_EXCEPTION" (spp-arg-list ("signature") 646063 . 646076) . ((symbol "INTERNAL_CATCH_TRANSLATE_EXCEPTION" 646077 . 646111) (semantic-list "( signature )" 646111 . 646124)))
          ("WHEN" (spp-arg-list ("desc") 646514 . 646522) . ((symbol "INTERNAL_CATCH_DYNAMIC_SECTION" 646528 . 646558) (semantic-list "( \"     When: \" << desc )" 646558 . 646583)))
          ("TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED")
          ("CATCH_REC_LIST0" (spp-arg-list ("f" "x" "peek" "...") 27193 . 27210) . 
              ((punctuation "," 27211 . 27212) (symbol "f" 27213 . 27214) (semantic-list "(x)" 27214 . 27217) (symbol "CATCH_DEFER" 27218 . 27229) (semantic-list "( CATCH_REC_NEXT(peek, CATCH_REC_LIST1) )" 27230 . 27271) (semantic-list "( f, peek, __VA_ARGS__ )" 27272 . 27296)))
          ("INTERNAL_CATCH_NTTP_0")
          ("INTERNAL_CATCH_TEST_CASE_METHOD" (spp-arg-list ("ClassName" "...") 56659 . 56677) . ((symbol "INTERNAL_CATCH_TEST_CASE_METHOD2" 56688 . 56720) (semantic-list "( INTERNAL_CATCH_UNIQUE_NAME( C_A_T_C_H_T_E_S_T_ ), ClassName, __VA_ARGS__ )" 56720 . 56796)))
          ("CATCH_REGISTER_ENUM" (spp-arg-list ("enumName" "...") 100465 . 100482) . ((symbol "INTERNAL_CATCH_REGISTER_ENUM" 100483 . 100511) (semantic-list "( enumName, __VA_ARGS__ )" 100511 . 100536)))
          ("INTERNAL_CATCH_TEST" (spp-arg-list ("macroName" "resultDisposition" "...") 119216 . 119253) . 
              ((DO "do" 119260 . 119262) (semantic-list "{ \\
        CATCH_INTERNAL_IGNORE_BUT_WARN(__VA_ARGS__); \\
        Catch::AssertionHandler catchAssertionHandler( macroName##_catch_sr, CATCH_INTERNAL_LINEINFO, CATCH_INTERNAL_STRINGIFY(__VA_ARGS__), resultDisposition ); \\
        INTERNAL_CATCH_TRY { \\
            CATCH_INTERNAL_START_WARNINGS_SUPPRESSION \\
            CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS \\
            catchAssertionHandler.handleExpr( Catch::Decomposer() <= __VA_ARGS__ ); \\
            CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION \\
        } INTERNAL_CATCH_CATCH( catchAssertionHandler ) \\
        INTERNAL_CATCH_REACT( catchAssertionHandler ) \\
    }" 119263 . 119892) (WHILE "while" 119893 . 119898) (semantic-list "( (void)0, (false) && static_cast<bool>( !!(__VA_ARGS__) ) )" 119898 . 119958)))
          ("REQUIRE_FALSE" (spp-arg-list ("...") 638806 . 638813) . ((symbol "INTERNAL_CATCH_TEST" 638814 . 638833) (semantic-list "( \"REQUIRE_FALSE\", Catch::ResultDisposition::Normal | Catch::ResultDisposition::FalseTest, __VA_ARGS__ )" 638833 . 638937)))
          ("CHECK" (spp-arg-list ("...") 639769 . 639776) . ((symbol "INTERNAL_CATCH_TEST" 639777 . 639796) (semantic-list "( \"CHECK\", Catch::ResultDisposition::ContinueOnFailure, __VA_ARGS__ )" 639796 . 639865)))
          ("CHECK_THAT" (spp-arg-list ("arg" "matcher") 641349 . 641365) . ((symbol "INTERNAL_CHECK_THAT" 641366 . 641385) (semantic-list "( \"CHECK_THAT\", matcher, Catch::ResultDisposition::ContinueOnFailure, arg )" 641385 . 641460)))
          ("REQUIRE_THAT" (spp-arg-list ("arg" "matcher") 641482 . 641498) . ((symbol "INTERNAL_CHECK_THAT" 641499 . 641518) (semantic-list "( \"REQUIRE_THAT\", matcher, Catch::ResultDisposition::Normal, arg )" 641518 . 641584)))
          ("SECTION" (spp-arg-list ("...") 642382 . 642389) . ((symbol "INTERNAL_CATCH_SECTION" 642390 . 642412) (semantic-list "( __VA_ARGS__ )" 642412 . 642427)))
          ("AND_GIVEN" (spp-arg-list ("desc") 646437 . 646445) . ((symbol "INTERNAL_CATCH_DYNAMIC_SECTION" 646446 . 646476) (semantic-list "( \"And given: \" << desc )" 646476 . 646501)))
          ("CATCH_VERSION_MINOR" . ((number "13" 625 . 627)))
          ("CATCH_PLATFORM_LINUX")
          ("CATCH_INTERNAL_IGNORE_BUT_WARN" (spp-arg-list ("...") 4754 . 4759) . 
              ((semantic-list "(void)" 4760 . 4766) (symbol "__builtin_constant_p" 4766 . 4786) (semantic-list "(__VA_ARGS__)" 4786 . 4799)))
          ("CATCH_INTERNAL_CONFIG_POSIX_SIGNALS")
          ("CATCH_INTERNAL_LINEINFO" . 
              ((punctuation ":" 20820 . 20821) (punctuation ":" 20821 . 20822) (symbol "Catch" 20822 . 20827) (punctuation ":" 20827 . 20828) (punctuation ":" 20828 . 20829) (symbol "SourceLineInfo" 20829 . 20843) (semantic-list "( __FILE__, static_cast<std::size_t>( __LINE__ ) )" 20843 . 20893)))
          ("CATCH_REC_OUT")
          ("CATCH_REC_LIST1" (spp-arg-list ("f" "x" "peek" "...") 27320 . 27337) . 
              ((punctuation "," 27338 . 27339) (symbol "f" 27340 . 27341) (semantic-list "(x)" 27341 . 27344) (symbol "CATCH_DEFER" 27345 . 27356) (semantic-list "( CATCH_REC_NEXT(peek, CATCH_REC_LIST0) )" 27357 . 27398) (semantic-list "( f, peek, __VA_ARGS__ )" 27399 . 27423)))
          ("INTERNAL_CATCH_EXPAND1" (spp-arg-list ("param") 28563 . 28570) . ((symbol "INTERNAL_CATCH_EXPAND2" 28571 . 28593) (semantic-list "(param)" 28593 . 28600)))
          ("INTERNAL_CATCH_STRINGIZE_WITHOUT_PARENS" (spp-arg-list ("param") 29003 . 29010) . ((symbol "INTERNAL_CATCH_STRINGIZE" 29011 . 29035) (semantic-list "(INTERNAL_CATCH_REMOVE_PARENS(param))" 29035 . 29072)))
          ("INTERNAL_CATCH_REMOVE_PARENS_7_ARG" (spp-arg-list ("_0" "_1" "_2" "_3" "_4" "_5" "_6") 31215 . 31243) . 
              ((symbol "INTERNAL_CATCH_REMOVE_PARENS" 31244 . 31272) (semantic-list "(_0)" 31272 . 31276) (punctuation "," 31276 . 31277) (symbol "INTERNAL_CATCH_REMOVE_PARENS_6_ARG" 31278 . 31312) (semantic-list "(_1, _2, _3, _4, _5, _6)" 31312 . 31336)))
          ("INTERNAL_CATCH_NTTP_1" (spp-arg-list ("signature" "...") 34404 . 34420) . nil ;; Too Long!
          )
          ("INTERNAL_CATCH_DECLARE_SIG_TEST" (spp-arg-list ("TestName" "...") 42280 . 42295) . 
              ((symbol "INTERNAL_CATCH_VA_NARGS_IMPL" 42296 . 42324) (semantic-list "( \"dummy\", __VA_ARGS__, INTERNAL_CATCH_DECLARE_SIG_TEST_X,INTERNAL_CATCH_DECLARE_SIG_TEST_X, INTERNAL_CATCH_DECLARE_SIG_TEST_X, INTERNAL_CATCH_DECLARE_SIG_TEST_X, INTERNAL_CATCH_DECLARE_SIG_TEST_X, INTERNAL_CATCH_DECLARE_SIG_TEST_X, INTERNAL_CATCH_DEFINE_SIG_TEST_X,INTERNAL_CATCH_DECLARE_SIG_TEST_X,INTERNAL_CATCH_DECLARE_SIG_TEST_X, INTERNAL_CATCH_DECLARE_SIG_TEST1, INTERNAL_CATCH_DECLARE_SIG_TEST0)" 42324 . 42726) (semantic-list "(TestName, __VA_ARGS__)" 42726 . 42749)))
          ("INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG" (spp-arg-list ("Name" "Tags" "Signature" "...") 64106 . 64134) . ((symbol "INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE2" 64144 . 64186) (semantic-list "(INTERNAL_CATCH_UNIQUE_NAME( C_A_T_C_H_T_E_M_P_L_A_T_E_T_E_S_T_ ), INTERNAL_CATCH_UNIQUE_NAME( C_A_T_C_H_T_E_M_P_L_A_T_E_T_E_S_T_F_U_N_C_ ), Name, Tags, Signature, __VA_ARGS__)" 64186 . 64362)))
          ("INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG" (spp-arg-list ("ClassName" "Name" "Tags" "Signature" "...") 73188 . 73229) . ((symbol "INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_2" 73239 . 73289) (semantic-list "( INTERNAL_CATCH_UNIQUE_NAME( C_A_T_C_H_T_E_M_P_L_A_T_E_T_E_S_T_ ), INTERNAL_CATCH_UNIQUE_NAME( C_A_T_C_H_T_E_M_P_L_A_T_E_T_E_S_T_F_U_N_C_ ), ClassName, Name, Tags, Signature, __VA_ARGS__ )" 73289 . 73478)))
          ("INTERNAL_CATCH_ELSE" (spp-arg-list ("macroName" "resultDisposition" "...") 120343 . 120380) . 
              ((symbol "INTERNAL_CATCH_TEST" 120387 . 120406) (semantic-list "( macroName, resultDisposition, __VA_ARGS__ )" 120406 . 120451) (punctuation ";" 120451 . 120452) (IF "if" 120459 . 120461) (semantic-list "( !Catch::getResultCapture().lastAssertionPassed() )" 120461 . 120513)))
          ("INTERNAL_CATCH_NO_THROW" (spp-arg-list ("macroName" "resultDisposition" "...") 120626 . 120663) . 
              ((DO "do" 120670 . 120672) (semantic-list "{ \\
        Catch::AssertionHandler catchAssertionHandler( macroName##_catch_sr, CATCH_INTERNAL_LINEINFO, CATCH_INTERNAL_STRINGIFY(__VA_ARGS__), resultDisposition ); \\
        try { \\
            static_cast<void>(__VA_ARGS__); \\
            catchAssertionHandler.handleExceptionNotThrownAsExpected(); \\
        } \\
        catch( ... ) { \\
            catchAssertionHandler.handleUnexpectedInflightException(); \\
        } \\
        INTERNAL_CATCH_REACT( catchAssertionHandler ) \\
    }" 120673 . 121160) (WHILE "while" 121161 . 121166) (semantic-list "( false )" 121166 . 121175)))
          ("REQUIRE_THROWS" (spp-arg-list ("...") 638961 . 638968) . ((symbol "INTERNAL_CATCH_THROWS" 638969 . 638990) (semantic-list "( \"REQUIRE_THROWS\", Catch::ResultDisposition::Normal, __VA_ARGS__ )" 638990 . 639057)))
          ("REQUIRE_THROWS_MATCHES" (spp-arg-list ("expr" "exceptionType" "matcher") 639437 . 639469) . ((symbol "INTERNAL_CATCH_THROWS_MATCHES" 639470 . 639499) (semantic-list "( \"REQUIRE_THROWS_MATCHES\", exceptionType, Catch::ResultDisposition::Normal, matcher, expr )" 639499 . 639591)))
          ("WARN" (spp-arg-list ("msg") 641775 . 641782) . ((symbol "INTERNAL_CATCH_MSG" 641783 . 641801) (semantic-list "( \"WARN\", Catch::ResultWas::Warning, Catch::ResultDisposition::ContinueOnFailure, msg )" 641801 . 641888)))
          ("TEMPLATE_TEST_CASE_METHOD" (spp-arg-list ("className" "...") 643235 . 643253) . ((symbol "INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD" 643254 . 643294) (semantic-list "( className, __VA_ARGS__ )" 643294 . 643320)))
          ("CATCH_DEFER" (spp-arg-list ("id") 26772 . 26776) . 
              ((symbol "id" 26777 . 26779) (symbol "CATCH_EMPTY" 26780 . 26791) (semantic-list "()" 26791 . 26793)))
          ("CATCH_REC_LIST2" (spp-arg-list ("f" "x" "peek" "...") 27447 . 27464) . 
              ((symbol "f" 27467 . 27468) (semantic-list "(x)" 27468 . 27471) (symbol "CATCH_DEFER" 27472 . 27483) (semantic-list "( CATCH_REC_NEXT(peek, CATCH_REC_LIST1) )" 27484 . 27525) (semantic-list "( f, peek, __VA_ARGS__ )" 27526 . 27550)))
          ("CATCH_REC_LIST2_UD" (spp-arg-list ("f" "userdata" "x" "peek" "...") 27904 . 27931) . 
              ((symbol "f" 27934 . 27935) (semantic-list "(userdata, x)" 27935 . 27948) (symbol "CATCH_DEFER" 27949 . 27960) (semantic-list "( CATCH_REC_NEXT(peek, CATCH_REC_LIST1_UD) )" 27961 . 28005) (semantic-list "( f, userdata, peek, __VA_ARGS__ )" 28006 . 28040)))
          ("CATCH_REC_LIST" (spp-arg-list ("f" "...") 28449 . 28457) . ((symbol "CATCH_RECURSE" 28458 . 28471) (semantic-list "(CATCH_REC_LIST2(f, __VA_ARGS__, ()()(), ()()(), ()()(), 0))" 28471 . 28531)))
          ("INTERNAL_CATCH_EXPAND2" (spp-arg-list ("...") 28631 . 28636) . ((spp-symbol-merge ((symbol "INTERNAL_CATCH_NO" 28637 . 28654) (symbol "__VA_ARGS__" 28657 . 28668)) 28637 . 28668)))
          ("INTERNAL_CATCH_REMOVE_PARENS" (spp-arg-list ("...") 29625 . 29630) . ((symbol "INTERNAL_CATCH_EXPAND1" 29631 . 29653) (semantic-list "(INTERNAL_CATCH_DEF __VA_ARGS__)" 29653 . 29685)))
          ("INTERNAL_CATCH_REMOVE_PARENS_3_ARG" (spp-arg-list ("_0" "_1" "_2") 30639 . 30651) . 
              ((symbol "INTERNAL_CATCH_REMOVE_PARENS" 30652 . 30680) (semantic-list "(_0)" 30680 . 30684) (punctuation "," 30684 . 30685) (symbol "INTERNAL_CATCH_REMOVE_PARENS_2_ARG" 30686 . 30720) (semantic-list "(_1, _2)" 30720 . 30728)))
          ("INTERNAL_CATCH_TYPE_GEN" . nil ;; Too Long!
          )
          ("INTERNAL_CATCH_DECLARE_SIG_TEST0" (spp-arg-list ("TestName") 36027 . 36037))
          ("INTERNAL_CATCH_NTTP_REG_METHOD_GEN" (spp-arg-list ("TestName" "...") 40784 . 40799) . 
              ((symbol "INTERNAL_CATCH_VA_NARGS_IMPL" 40800 . 40828) (semantic-list "( \"dummy\", __VA_ARGS__, INTERNAL_CATCH_NTTP_REGISTER_METHOD, INTERNAL_CATCH_NTTP_REGISTER_METHOD, INTERNAL_CATCH_NTTP_REGISTER_METHOD, INTERNAL_CATCH_NTTP_REGISTER_METHOD, INTERNAL_CATCH_NTTP_REGISTER_METHOD, INTERNAL_CATCH_NTTP_REGISTER_METHOD, INTERNAL_CATCH_NTTP_REGISTER_METHOD, INTERNAL_CATCH_NTTP_REGISTER_METHOD, INTERNAL_CATCH_NTTP_REGISTER_METHOD, INTERNAL_CATCH_NTTP_REGISTER_METHOD0, INTERNAL_CATCH_NTTP_REGISTER_METHOD0)" 40828 . 41260) (semantic-list "(TestName, __VA_ARGS__)" 41260 . 41283)))
          ("INTERNAL_CATCH_CATCH" (spp-arg-list ("handler") 118967 . 118978) . 
              ((CATCH "catch" 118979 . 118984) (semantic-list "(...)" 118984 . 118989) (semantic-list "{ handler.handleUnexpectedInflightException(); }" 118990 . 119038)))
          ("INTERNAL_CATCH_INFO" (spp-arg-list ("macroName" "log") 123947 . 123965) . 
              ((symbol "Catch" 123972 . 123977) (punctuation ":" 123977 . 123978) (punctuation ":" 123978 . 123979) (symbol "ScopedMessage" 123979 . 123992) (symbol "INTERNAL_CATCH_UNIQUE_NAME" 123993 . 124019) (semantic-list "( scopedMessage )" 124019 . 124036) (semantic-list "( Catch::MessageBuilder( macroName##_catch_sr, CATCH_INTERNAL_LINEINFO, Catch::ResultWas::Info ) << log )" 124036 . 124141) (punctuation ";" 124141 . 124142)))
          ("INTERNAL_CHECK_THAT" (spp-arg-list ("macroName" "matcher" "resultDisposition" "arg") 160452 . 160498) . 
              ((DO "do" 160505 . 160507) (semantic-list "{ \\
        Catch::AssertionHandler catchAssertionHandler( macroName##_catch_sr, CATCH_INTERNAL_LINEINFO, CATCH_INTERNAL_STRINGIFY(arg) \", \" CATCH_INTERNAL_STRINGIFY(matcher), resultDisposition ); \\
        INTERNAL_CATCH_TRY { \\
            catchAssertionHandler.handleExpr( Catch::makeMatchExpr( arg, matcher, #matcher##_catch_sr ) ); \\
        } INTERNAL_CATCH_CATCH( catchAssertionHandler ) \\
        INTERNAL_CATCH_REACT( catchAssertionHandler ) \\
    }" 160508 . 160966) (WHILE "while" 160967 . 160972) (semantic-list "( false )" 160972 . 160981)))
          ("CATCH_ERROR" (spp-arg-list ("...") 163987 . 163992) . 
              ((symbol "Catch" 163999 . 164004) (punctuation ":" 164004 . 164005) (punctuation ":" 164005 . 164006) (symbol "throw_domain_error" 164006 . 164024) (semantic-list "(CATCH_MAKE_MSG( __VA_ARGS__ ))" 164024 . 164055)))
          ("REQUIRE_NOTHROW" (spp-arg-list ("...") 639655 . 639662) . ((symbol "INTERNAL_CATCH_NO_THROW" 639663 . 639686) (semantic-list "( \"REQUIRE_NOTHROW\", Catch::ResultDisposition::Normal, __VA_ARGS__ )" 639686 . 639754)))
          ("CHECK_THROWS_WITH" (spp-arg-list ("expr" "matcher") 640745 . 640762) . ((symbol "INTERNAL_CATCH_THROWS_STR_MATCHES" 640763 . 640796) (semantic-list "( \"CHECK_THROWS_WITH\", Catch::ResultDisposition::ContinueOnFailure, matcher, expr )" 640796 . 640879)))
          ("TEST_CASE" (spp-arg-list ("...") 642016 . 642023) . ((symbol "INTERNAL_CATCH_TESTCASE" 642024 . 642047) (semantic-list "( __VA_ARGS__ )" 642047 . 642062)))
          ("TEST_CASE_METHOD" (spp-arg-list ("className" "...") 642087 . 642105) . ((symbol "INTERNAL_CATCH_TEST_CASE_METHOD" 642106 . 642137) (semantic-list "( className, __VA_ARGS__ )" 642137 . 642163)))
          ("ANON_TEST_CASE" (spp-arg-list nil 642947 . 642949) . ((symbol "INTERNAL_CATCH_TESTCASE" 642950 . 642973) (semantic-list "()" 642973 . 642975)))
          ("TEMPLATE_TEST_CASE_METHOD_SIG" (spp-arg-list ("className" "...") 643358 . 643376) . ((symbol "INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG" 643377 . 643421) (semantic-list "( className, __VA_ARGS__ )" 643421 . 643447)))
          ("CATCH_CONFIG_WCHAR")
          ("CATCH_INTERNAL_SUPPRESS_UNUSED_WARNINGS")
          ("CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS")
          ("CATCH_RECURSION_LEVEL0" (spp-arg-list ("...") 25642 . 25647) . ((symbol "__VA_ARGS__" 25648 . 25659)))
          ("CATCH_REC_GET_END" (spp-arg-list ("...") 26917 . 26922) . ((symbol "CATCH_REC_GET_END1" 26923 . 26941)))
          ("INTERNAL_CATCH_MAKE_NAMESPACE" (spp-arg-list ("name") 29544 . 29550) . ((symbol "INTERNAL_CATCH_MAKE_NAMESPACE2" 29551 . 29581) (semantic-list "(name)" 29581 . 29587)))
          ("INTERNAL_CATCH_NTTP_REGISTER0" (spp-arg-list ("TestFunc" "signature") 36716 . 36737) . 
              ((TEMPLATE "template" 36743 . 36751) (punctuation "<" 36751 . 36752) (TYPENAME "typename" 36752 . 36760) (symbol "Type" 36761 . 36765) (punctuation ">" 36765 . 36766) (VOID "void" 36772 . 36776) (symbol "reg_test" 36777 . 36785) (semantic-list "(TypeList<Type>, Catch::NameAndTags nameAndTags)" 36785 . 36833) (semantic-list "{\\
        Catch::AutoReg( Catch::makeTestInvoker(&TestFunc<Type>), CATCH_INTERNAL_LINEINFO, Catch::StringRef(), nameAndTags);\\
    }" 36839 . 36972)))
          ("INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD_X" (spp-arg-list ("TestName" "ClassName" "signature" "...") 38345 . 38382) . 
              ((TEMPLATE "template" 38388 . 38396) (punctuation "<" 38396 . 38397) (symbol "INTERNAL_CATCH_REMOVE_PARENS" 38397 . 38425) (semantic-list "(signature)" 38425 . 38436) (punctuation ">" 38436 . 38437) (STRUCT "struct" 38444 . 38450) (symbol "TestName" 38451 . 38459) (punctuation ":" 38460 . 38461) (symbol "INTERNAL_CATCH_REMOVE_PARENS" 38462 . 38490) (semantic-list "(ClassName)" 38490 . 38501) (punctuation "<" 38501 . 38502) (symbol "__VA_ARGS__" 38502 . 38513) (punctuation ">" 38513 . 38514) (semantic-list "{ \\
        void test();\\
    }" 38515 . 38546)))
          ("INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD" (spp-arg-list ("TestName" "...") 39589 . 39604) . 
              ((symbol "INTERNAL_CATCH_VA_NARGS_IMPL" 39605 . 39633) (semantic-list "( \"dummy\", __VA_ARGS__, INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD_X,INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD_X, INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD_X, INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD_X, INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD_X, INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD_X, INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD_X,INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD_X,INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD_X, INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD1, INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD0)" 39633 . 40102) (semantic-list "(TestName, __VA_ARGS__)" 40102 . 40125)))
          ("INTERNAL_CATCH_TEMPLATE_TEST_CASE" (spp-arg-list ("Name" "Tags" "...") 59076 . 59093) . ((symbol "INTERNAL_CATCH_TEMPLATE_TEST_CASE_2" 59104 . 59139) (semantic-list "( INTERNAL_CATCH_UNIQUE_NAME( C_A_T_C_H_T_E_M_P_L_A_T_E_T_E_S_T_ ), INTERNAL_CATCH_UNIQUE_NAME( C_A_T_C_H_T_E_M_P_L_A_T_E_T_E_S_T_F_U_N_C_ ), Name, Tags, typename TestType, __VA_ARGS__ )" 59139 . 59325)))
          ("INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG" (spp-arg-list ("Name" "Tags" "Signature" "...") 59766 . 59794) . ((symbol "INTERNAL_CATCH_TEMPLATE_TEST_CASE_2" 59805 . 59840) (semantic-list "( INTERNAL_CATCH_UNIQUE_NAME( C_A_T_C_H_T_E_M_P_L_A_T_E_T_E_S_T_ ), INTERNAL_CATCH_UNIQUE_NAME( C_A_T_C_H_T_E_M_P_L_A_T_E_T_E_S_T_F_U_N_C_ ), Name, Tags, Signature, __VA_ARGS__ )" 59840 . 60018)))
          ("INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG" (spp-arg-list ("ClassName" "Name" "Tags" "Signature" "...") 69353 . 69394) . ((symbol "INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_2" 69405 . 69447) (semantic-list "( INTERNAL_CATCH_UNIQUE_NAME( C_A_T_C_H_T_E_M_P_L_A_T_E_T_E_S_T_C_L_A_S_S_ ), INTERNAL_CATCH_UNIQUE_NAME( C_A_T_C_H_T_E_M_P_L_A_T_E_T_E_S_T_ ) , ClassName, Name, Tags, Signature, __VA_ARGS__ )" 69447 . 69639)))
          ("REQUIRE" (spp-arg-list ("...") 638696 . 638703) . ((symbol "INTERNAL_CATCH_TEST" 638704 . 638723) (semantic-list "( \"REQUIRE\", Catch::ResultDisposition::Normal, __VA_ARGS__  )" 638723 . 638784)))
          ("CHECK_NOTHROW" (spp-arg-list ("...") 641177 . 641184) . ((symbol "INTERNAL_CATCH_NO_THROW" 641185 . 641208) (semantic-list "( \"CHECK_NOTHROW\", Catch::ResultDisposition::ContinueOnFailure, __VA_ARGS__ )" 641208 . 641285)))
          ("REGISTER_TEST_CASE" (spp-arg-list ("Function" "...") 642291 . 642308) . ((symbol "INTERNAL_CATCH_REGISTER_TESTCASE" 642309 . 642341) (semantic-list "( Function, __VA_ARGS__ )" 642341 . 642366)))
          ("STATIC_REQUIRE" (spp-arg-list ("...") 645674 . 645681) . 
              ((symbol "static_assert" 645688 . 645701) (semantic-list "(   __VA_ARGS__,  #__VA_ARGS__ )" 645701 . 645733) (punctuation ";" 645733 . 645734) (symbol "SUCCEED" 645735 . 645742) (semantic-list "( #__VA_ARGS__ )" 645742 . 645758)))
          ("CATCH_TRY" . ((TRY "try" 17918 . 17921)))
          ("CATCH_RECURSION_LEVEL1" (spp-arg-list ("...") 25690 . 25695) . ((symbol "CATCH_RECURSION_LEVEL0" 25696 . 25718) (semantic-list "(CATCH_RECURSION_LEVEL0(CATCH_RECURSION_LEVEL0(__VA_ARGS__)))" 25718 . 25779)))
          ("CATCH_REC_END" (spp-arg-list ("...") 26702 . 26707))
          ("INTERNAL_CATCH_MAKE_TYPE_LIST" (spp-arg-list ("...") 29890 . 29895) . ((symbol "INTERNAL_CATCH_MAKE_TYPE_LIST2" 29896 . 29926) (semantic-list "(INTERNAL_CATCH_REMOVE_PARENS(__VA_ARGS__))" 29926 . 29969)))
          ("INTERNAL_CATCH_REMOVE_PARENS_8_ARG" (spp-arg-list ("_0" "_1" "_2" "_3" "_4" "_5" "_6" "_7") 31379 . 31411) . 
              ((symbol "INTERNAL_CATCH_REMOVE_PARENS" 31412 . 31440) (semantic-list "(_0)" 31440 . 31444) (punctuation "," 31444 . 31445) (symbol "INTERNAL_CATCH_REMOVE_PARENS_7_ARG" 31446 . 31480) (semantic-list "(_1, _2, _3, _4, _5, _6, _7)" 31480 . 31508)))
          ("INTERNAL_CATCH_NTTP_GEN" (spp-arg-list ("...") 39109 . 39114) . ((symbol "INTERNAL_CATCH_VA_NARGS_IMPL" 39115 . 39143) (semantic-list "(__VA_ARGS__, INTERNAL_CATCH_NTTP_1(__VA_ARGS__), INTERNAL_CATCH_NTTP_1(__VA_ARGS__), INTERNAL_CATCH_NTTP_1(__VA_ARGS__), INTERNAL_CATCH_NTTP_1(__VA_ARGS__), INTERNAL_CATCH_NTTP_1(__VA_ARGS__), INTERNAL_CATCH_NTTP_1( __VA_ARGS__), INTERNAL_CATCH_NTTP_1( __VA_ARGS__), INTERNAL_CATCH_NTTP_1( __VA_ARGS__), INTERNAL_CATCH_NTTP_1( __VA_ARGS__),INTERNAL_CATCH_NTTP_1( __VA_ARGS__), INTERNAL_CATCH_NTTP_0)" 39143 . 39543)))
          ("INTERNAL_CATCH_REGISTER_TESTCASE" (spp-arg-list ("Function" "...") 56926 . 56943) . 
              ((symbol "CATCH_INTERNAL_START_WARNINGS_SUPPRESSION" 56954 . 56995) (symbol "CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS" 57006 . 57046) (symbol "Catch" 57057 . 57062) (punctuation ":" 57062 . 57063) (punctuation ":" 57063 . 57064) (symbol "AutoReg" 57064 . 57071) (symbol "INTERNAL_CATCH_UNIQUE_NAME" 57072 . 57098) (semantic-list "( autoRegistrar )" 57098 . 57115) (semantic-list "( Catch::makeTestInvoker( Function ), CATCH_INTERNAL_LINEINFO, Catch::StringRef(), Catch::NameAndTags{ __VA_ARGS__ } )" 57115 . 57233) (punctuation ";" 57233 . 57234) (symbol "CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION" 57258 . 57298)))
          ("INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE2" (spp-arg-list ("TestName" "TestFuncName" "Name" "Tags" "Signature" "TmplTypes" "TypesList") 60420 . 60489) . 
              ((symbol "CATCH_INTERNAL_START_WARNINGS_SUPPRESSION" 60500 . 60541) (symbol "CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS" 60573 . 60613) (symbol "CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS" 60645 . 60691) (symbol "CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS" 60717 . 60765) (TEMPLATE "template" 60789 . 60797) (punctuation "<" 60797 . 60798) (TYPENAME "typename" 60798 . 60806) (symbol "TestType" 60807 . 60815) (punctuation ">" 60815 . 60816) (STATIC "static" 60817 . 60823) (VOID "void" 60824 . 60828) (symbol "TestFuncName" 60829 . 60841) (semantic-list "()" 60841 . 60843) (punctuation ";" 60843 . 60844) (NAMESPACE "namespace" 60861 . 60870) (semantic-list "{\\
        namespace INTERNAL_CATCH_MAKE_NAMESPACE(TestName) {                                     \\
            INTERNAL_CATCH_TYPE_GEN                                                  \\
            INTERNAL_CATCH_NTTP_GEN(INTERNAL_CATCH_REMOVE_PARENS(Signature))         \\
            template<typename... Types>                               \\
            struct TestName {                                         \\
                void reg_tests() {                                          \\
                    int index = 0;                                    \\
                    using expander = int[];                           \\
                    constexpr char const* tmpl_types[] = {CATCH_REC_LIST(INTERNAL_CATCH_STRINGIZE_WITHOUT_PARENS, INTERNAL_CATCH_REMOVE_PARENS(TmplTypes))};\\
                    constexpr char const* types_list[] = {CATCH_REC_LIST(INTERNAL_CATCH_STRINGIZE_WITHOUT_PARENS, INTERNAL_CATCH_REMOVE_PARENS(TypesList))};\\
                    constexpr auto num_types = sizeof(types_list) / sizeof(types_list[0]);\\
                    (void)expander{(Catch::AutoReg( Catch::makeTestInvoker( &TestFuncName<Types> ), CATCH_INTERNAL_LINEINFO, Catch::StringRef(), Catch::NameAndTags{ Name \" - \" + std::string(tmpl_types[index / num_types]) + \"<\" + std::string(types_list[index % num_types]) + \">\", Tags } ), index++)... };/* NOLINT */\\
                }                                                     \\
            };                                                        \\
            static int INTERNAL_CATCH_UNIQUE_NAME( globalRegistrar ) = [](){ \\
                using TestInit = typename create<TestName, decltype(get_wrapper<INTERNAL_CATCH_REMOVE_PARENS(TmplTypes)>()), TypeList<INTERNAL_CATCH_MAKE_TYPE_LISTS_FROM_TYPES(INTERNAL_CATCH_REMOVE_PARENS(TypesList))>>::type; \\
                TestInit t;                                           \\
                t.reg_tests();                                        \\
                return 0;                                             \\
            }();                                                      \\
        }                                                             \\
        }" 60871 . 63057) (symbol "CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION" 63128 . 63168) (TEMPLATE "template" 63201 . 63209) (punctuation "<" 63209 . 63210) (TYPENAME "typename" 63210 . 63218) (symbol "TestType" 63219 . 63227) (punctuation ">" 63227 . 63228) (STATIC "static" 63273 . 63279) (VOID "void" 63280 . 63284) (symbol "TestFuncName" 63285 . 63297) (semantic-list "()" 63297 . 63299)))
          ("INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_METHOD" (spp-arg-list ("ClassName" "Name" "Tags" "TmplList") 75418 . 75451) . ((symbol "INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_METHOD_2" 75462 . 75509) (semantic-list "( INTERNAL_CATCH_UNIQUE_NAME( C_A_T_C_H_T_E_M_P_L_A_T_E_T_E_S_T_ ), INTERNAL_CATCH_UNIQUE_NAME( C_A_T_C_H_T_E_M_P_L_A_T_E_T_E_S_T_F_U_N_C_ ), ClassName, Name, Tags, TmplList )" 75509 . 75684)))
          ("INTERNAL_CATCH_REGISTER_ENUM" (spp-arg-list ("enumName" "...") 100010 . 100027) . 
              ((NAMESPACE "namespace" 100030 . 100039) (symbol "Catch" 100040 . 100045) (semantic-list "{ \\
    template<> struct StringMaker<enumName> { \\
        static std::string convert( enumName value ) { \\
            static const auto& enumInfo = ::Catch::getMutableRegistryHub().getMutableEnumValuesRegistry().registerEnum( #enumName, #__VA_ARGS__, { __VA_ARGS__ } ); \\
            return static_cast<std::string>(enumInfo.lookup( static_cast<int>( value ) )); \\
        } \\
    }; \\
}" 100046 . 100436)))
          ("INTERNAL_CATCH_UNSCOPED_INFO" (spp-arg-list ("macroName" "log") 124260 . 124278) . 
              ((symbol "Catch" 124285 . 124290) (punctuation ":" 124290 . 124291) (punctuation ":" 124291 . 124292) (symbol "getResultCapture" 124292 . 124308) (semantic-list "()" 124308 . 124310) (punctuation "." 124310 . 124311) (symbol "emplaceUnscopedMessage" 124311 . 124333) (semantic-list "( Catch::MessageBuilder( macroName##_catch_sr, CATCH_INTERNAL_LINEINFO, Catch::ResultWas::Info ) << log )" 124333 . 124438)))
          ("INTERNAL_CATCH_TRANSLATE_EXCEPTION" (spp-arg-list ("signature") 133157 . 133170) . ((symbol "INTERNAL_CATCH_TRANSLATE_EXCEPTION2" 133171 . 133206) (semantic-list "( INTERNAL_CATCH_UNIQUE_NAME( catch_internal_ExceptionTranslator ), signature )" 133206 . 133285)))
          ("GENERATE_REF" (spp-arg-list ("...") 171427 . 171434) . 
              ((symbol "Catch" 171441 . 171446) (punctuation ":" 171446 . 171447) (punctuation ":" 171447 . 171448) (symbol "Generators" 171448 . 171458) (punctuation ":" 171458 . 171459) (punctuation ":" 171459 . 171460) (symbol "generate" 171460 . 171468) (semantic-list "( INTERNAL_CATCH_STRINGIZE(INTERNAL_CATCH_UNIQUE_NAME(generator)), \\
                                 CATCH_INTERNAL_LINEINFO, \\
                                 [&]{ using namespace Catch::Generators; return makeGenerators( __VA_ARGS__ ); } )" 171468 . 171711)))
          ("REQUIRE_THROWS_WITH" (spp-arg-list ("expr" "matcher") 639237 . 639254) . ((symbol "INTERNAL_CATCH_THROWS_STR_MATCHES" 639255 . 639288) (semantic-list "( \"REQUIRE_THROWS_WITH\", Catch::ResultDisposition::Normal, matcher, expr )" 639288 . 639362)))
          ("INFO" (spp-arg-list ("msg") 641638 . 641645) . ((symbol "INTERNAL_CATCH_INFO" 641646 . 641665) (semantic-list "( \"INFO\", msg )" 641665 . 641680)))
          ("CAPTURE" (spp-arg-list ("...") 641904 . 641911) . ((symbol "INTERNAL_CATCH_CAPTURE" 641912 . 641934) (semantic-list "( INTERNAL_CATCH_UNIQUE_NAME(capturer), \"CAPTURE\",__VA_ARGS__ )" 641934 . 641997)))
          ("TEMPLATE_LIST_TEST_CASE" (spp-arg-list ("...") 643963 . 643970) . ((symbol "INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE" 643971 . 644009) (semantic-list "(__VA_ARGS__)" 644009 . 644022)))
          ("SCENARIO" (spp-arg-list ("...") 646178 . 646185) . ((symbol "TEST_CASE" 646186 . 646195) (semantic-list "( \"Scenario: \" __VA_ARGS__ )" 646195 . 646223)))
          ("INTERNAL_CATCH_UNIQUE_NAME_LINE" (spp-arg-list ("name" "line") 18391 . 18405) . ((symbol "INTERNAL_CATCH_UNIQUE_NAME_LINE2" 18406 . 18438) (semantic-list "( name, line )" 18438 . 18452)))
          ("CATCH_REGISTER_TAG_ALIAS" (spp-arg-list ("alias" "spec") 21140 . 21155) . 
              ((symbol "CATCH_INTERNAL_START_WARNINGS_SUPPRESSION" 21162 . 21203) (symbol "CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS" 21210 . 21250) (NAMESPACE "namespace" 21257 . 21266) (semantic-list "{ Catch::RegistrarForTagAliases INTERNAL_CATCH_UNIQUE_NAME( AutoRegisterTagAlias )( alias, spec, CATCH_INTERNAL_LINEINFO ); }" 21266 . 21391) (symbol "CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION" 21398 . 21438)))
          ("CATCH_RECURSION_LEVEL2" (spp-arg-list ("...") 25810 . 25815) . ((symbol "CATCH_RECURSION_LEVEL1" 25816 . 25838) (semantic-list "(CATCH_RECURSION_LEVEL1(CATCH_RECURSION_LEVEL1(__VA_ARGS__)))" 25838 . 25899)))
          ("INTERNAL_CATCH_STRINGIZE" (spp-arg-list ("...") 28808 . 28813) . ((symbol "INTERNAL_CATCH_STRINGIZE2" 28814 . 28839) (semantic-list "(__VA_ARGS__)" 28839 . 28852)))
          ("INTERNAL_CATCH_REMOVE_PARENS_4_ARG" (spp-arg-list ("_0" "_1" "_2" "_3") 30771 . 30787) . 
              ((symbol "INTERNAL_CATCH_REMOVE_PARENS" 30788 . 30816) (semantic-list "(_0)" 30816 . 30820) (punctuation "," 30820 . 30821) (symbol "INTERNAL_CATCH_REMOVE_PARENS_3_ARG" 30822 . 30856) (semantic-list "(_1, _2, _3)" 30856 . 30868)))
          ("INTERNAL_CATCH_METHOD_AS_TEST_CASE" (spp-arg-list ("QualifiedMethod" "...") 55510 . 55534) . 
              ((symbol "CATCH_INTERNAL_START_WARNINGS_SUPPRESSION" 55545 . 55586) (symbol "CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS" 55597 . 55637) (NAMESPACE "namespace" 55648 . 55657) (semantic-list "{ Catch::AutoReg INTERNAL_CATCH_UNIQUE_NAME( autoRegistrar )( Catch::makeTestInvoker( &QualifiedMethod ), CATCH_INTERNAL_LINEINFO, \"&\" #QualifiedMethod, Catch::NameAndTags{ __VA_ARGS__ } ); }" 55657 . 55848) (symbol "CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION" 55872 . 55912)))
          ("INTERNAL_CATCH_TEMPLATE_TEST_CASE_2" (spp-arg-list ("TestName" "TestFunc" "Name" "Tags" "Signature" "...") 57431 . 57480) . 
              ((symbol "CATCH_INTERNAL_START_WARNINGS_SUPPRESSION" 57490 . 57531) (symbol "CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS" 57542 . 57582) (symbol "CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS" 57593 . 57639) (symbol "CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS" 57650 . 57698) (symbol "INTERNAL_CATCH_DECLARE_SIG_TEST" 57709 . 57740) (semantic-list "(TestFunc, INTERNAL_CATCH_REMOVE_PARENS(Signature))" 57740 . 57791) (punctuation ";" 57791 . 57792) (NAMESPACE "namespace" 57802 . 57811) (semantic-list "{\\
        namespace INTERNAL_CATCH_MAKE_NAMESPACE(TestName){\\
            INTERNAL_CATCH_TYPE_GEN\\
            INTERNAL_CATCH_NTTP_GEN(INTERNAL_CATCH_REMOVE_PARENS(Signature))\\
            INTERNAL_CATCH_NTTP_REG_GEN(TestFunc,INTERNAL_CATCH_REMOVE_PARENS(Signature))\\
            template<typename...Types> \\
            struct TestName{\\
                TestName(){\\
                    int index = 0;                                    \\
                    constexpr char const* tmpl_types[] = {CATCH_REC_LIST(INTERNAL_CATCH_STRINGIZE_WITHOUT_PARENS, __VA_ARGS__)};\\
                    using expander = int[];\\
                    (void)expander{(reg_test(Types{}, Catch::NameAndTags{ Name \" - \" + std::string(tmpl_types[index]), Tags } ), index++)... };/* NOLINT */ \\
                }\\
            };\\
            static int INTERNAL_CATCH_UNIQUE_NAME( globalRegistrar ) = [](){\\
            TestName<INTERNAL_CATCH_MAKE_TYPE_LISTS_FROM_TYPES(__VA_ARGS__)>();\\
            return 0;\\
        }();\\
        }\\
        }" 57812 . 58837) (symbol "CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION" 58847 . 58887) (symbol "INTERNAL_CATCH_DEFINE_SIG_TEST" 58898 . 58928) (semantic-list "(TestFunc,INTERNAL_CATCH_REMOVE_PARENS(Signature))" 58928 . 58978)))
          ("INTERNAL_CATCH_TRANSLATE_EXCEPTION2" (spp-arg-list ("translatorName" "signature") 132696 . 132725) . 
              ((STATIC "static" 132732 . 132738) (symbol "std" 132739 . 132742) (punctuation ":" 132742 . 132743) (punctuation ":" 132743 . 132744) (symbol "string" 132744 . 132750) (symbol "translatorName" 132751 . 132765) (semantic-list "( signature )" 132765 . 132778) (punctuation ";" 132778 . 132779) (symbol "CATCH_INTERNAL_START_WARNINGS_SUPPRESSION" 132786 . 132827) (symbol "CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS" 132834 . 132874) (NAMESPACE "namespace" 132881 . 132890) (semantic-list "{ Catch::ExceptionTranslatorRegistrar INTERNAL_CATCH_UNIQUE_NAME( catch_internal_ExceptionRegistrar )( &translatorName ); }" 132890 . 133013) (symbol "CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION" 133020 . 133060) (STATIC "static" 133067 . 133073) (symbol "std" 133074 . 133077) (punctuation ":" 133077 . 133078) (punctuation ":" 133078 . 133079) (symbol "string" 133079 . 133085) (symbol "translatorName" 133086 . 133100) (semantic-list "( signature )" 133100 . 133113)))
          ("CHECK_THROWS_AS" (spp-arg-list ("expr" "exceptionType") 640584 . 640607) . ((symbol "INTERNAL_CATCH_THROWS_AS" 640608 . 640632) (semantic-list "( \"CHECK_THROWS_AS\", exceptionType, Catch::ResultDisposition::ContinueOnFailure, expr )" 640632 . 640719)))
          ("TEMPLATE_TEST_CASE" (spp-arg-list ("...") 643054 . 643061) . ((symbol "INTERNAL_CATCH_TEMPLATE_TEST_CASE" 643062 . 643095) (semantic-list "( __VA_ARGS__ )" 643095 . 643110)))
          ("TEMPLATE_PRODUCT_TEST_CASE" (spp-arg-list ("...") 643482 . 643489) . ((symbol "INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE" 643490 . 643531) (semantic-list "( __VA_ARGS__ )" 643531 . 643546)))
          ("CATCH_VERSION_PATCH" . ((number "9" 656 . 657)))
          ("CATCH_CATCH_ANON" (spp-arg-list ("type") 17982 . 17988) . ((CATCH "catch" 17989 . 17994) (semantic-list "(type)" 17995 . 18001)))
          ("CATCH_RECURSION_LEVEL3" (spp-arg-list ("...") 25930 . 25935) . ((symbol "CATCH_RECURSION_LEVEL2" 25936 . 25958) (semantic-list "(CATCH_RECURSION_LEVEL2(CATCH_RECURSION_LEVEL2(__VA_ARGS__)))" 25958 . 26019)))
          ("CATCH_EMPTY" (spp-arg-list nil 26750 . 26752))
          ("CATCH_REC_LIST1_UD" (spp-arg-list ("f" "userdata" "x" "peek" "...") 27741 . 27768) . 
              ((punctuation "," 27769 . 27770) (symbol "f" 27771 . 27772) (semantic-list "(userdata, x)" 27772 . 27785) (symbol "CATCH_DEFER" 27786 . 27797) (semantic-list "( CATCH_REC_NEXT(peek, CATCH_REC_LIST0_UD) )" 27798 . 27842) (semantic-list "( f, userdata, peek, __VA_ARGS__ )" 27843 . 27877)))
          ("INTERNAL_CATCH_MAKE_TYPE_LISTS_FROM_TYPES" (spp-arg-list ("...") 30323 . 30328) . ((symbol "CATCH_REC_LIST" 30334 . 30348) (semantic-list "(INTERNAL_CATCH_MAKE_TYPE_LIST,__VA_ARGS__)" 30348 . 30391)))
          ("INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE" (spp-arg-list ("Name" "Tags" "...") 63405 . 63422) . ((symbol "INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE2" 63432 . 63474) (semantic-list "(INTERNAL_CATCH_UNIQUE_NAME( C_A_T_C_H_T_E_M_P_L_A_T_E_T_E_S_T_ ), INTERNAL_CATCH_UNIQUE_NAME( C_A_T_C_H_T_E_M_P_L_A_T_E_T_E_S_T_F_U_N_C_ ), Name, Tags, typename T,__VA_ARGS__)" 63474 . 63650)))
          ("INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE" (spp-arg-list ("Name" "Tags" "TmplList") 66560 . 66582) . ((symbol "INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_2" 66593 . 66633) (semantic-list "( INTERNAL_CATCH_UNIQUE_NAME( C_A_T_C_H_T_E_M_P_L_A_T_E_T_E_S_T_ ), INTERNAL_CATCH_UNIQUE_NAME( C_A_T_C_H_T_E_M_P_L_A_T_E_T_E_S_T_F_U_N_C_ ), Name, Tags, TmplList )" 66633 . 66797)))
          ("INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD" (spp-arg-list ("ClassName" "Name" "Tags" "...") 68597 . 68626) . ((symbol "INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_2" 68637 . 68679) (semantic-list "( INTERNAL_CATCH_UNIQUE_NAME( C_A_T_C_H_T_E_M_P_L_A_T_E_T_E_S_T_C_L_A_S_S_ ), INTERNAL_CATCH_UNIQUE_NAME( C_A_T_C_H_T_E_M_P_L_A_T_E_T_E_S_T_ ) , ClassName, Name, Tags, typename T, __VA_ARGS__ )" 68679 . 68872)))
          ("INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_METHOD_2" (spp-arg-list ("TestNameClass" "TestName" "ClassName" "Name" "Tags" "TmplList") 73937 . 73996) . 
              ((symbol "CATCH_INTERNAL_START_WARNINGS_SUPPRESSION" 74007 . 74048) (symbol "CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS" 74059 . 74099) (symbol "CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS" 74110 . 74158) (TEMPLATE "template" 74169 . 74177) (punctuation "<" 74177 . 74178) (TYPENAME "typename" 74178 . 74186) (symbol "TestType" 74187 . 74195) (punctuation ">" 74195 . 74196) (STRUCT "struct" 74207 . 74213) (symbol "TestName" 74214 . 74222) (punctuation ":" 74223 . 74224) (symbol "INTERNAL_CATCH_REMOVE_PARENS" 74225 . 74253) (semantic-list "(ClassName <TestType>)" 74253 . 74275) (semantic-list "{ \\
            void test();\\
        }" 74276 . 74315) (punctuation ";" 74315 . 74316) (NAMESPACE "namespace" 74326 . 74335) (semantic-list "{\\
        namespace INTERNAL_CATCH_MAKE_NAMESPACE(TestName){ \\
            INTERNAL_CATCH_TYPE_GEN\\
            template<typename...Types>\\
            struct TestNameClass{\\
                void reg_tests(){\\
                    int index = 0;\\
                    using expander = int[];\\
                    (void)expander{(Catch::AutoReg( Catch::makeTestInvoker( &TestName<Types>::test ), CATCH_INTERNAL_LINEINFO, #ClassName, Catch::NameAndTags{ Name \" - \" + std::string(INTERNAL_CATCH_STRINGIZE(TmplList)) + \" - \" + std::to_string(index), Tags } ), index++)... };/* NOLINT */ \\
                }\\
            };\\
            static int INTERNAL_CATCH_UNIQUE_NAME( globalRegistrar ) = [](){\\
                using TestInit = typename convert<TestNameClass, TmplList>::type;\\
                TestInit t;\\
                t.reg_tests();\\
                return 0;\\
            }(); \\
        }}" 74336 . 75233) (symbol "CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION" 75243 . 75283) (TEMPLATE "template" 75294 . 75302) (punctuation "<" 75302 . 75303) (TYPENAME "typename" 75303 . 75311) (symbol "TestType" 75312 . 75320) (punctuation ">" 75320 . 75321) (VOID "void" 75332 . 75336) (symbol "TestName" 75337 . 75345) (punctuation "<" 75345 . 75346) (symbol "TestType" 75346 . 75354) (punctuation ">" 75354 . 75355) (punctuation ":" 75355 . 75356) (punctuation ":" 75356 . 75357) (symbol "test" 75357 . 75361) (semantic-list "()" 75361 . 75363)))
          ("CATCH_INTERNAL_STRINGIFY" (spp-arg-list ("...") 118425 . 118430) . ((punctuation "#" 118431 . 118432) (symbol "__VA_ARGS__" 118432 . 118443)))
          ("INTERNAL_CATCH_TRY" . ((TRY "try" 118935 . 118938)))
          ("INTERNAL_CATCH_THROWS_AS" (spp-arg-list ("macroName" "exceptionType" "resultDisposition" "expr") 122106 . 122159) . 
              ((DO "do" 122166 . 122168) (semantic-list "{ \\
        Catch::AssertionHandler catchAssertionHandler( macroName##_catch_sr, CATCH_INTERNAL_LINEINFO, CATCH_INTERNAL_STRINGIFY(expr) \", \" CATCH_INTERNAL_STRINGIFY(exceptionType), resultDisposition ); \\
        if( catchAssertionHandler.allowThrows() ) \\
            try { \\
                static_cast<void>(expr); \\
                catchAssertionHandler.handleUnexpectedExceptionNotThrown(); \\
            } \\
            catch( exceptionType const& ) { \\
                catchAssertionHandler.handleExceptionThrownAsExpected(); \\
            } \\
            catch( ... ) { \\
                catchAssertionHandler.handleUnexpectedInflightException(); \\
            } \\
        else \\
            catchAssertionHandler.handleThrowingCallSkipped(); \\
        INTERNAL_CATCH_REACT( catchAssertionHandler ) \\
    }" 122169 . 122984) (WHILE "while" 122985 . 122990) (semantic-list "( false )" 122990 . 122999)))
          ("INTERNAL_CATCH_MSG" (spp-arg-list ("macroName" "messageType" "resultDisposition" "...") 123107 . 123157) . 
              ((DO "do" 123164 . 123166) (semantic-list "{ \\
        Catch::AssertionHandler catchAssertionHandler( macroName##_catch_sr, CATCH_INTERNAL_LINEINFO, Catch::StringRef(), resultDisposition ); \\
        catchAssertionHandler.handleMessage( messageType, ( Catch::MessageStream() << __VA_ARGS__ + ::Catch::StreamEndStop() ).m_stream.str() ); \\
        INTERNAL_CATCH_REACT( catchAssertionHandler ) \\
    }" 123167 . 123524) (WHILE "while" 123525 . 123530) (semantic-list "( false )" 123530 . 123539)))
          ("FAIL_CHECK" (spp-arg-list ("...") 642654 . 642661) . ((symbol "INTERNAL_CATCH_MSG" 642662 . 642680) (semantic-list "( \"FAIL_CHECK\", Catch::ResultWas::ExplicitFailure, Catch::ResultDisposition::ContinueOnFailure, __VA_ARGS__ )" 642680 . 642789)))
          ("GIVEN" (spp-arg-list ("desc") 646351 . 646359) . ((symbol "INTERNAL_CATCH_DYNAMIC_SECTION" 646364 . 646394) (semantic-list "( \"    Given: \" << desc )" 646394 . 646419)))
          ("AND_THEN" (spp-arg-list ("desc") 646764 . 646772) . ((symbol "INTERNAL_CATCH_DYNAMIC_SECTION" 646774 . 646804) (semantic-list "( \"      And: \" << desc )" 646804 . 646829)))
          )
))
  :file "!usr!include!catch2!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
