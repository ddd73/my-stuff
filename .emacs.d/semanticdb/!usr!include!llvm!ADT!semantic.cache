;; Object semanticdb-project-database-file-15556116f1be
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-15556116f1be"
  :tables
  (list
    (semanticdb-table "semanticdb-table-15556116f1f0"
      :file "Statistic.h"
      :fsize 7172
      :lastmodtime '(25462 30192 0 0))
    (semanticdb-table "semanticdb-table-155561f6da30"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_STLEXTRAS_H" variable (:constant-flag t) nil [664 684])
            ("llvm/ADT/Optional.h" include nil nil [686 716])
            ("llvm/ADT/STLArrayExtras.h" include nil nil [717 753])
            ("llvm/ADT/STLForwardCompat.h" include nil nil [754 792])
            ("llvm/ADT/STLFunctionalExtras.h" include nil nil [793 834])
            ("llvm/ADT/identity.h" include nil nil [835 865])
            ("llvm/ADT/iterator.h" include nil nil [866 896])
            ("llvm/ADT/iterator_range.h" include nil nil [897 933])
            ("llvm/Config/abi-breaking.h" include nil nil [934 971])
            ("llvm/Support/ErrorHandling.h" include nil nil [972 1011])
            ("algorithm" include (:system-flag t) nil [1012 1032])
            ("cassert" include (:system-flag t) nil [1033 1051])
            ("cstddef" include (:system-flag t) nil [1052 1070])
            ("cstdint" include (:system-flag t) nil [1071 1089])
            ("cstdlib" include (:system-flag t) nil [1090 1108])
            ("functional" include (:system-flag t) nil [1109 1130])
            ("initializer_list" include (:system-flag t) nil [1131 1158])
            ("iterator" include (:system-flag t) nil [1159 1178])
            ("limits" include (:system-flag t) nil [1179 1196])
            ("memory" include (:system-flag t) nil [1197 1214])
            ("tuple" include (:system-flag t) nil [1215 1231])
            ("type_traits" include (:system-flag t) nil [1232 1254])
            ("utility" include (:system-flag t) nil [1255 1273])
            ("llvm" type
               (:members 
                  ( ("SameType" type
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("T" type nil nil nil))                          
                        :type "struct"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [1501 1542])
                    ("detail" type
                       (:members 
                          ( ("IterOfRange" variable
                               (:default-value "decltype(std::begin(std::declval<RangeT &>()))"
                                :type "int")
                                (reparse-symbol namespacesubparts) [1597 1658])
                            ("type" variable (:type "int") (reparse-symbol namespacesubparts) [1794 1799]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1544 1802])
                    ("make_const_ptr" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("type" variable (:type "int") (reparse-symbol classsubparts) [2159 2164]))                          )
                        (reparse-symbol namespacesubparts) [2031 2167])
                    ("make_const_ref" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("type" variable (:type "int") (reparse-symbol classsubparts) [2307 2312]))                          )
                        (reparse-symbol namespacesubparts) [2169 2315])
                    ("detail" type
                       (:members 
                          ( ("detector" type
                               (:members 
                                  ( ("std::false_type" variable (:type "int") (reparse-symbol classsubparts) [2478 2494]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [2442 2497]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [2317 2643])
                    ("value_t" variable (:type "int") (reparse-symbol namespacesubparts) [3212 3220])
                    ("detail" type
                       (:members 
                          ( ("is_invocable" variable
                               (:default-value "decltype(std::declval<Callable &>()(std::declval<Args>()...))"
                                :type "int")
                                (reparse-symbol namespacesubparts) [3294 3375]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [3222 3377])
                    ("ReturnType" function
                       (:arguments 
                          ( ("" variable (:type ("ClassType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4142 4152]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [4130 4164])
                    ("ReturnType" function
                       (:arguments 
                          ( ("" variable (:type ("ClassType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4640 4650]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [4628 4662])
                    ("ReturnType" function
                       (:arguments 
                          ( ("" variable (:type ("ClassType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4705 4715]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [4693 4727])
                    ("function_traits" type
                       (:template-specifier 
                          ( ("ReturnType" type (:typevar "*") nil nil)
                            ("false" type nil nil nil))                          
                        :members 
                          ( ("" type
                               (:members 
                                  ( ("num_args" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4945 4955]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [4938 4974])
                            ("result_t" variable
                               (:default-value "ReturnType"
                                :type "int")
                                (reparse-symbol classsubparts) [5024 5046])
                            ("type" variable (:type "int") (reparse-symbol classsubparts) [5187 5192]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [4831 5195])
                    ("function_traits" type
                       (:template-specifier 
                          ( ("ReturnType" type nil nil nil)
                            ("false" type nil nil nil))                          
                        :superclasses 
                          ( ("function_traits" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [5298 5410])
                    ("detail" type
                       (:members 
                          ( ("TypesAreDistinct" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [5878 5902])
                            ("TypesAreDistinct" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("std::true_type" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("T" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [6106 6175]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [5821 6177])
                    ("TypesAreDistinct" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [6515 6539])
                    ("TypesAreDistinct" type
                       (:type "struct"
                        :superclasses 
                          ( ("std::true_type" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [6540 6598])
                    ("FirstIndexOfType" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [7246 7270])
                    ("std::integral_constant" variable (:type "int") (reparse-symbol namespacesubparts) [7515 7552])
                    ("adl_detail" type
                       (:members 
                          ( ("std::begin" using (:type ("std::begin" type
                                 (:prototype t
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [7994 8011])
                            ("adl_begin" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("ContainerTy" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8070 8084])
                                    ("" variable (:type ("container" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8084 8094]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [8060 8152])
                            ("std::end" using (:type ("std::end" type
                                 (:prototype t
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [8154 8169])
                            ("adl_end" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("ContainerTy" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8226 8240])
                                    ("" variable (:type ("container" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8240 8250]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [8218 8306])
                            ("std::swap" using (:type ("std::swap" type
                                 (:prototype t
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [8308 8324])
                            ("noexcept" function
                               (:arguments 
                                  ( ("" variable (:type ("noexcept" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8389 8496]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [8380 8553]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [7970 8556])
                    ("adl_begin" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("ContainerTy" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8643 8657])
                            ("" variable (:type ("container" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8657 8667]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [8633 8741])
                    ("adl_end" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("ContainerTy" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8798 8812])
                            ("" variable (:type ("container" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8812 8822]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [8790 8894])
                    ("noexcept" function
                       (:arguments 
                          ( ("" variable (:type ("noexcept" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8964 9032]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [8950 9105])
                    ("empty" function
                       (:arguments 
                          ( ("RangeOrContainer" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9226 9252]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [9215 9323])
                    ("hasSingleElement" function
                       (:template 
                          ( ("ContainerTy" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("ContainerTy" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9451 9465])
                            ("" variable (:type ("C" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9465 9467]))                          )
                        (reparse-symbol namespacesubparts) [9397 9552])
                    ("drop_begin" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("auto" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9680 9684])
                            ("" variable (:type ("RangeOrContainer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9684 9701])
                            ("N" variable
                               (:default-value "1"
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9702 9714]))                          )
                        (reparse-symbol namespacesubparts) [9642 9830])
                    ("map_iterator" function
                       (:template 
                          ( ("ItTy" type (:type "class") nil nil)
                            ("FuncTy" type (:type "class") nil nil))                          
                        :type ("mapped_iterator" type
                             (:template-specifier 
                                ( ("ItTy" type nil nil nil)
                                  ("FuncTy" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("I" variable (:type ("ItTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10979 10986])
                            ("F" variable (:type ("FuncTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10987 10996]))                          
                        :typemodifiers ("inline"))
                        (reparse-symbol namespacesubparts) [10893 11068])
                    ("map_range" function
                       (:template 
                          ( ("ContainerTy" type (:type "class") nil nil)
                            ("FuncTy" type (:type "class") nil nil))                          
                        :type ("auto" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("ContainerTy" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11128 11142])
                            ("" variable (:type ("C" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11142 11144])
                            ("F" variable (:type ("FuncTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11145 11154]))                          )
                        (reparse-symbol namespacesubparts) [11070 11233])
                    ("has_rbegin_impl" type
                       (:template 
                          ( ("Ty" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("test" function
                               (:template 
                                  ( ("Inner" type (:type "class") nil nil))                                  
                                :type ("yes" type (:type "class") nil nil)
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :type ("Inner" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12447 12456])
                                    ("" variable (:type ("decltype" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12457 12478])
                                    ("" variable (:type ("nullptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12483 12491]))                                  
                                :typemodifiers ("static")
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [12402 12492])
                            ("test" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [12534 12538]))                                  
                                :type ("no" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12518 12539])
                            ("public" label nil (reparse-symbol classsubparts) [12541 12548]))                          )
                        (reparse-symbol namespacesubparts) [12307 12621])
                    ("reverse" function
                       (:template 
                          ( ("ContainerTy" type (:type "class") nil nil))                          
                        :type ("auto" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("ContainerTy" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13006 13020])
                            ("" variable (:type ("C" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13020 13022])
                            ("" variable (:type ("std::enable_if_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13036 13053])
                            ("" variable (:type ("has_rbegin" type
                                 (:template-specifier 
                                    ( ("ContainerTy" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [13053 13077])
                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13078 13084])
                            ("" variable (:type ("nullptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13089 13097]))                          )
                        (reparse-symbol namespacesubparts) [12961 13144])
                    ("reverse" function
                       (:template 
                          ( ("ContainerTy" type (:type "class") nil nil))                          
                        :type ("auto" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("ContainerTy" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13389 13403])
                            ("" variable (:type ("C" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13403 13405])
                            ("" variable (:type ("std::enable_if_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13419 13436])
                            ("" variable (:type ("has_rbegin" type
                                 (:template-specifier 
                                    ( ("ContainerTy" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [13437 13461])
                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13462 13468])
                            ("" variable (:type ("nullptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13473 13481]))                          )
                        (reparse-symbol namespacesubparts) [13344 13610])
                    ("filter_iterator_impl" type
                       (:superclasses 
                          ( ("filter_iterator_base" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [15800 15807])
                            ("filter_iterator_impl" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Begin" variable (:type ("WrappedIteratorT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15831 15854])
                                    ("End" variable (:type ("WrappedIteratorT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15855 15876])
                                    ("Pred" variable (:type ("PredicateT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15900 15916]))                                  
                                :type ("filter_iterator_impl" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15810 15988]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [15698 15991])
                    ("filter_iterator_impl" type
                       (:template 
                          ( ("WrappedIteratorT" type (:type "class") nil nil)
                            ("PredicateT" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("filter_iterator_impl::filter_iterator_base" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [16389 16441])
                            ("findPrevValid" function (:type "void") (reparse-symbol classsubparts) [16445 16532])
                            ("public" label nil (reparse-symbol classsubparts) [16534 16541])
                            ("filter_iterator_impl" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Begin" variable (:type ("WrappedIteratorT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16593 16616])
                                    ("End" variable (:type ("WrappedIteratorT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16617 16638])
                                    ("Pred" variable (:type ("PredicateT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16662 16678]))                                  
                                :type ("filter_iterator_impl" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16572 16713])
                            ("--" function
                               (:operator-flag t
                                :type ("filter_iterator_impl" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16717 16821]))                          
                        :superclasses 
                          ( ("filter_iterator_base" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :template-specifier 
                          ( ("WrappedIteratorT" type nil nil nil)
                            ("PredicateT" type nil nil nil)
                            ("std::bidirectional_iterator_tag" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [16065 16824])
                    ("detail" type
                       (:members 
                          ( ("fwd_or_bidi_tag_impl" type
                               (:template 
                                  ( ("bool" type (:typevar "is_bidirectional") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("std::forward_iterator_tag" variable (:type "int") (reparse-symbol classsubparts) [16924 16950]))                                  )
                                (reparse-symbol namespacesubparts) [16846 16953])
                            ("fwd_or_bidi_tag_impl" type
                               (:type "struct"
                                :members 
                                  ( ("std::bidirectional_iterator_tag" variable (:type "int") (reparse-symbol classsubparts) [17018 17050]))                                  
                                :template-specifier 
                                  ( ("true" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [16955 17053])
                            ("fwd_or_bidi_tag" type
                               (:template 
                                  ( ("IterT" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" variable (:type "int") (reparse-symbol classsubparts) [17471 17476]))                                  )
                                (reparse-symbol namespacesubparts) [17247 17479]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [16826 17482])
                    ("make_filter_range" function
                       (:template 
                          ( ("RangeT" type (:type "class") nil nil)
                            ("PredicateT" type (:type "class") nil nil))                          
                        :type ("iterator_range" type
                             (:template-specifier 
                                ( ("filter_iterator" type (:template-specifier 
                                    ( ("detail::IterOfRange" type (:template-specifier 
                                        ( ("RangeT" type nil nil nil))                                        ) nil nil)
                                      ("PredicateT" type nil nil nil))                                    ) nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("RangeT" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [18388 18397])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18397 18403])
                            ("Pred" variable (:type ("PredicateT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18404 18420]))                          )
                        (reparse-symbol namespacesubparts) [18249 18796])
                    ("early_inc_iterator_impl" type
                       (:template 
                          ( ("WrappedIteratorT" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("early_inc_iterator_impl::iterator_adaptor_base" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [19818 19874])
                            ("std::iterator_traits::pointer" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [19895 19952])
                            ("protected" label nil (reparse-symbol classsubparts) [19954 19964])
                            ("public" label nil (reparse-symbol classsubparts) [20044 20051])
                            ("early_inc_iterator_impl" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("I" variable (:type ("WrappedIteratorT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20078 20097]))                                  
                                :type ("early_inc_iterator_impl" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [20054 20111])
                            ("" function
                               (:operator-flag t
                                :function-pointer t
                                :type "int")
                                (reparse-symbol classsubparts) [20185 20365])
                            ("++" function
                               (:operator-flag t
                                :type ("early_inc_iterator_impl" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [20396 20608])
                            ("==" function
                               (:operator-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("early_inc_iterator_impl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20635 20670])
                                    ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("early_inc_iterator_impl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20696 20731]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [20612 20911]))                          
                        :superclasses 
                          ( ("iterator_adaptor_base" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [19577 20914])
                    ("make_early_inc_range" function
                       (:template 
                          ( ("RangeT" type (:type "class") nil nil))                          
                        :type ("iterator_range" type
                             (:template-specifier 
                                ( ("early_inc_iterator_impl" type (:template-specifier 
                                    ( ("detail::IterOfRange" type (:template-specifier 
                                        ( ("RangeT" type nil nil nil))                                        ) nil nil))                                    ) nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("RangeT" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [21690 21699])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21699 21705]))                          )
                        (reparse-symbol namespacesubparts) [21573 21956])
                    ("all_of" function
                       (:template 
                          ( ("R" type (:type "class") nil nil)
                            ("UnaryPredicate" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [22088 22092])
                            ("" variable (:type ("range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22092 22098])
                            ("P" variable (:type ("UnaryPredicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22099 22116]))                          
                        :prototype-flag t)
                        (reparse-symbol namespacesubparts) [22029 22117])
                    ("any_of" function
                       (:template 
                          ( ("R" type (:type "class") nil nil)
                            ("UnaryPredicate" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [22177 22181])
                            ("" variable (:type ("range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22181 22187])
                            ("P" variable (:type ("UnaryPredicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22188 22205]))                          
                        :prototype-flag t)
                        (reparse-symbol namespacesubparts) [22118 22206])
                    ("detail" type
                       (:members 
                          ( ("std::declval" using (:type ("std::declval" type
                                 (:prototype t
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [22228 22247])
                            ("ZipTupleType" type (:type "struct") (reparse-symbol namespacesubparts) [22424 22507])
                            ("zippy" type
                               (:members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [26321 26328])
                                    ("iterator::iterator_category" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [26431 26468])
                                    ("iterator::value_type" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [26490 26520])
                                    ("iterator::difference_type" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [26547 26582])
                                    ("iterator::pointer" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [26601 26628])
                                    ("iterator::reference" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [26649 26678])
                                    ("private" label nil (reparse-symbol classsubparts) [26680 26688])
                                    ("ts" variable (:type "int") (reparse-symbol classsubparts) [26711 26714])
                                    ("begin_impl" function
                                       (:methodconst-flag t
                                        :arguments 
                                          ( ("" variable (:type ("std::index_sequence" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26764 26784])
                                            ("" variable (:type ("Ns" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26784 26787]))                                          
                                        :type ("iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [26744 26857])
                                    ("end_impl" function
                                       (:methodconst-flag t
                                        :arguments 
                                          ( ("" variable (:type ("std::index_sequence" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26902 26922])
                                            ("" variable (:type ("Ns" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26922 26925]))                                          
                                        :type ("iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [26884 26993])
                                    ("public" label nil (reparse-symbol classsubparts) [26995 27002])
                                    ("zippy" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Args" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27011 27018])
                                            ("" variable (:type ("ts_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27022 27026]))                                          
                                        :type ("zippy" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [27005 27062])
                                    ("begin" function
                                       (:methodconst-flag t
                                        :type ("iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [27066 27153])
                                    ("end" function
                                       (:methodconst-flag t
                                        :type ("iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [27156 27233]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [26307 27236]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [22208 27239])
                    ("zip" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [27423 27427])
                            ("" variable (:type ("t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27427 27429])
                            ("" variable
                               (:reference 1
                                :type ("U" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [27430 27434])
                            ("" variable (:type ("u" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27434 27436])
                            ("" variable
                               (:reference 1
                                :type ("Args" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [27492 27499])
                            ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27503 27508]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [27419 27649])
                    ("zip_first" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [27863 27867])
                            ("" variable (:type ("t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27867 27869])
                            ("" variable
                               (:reference 1
                                :type ("U" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [27870 27874])
                            ("" variable (:type ("u" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27874 27876])
                            ("" variable
                               (:reference 1
                                :type ("Args" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [27935 27942])
                            ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27946 27951]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [27853 28089])
                    ("detail" type
                       (:members 
                          ( ("next_or_end" function
                               (:template 
                                  ( ("Iter" type (:type "class") nil nil))                                  
                                :type ("Iter" type (:type "class") nil nil)
                                :arguments 
                                  ( ("I" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Iter" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28152 28166])
                                    ("End" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Iter" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28167 28183]))                                  )
                                (reparse-symbol namespacesubparts) [28110 28242])
                            ("ZipLongestItemType" type
                               (:template 
                                  ( ("Iter" type (:type "class") nil nil))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [28454 28662])
                            ("ZipLongestTupleType" type (:type "struct") (reparse-symbol namespacesubparts) [28693 28796])
                            ("zip_longest_range" type
                               (:members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [30882 30889])
                                    ("iterator::iterator_category" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [31011 31048])
                                    ("iterator::value_type" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [31070 31100])
                                    ("iterator::difference_type" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [31127 31162])
                                    ("iterator::pointer" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [31181 31208])
                                    ("iterator::reference" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [31229 31258])
                                    ("private" label nil (reparse-symbol classsubparts) [31260 31268])
                                    ("ts" variable (:type "int") (reparse-symbol classsubparts) [31291 31294])
                                    ("begin_impl" function
                                       (:methodconst-flag t
                                        :arguments 
                                          ( ("" variable (:type ("std::index_sequence" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31344 31364])
                                            ("" variable (:type ("Ns" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31364 31367]))                                          
                                        :type ("iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [31324 31514])
                                    ("end_impl" function
                                       (:methodconst-flag t
                                        :arguments 
                                          ( ("" variable (:type ("std::index_sequence" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31560 31580])
                                            ("" variable (:type ("Ns" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31580 31583]))                                          
                                        :type ("iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [31542 31728])
                                    ("public" label nil (reparse-symbol classsubparts) [31730 31737])
                                    ("zip_longest_range" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Args" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [31758 31765])
                                            ("" variable (:type ("ts_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31769 31773]))                                          
                                        :type ("zip_longest_range" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [31740 31809])
                                    ("begin" function
                                       (:methodconst-flag t
                                        :type ("iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [31813 31900])
                                    ("end" function
                                       (:methodconst-flag t
                                        :type ("iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [31903 31980]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [30856 31983]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [28091 31985])
                    ("zip_longest" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [32314 32318])
                            ("" variable (:type ("t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32318 32320])
                            ("" variable
                               (:reference 1
                                :type ("U" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [32321 32325])
                            ("" variable (:type ("u" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32325 32327])
                            ("" variable
                               (:reference 1
                                :type ("Args" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [32381 32388])
                            ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32392 32397]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [32302 32528])
                    ("detail" type
                       (:members 
                          ( ("concat_range" type
                               (:members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [36818 36825])
                                    ("private" label nil (reparse-symbol classsubparts) [36951 36959])
                                    ("Ranges" variable (:type "int") (reparse-symbol classsubparts) [36985 36992])
                                    ("begin_impl" function
                                       (:arguments 
                                          ( ("" variable (:type ("std::index_sequence" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37042 37062])
                                            ("" variable (:type ("Ns" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37062 37065]))                                          
                                        :type ("iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [37022 37121])
                                    ("begin_impl" function
                                       (:methodconst-flag t
                                        :arguments 
                                          ( ("" variable (:type ("std::index_sequence" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37170 37190])
                                            ("" variable (:type ("Ns" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37190 37193]))                                          
                                        :type ("iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [37150 37255])
                                    ("end_impl" function
                                       (:arguments 
                                          ( ("" variable (:type ("std::index_sequence" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37300 37320])
                                            ("" variable (:type ("Ns" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37320 37323]))                                          
                                        :type ("iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [37282 37464])
                                    ("end_impl" function
                                       (:methodconst-flag t
                                        :arguments 
                                          ( ("" variable (:type ("std::index_sequence" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37509 37529])
                                            ("" variable (:type ("Ns" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37529 37532]))                                          
                                        :type ("iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [37491 37679])
                                    ("public" label nil (reparse-symbol classsubparts) [37681 37688])
                                    ("concat_range" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("RangeTs" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [37704 37714])
                                            ("" variable (:type ("Ranges" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37718 37725]))                                          
                                        :type ("concat_range" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [37691 37777])
                                    ("begin" function (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37781 37865])
                                    ("begin" function
                                       (:methodconst-flag t
                                        :type ("iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [37868 37958])
                                    ("end" function (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37961 38041])
                                    ("end" function
                                       (:methodconst-flag t
                                        :type ("iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [38044 38130]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [36797 38133]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [36473 38136])
                    ("concat" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("RangeTs" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [38369 38379])
                            ("" variable (:type ("Ranges" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [38383 38390]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [38362 38587])
                    ("indexed_accessor_iterator" type
                       (:superclasses 
                          ( ("llvm::iterator_facade_base" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [39103 39110])
                            ("-" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("rhs" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("indexed_accessor_iterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [39133 39170]))                                  
                                :type ("ptrdiff_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [39113 39270])
                            ("==" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("rhs" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("indexed_accessor_iterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [39289 39326]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [39273 39389])
                            ("<" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("rhs" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("indexed_accessor_iterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [39407 39444]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [39392 39544])
                            ("+=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("offset" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39569 39586]))                                  
                                :type ("DerivedT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [39548 39662])
                            ("-=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("offset" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39686 39703]))                                  
                                :type ("DerivedT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [39665 39779])
                            ("getIndex" function
                               (:methodconst-flag t
                                :type ("ptrdiff_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [39832 39876])
                            ("getBase" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("BaseT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [39928 39973])
                            ("protected" label nil (reparse-symbol classsubparts) [39975 39985])
                            ("indexed_accessor_iterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("base" variable (:type ("BaseT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40014 40025])
                                    ("index" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40026 40042]))                                  
                                :type ("indexed_accessor_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [39988 40078])
                            ("base" variable (:type ("BaseT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [40081 40092])
                            ("index" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [40095 40111]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [38865 40114])
                    ("detail" type
                       (:members 
                          ( ("indexed_accessor_range_base" type
                               (:members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [40861 40868])
                                    ("RangeBaseT" variable
                                       (:default-value "indexed_accessor_range_base"
                                        :type "int")
                                        (reparse-symbol classsubparts) [40877 40918])
                                    ("iterator" type
                                       (:superclasses 
                                          ( ("indexed_accessor_iterator" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          
                                        :members 
                                          ( ("public" label nil (reparse-symbol classsubparts) [41111 41118])
                                            ("" function
                                               (:methodconst-flag t
                                                :operator-flag t
                                                :function-pointer t
                                                :type ("ReferenceT" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [41202 41318])
                                            ("private" label nil (reparse-symbol classsubparts) [41322 41330])
                                            ("iterator" function
                                               (:constructor-flag t
                                                :arguments 
                                                  ( ("owner" variable (:type ("BaseT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41344 41356])
                                                    ("curIndex" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41357 41376]))                                                  
                                                :type ("iterator" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [41335 41442])
                                            ("indexed_accessor_range_base" variable
                                               (:typemodifiers ("friend")
                                                :type "int")
                                                (reparse-symbol classsubparts) [41489 41605]))                                          
                                        :type "class")
                                        (reparse-symbol classsubparts) [40963 41610])
                                    ("indexed_accessor_range_base" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("begin" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41642 41657])
                                            ("end" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41658 41671]))                                          
                                        :type ("indexed_accessor_range_base" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [41614 41785])
                                    ("indexed_accessor_range_base" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("range" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("iterator_range" type
                                                     (:template-specifier 
                                                        ( ("iterator" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [41816 41854]))                                          
                                        :type ("indexed_accessor_range_base" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [41788 41921])
                                    ("indexed_accessor_range_base" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("base" variable (:type ("BaseT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41952 41963])
                                            ("count" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41964 41980]))                                          
                                        :type ("indexed_accessor_range_base" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [41924 42016])
                                    ("begin" function
                                       (:methodconst-flag t
                                        :type ("iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [42020 42072])
                                    ("end" function
                                       (:methodconst-flag t
                                        :type ("iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [42075 42129])
                                    ("[]" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("Index" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42154 42167]))                                          
                                        :type ("ReferenceT" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [42132 42322])
                                    ("front" function
                                       (:methodconst-flag t
                                        :type ("ReferenceT" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [42325 42430])
                                    ("back" function
                                       (:methodconst-flag t
                                        :type ("ReferenceT" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [42433 42546])
                                    ("==" function
                                       (:template 
                                          ( ("OtherT" type (:type "class") nil nil))                                          
                                        :type "bool"
                                        :arguments 
                                          ( ("other" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("OtherT" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [42632 42652]))                                          
                                        :operator-flag t
                                        :methodconst-flag t)
                                        (reparse-symbol classsubparts) [42589 42820])
                                    ("!=" function
                                       (:template 
                                          ( ("OtherT" type (:type "class") nil nil))                                          
                                        :type "bool"
                                        :arguments 
                                          ( ("other" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("OtherT" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [42866 42886]))                                          
                                        :operator-flag t
                                        :methodconst-flag t)
                                        (reparse-symbol classsubparts) [42823 42928])
                                    ("size" function
                                       (:methodconst-flag t
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [42969 43006])
                                    ("empty" function
                                       (:methodconst-flag t
                                        :type "bool")
                                        (reparse-symbol classsubparts) [43046 43088])
                                    ("slice" function
                                       (:methodconst-flag t
                                        :arguments 
                                          ( ("n" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43161 43170])
                                            ("m" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43171 43180]))                                          
                                        :type ("DerivedT" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [43146 43296])
                                    ("drop_front" function
                                       (:methodconst-flag t
                                        :arguments 
                                          ( ("n" variable
                                               (:default-value "1"
                                                :type ("size_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [43353 43365]))                                          
                                        :type ("DerivedT" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [43333 43475])
                                    ("drop_back" function
                                       (:methodconst-flag t
                                        :arguments 
                                          ( ("n" variable
                                               (:default-value "1"
                                                :type ("size_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [43529 43541]))                                          
                                        :type ("DerivedT" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [43510 43657])
                                    ("take_front" function
                                       (:methodconst-flag t
                                        :arguments 
                                          ( ("n" variable
                                               (:default-value "1"
                                                :type ("size_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [43714 43726]))                                          
                                        :type ("DerivedT" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [43694 43847])
                                    ("take_back" function
                                       (:methodconst-flag t
                                        :arguments 
                                          ( ("n" variable
                                               (:default-value "1"
                                                :type ("size_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [43902 43914]))                                          
                                        :type ("DerivedT" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [43883 44036])
                                    ("RangeT" function
                                       (:methodconst-flag t
                                        :type "int")
                                        (reparse-symbol classsubparts) [44269 44341])
                                    ("getBase" function
                                       (:methodconst-flag t
                                        :constant-flag t
                                        :type ("BaseT" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [44383 44428])
                                    ("private" label nil (reparse-symbol classsubparts) [44430 44438])
                                    ("offset_base" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("base" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("BaseT" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [44515 44533])
                                            ("n" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44534 44543]))                                          
                                        :type ("BaseT" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [44490 44608])
                                    ("protected" label nil (reparse-symbol classsubparts) [44610 44620])
                                    ("base" variable (:type ("BaseT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [44922 44933])
                                    ("count" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [44974 44990]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [40825 44993]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [40116 44995])
                    ("indexed_accessor_range" type
                       (:superclasses 
                          ( ("detail::indexed_accessor_range_base" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [45745 45752])
                            ("indexed_accessor_range" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("base" variable (:type ("BaseT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45778 45789])
                                    ("startIndex" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45790 45811])
                                    ("count" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45812 45828]))                                  
                                :type ("indexed_accessor_range" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [45755 46006])
                            ("detail::indexed_accessor_range_base::indexed_accessor_range_base" variable (:type "int") (reparse-symbol classsubparts) [46015 46157])
                            ("getBase" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("BaseT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [46206 46263])
                            ("getStartIndex" function
                               (:methodconst-flag t
                                :type ("ptrdiff_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [46319 46380])
                            ("offset_base" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("base" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::pair" type
                                             (:template-specifier 
                                                ( ("BaseT" type nil nil nil)
                                                  ("ptrdiff_t" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [46494 46534])
                                    ("index" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46535 46551]))                                  
                                :type ("std::pair" type
                                     (:template-specifier 
                                        ( ("BaseT" type nil nil nil)
                                          ("ptrdiff_t" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [46445 46730])
                            ("dereference_iterator" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("base" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::pair" type
                                             (:template-specifier 
                                                ( ("BaseT" type nil nil nil)
                                                  ("ptrdiff_t" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [46835 46875])
                                    ("index" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46899 46915]))                                  
                                :type ("ReferenceT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [46794 46988]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [45590 46991])
                    ("detail" type
                       (:members 
                          ( ("first_or_second_type" type
                               (:template 
                                  ( ("EltTy" type (:type "class") nil nil)
                                    ("FirstTy" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [47444 47451])
                                    ("std::conditional_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [47473 47611]))                                  )
                                (reparse-symbol namespacesubparts) [47371 47614]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [46993 47616])
                    ("make_first_range" function
                       (:template 
                          ( ("ContainerTy" type (:type "class") nil nil))                          
                        :type ("auto" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("ContainerTy" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [47768 47782])
                            ("" variable (:type ("c" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47782 47784]))                          )
                        (reparse-symbol namespacesubparts) [47714 48123])
                    ("make_second_range" function
                       (:template 
                          ( ("ContainerTy" type (:type "class") nil nil))                          
                        :type ("auto" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("ContainerTy" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [48253 48267])
                            ("" variable (:type ("c" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48267 48269]))                          )
                        (reparse-symbol namespacesubparts) [48198 48566])
                    ("less_first" type
                       (:members 
                          ( ("()" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "bool"
                                :arguments 
                                  ( ("lhs" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [48964 48977])
                                    ("rhs" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [48978 48991]))                                  
                                :operator-flag t
                                :methodconst-flag t)
                                (reparse-symbol classsubparts) [48926 49051]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [48904 49054])
                    ("less_second" type
                       (:members 
                          ( ("()" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "bool"
                                :arguments 
                                  ( ("lhs" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [49256 49269])
                                    ("rhs" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [49270 49283]))                                  
                                :operator-flag t
                                :methodconst-flag t)
                                (reparse-symbol classsubparts) [49218 49345]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [49195 49348])
                    ("on_first" type
                       (:template 
                          ( ("FuncTy" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("func" variable (:type ("FuncTy" type (:type "class") nil nil)) (reparse-symbol classsubparts) [49493 49505])
                            ("()" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("lhs" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [49559 49572])
                                    ("rhs" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [49573 49586]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [49548 49637]))                          )
                        (reparse-symbol namespacesubparts) [49447 49640])
                    ("rank" type
                       (:type "struct"
                        :template-specifier (("0")))
                        (reparse-symbol namespacesubparts) [49788 49818])
                    ("detail" type
                       (:members 
                          ( ("Visitor" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [50274 50289])
                            ("Visitor" type
                               (:template 
                                  ( ("HeadT" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("Visitor" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("HeadT" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [50786 50794])
                                            ("" variable (:type ("Head" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50794 50799]))                                          
                                        :type ("constexpr" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [50768 50859]))                                  
                                :superclasses 
                                  ( ("remove_cvref_t" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("HeadT" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [50683 50905]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [50229 50907])
                    ("makeVisitor" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("CallableTs" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [52176 52189])
                            ("" variable (:type ("Callables" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52192 52202]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [52164 52287])
                    ("shuffle" function
                       (:template 
                          ( ("Iterator" type (:type "class") nil nil)
                            ("RNG" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("first" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52637 52652])
                            ("last" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52653 52667])
                            ("" variable
                               (:reference 1
                                :type ("RNG" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [52668 52674])
                            ("" variable (:type ("g" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52674 52676]))                          )
                        (reparse-symbol namespacesubparts) [52587 53213])
                    ("array_pod_sort_comparator" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "int"
                        :arguments 
                          ( ("P1" variable
                               (:pointer 1
                                :constant-flag t
                                :type "void")
                                (reparse-symbol arg-sub-list) [53316 53331])
                            ("P2" variable
                               (:pointer 1
                                :constant-flag t
                                :type "void")
                                (reparse-symbol arg-sub-list) [53332 53347]))                          
                        :typemodifiers ("inline"))
                        (reparse-symbol namespacesubparts) [53258 53610])
                    ("array_pod_sort" function
                       (:template 
                          ( ("IteratorTy" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("Start" variable (:type ("IteratorTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55085 55102])
                            ("End" variable (:type ("IteratorTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55103 55118]))                          
                        :typemodifiers ("inline"))
                        (reparse-symbol namespacesubparts) [55031 55449])
                    ("array_pod_sort" function
                       (:template 
                          ( ("IteratorTy" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("Start" variable (:type ("IteratorTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55511 55528])
                            ("End" variable (:type ("IteratorTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55529 55544])
                            ("Compare" function
                               (:function-pointer t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :typemodifiers ("typename")
                                        :constant-flag t
                                        :type ("std::iterator_traits::value_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [55573 55635])
                                    ("" variable
                                       (:pointer 1
                                        :typemodifiers ("typename")
                                        :constant-flag t
                                        :type ("std::iterator_traits::value_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [55644 55706]))                                  
                                :type "int")
                                nil nil))                          
                        :typemodifiers ("inline"))
                        (reparse-symbol namespacesubparts) [55451 56071])
                    ("detail" type (:type "namespace") (reparse-symbol namespacesubparts) [56073 56368])
                    ("sort" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("Start" variable (:type ("IteratorTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56687 56704])
                            ("End" variable (:type ("IteratorTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56705 56720]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [56670 56830])
                    ("sort" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("Start" variable (:type ("IteratorTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57124 57141])
                            ("End" variable (:type ("IteratorTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57142 57157]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [57107 57191])
                    ("sort" function
                       (:template 
                          ( ("Container" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("Container" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [57240 57252])
                            ("" variable (:type ("C" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57252 57254]))                          
                        :typemodifiers ("inline"))
                        (reparse-symbol namespacesubparts) [57193 57298])
                    ("sort" function
                       (:template 
                          ( ("IteratorTy" type (:type "class") nil nil)
                            ("Compare" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("Start" variable (:type ("IteratorTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57366 57383])
                            ("End" variable (:type ("IteratorTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57384 57399])
                            ("Comp" variable (:type ("Compare" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57400 57413]))                          
                        :typemodifiers ("inline"))
                        (reparse-symbol namespacesubparts) [57300 57529])
                    ("sort" function
                       (:template 
                          ( ("Container" type (:type "class") nil nil)
                            ("Compare" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("Container" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [57596 57608])
                            ("" variable (:type ("C" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57608 57610])
                            ("Comp" variable (:type ("Compare" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57611 57624]))                          
                        :typemodifiers ("inline"))
                        (reparse-symbol namespacesubparts) [57531 57674])
                    ("size" function
                       (:template 
                          ( ("R" type (:type "class") nil nil))                          
                        :type ("auto" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [57839 57843])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57843 57849])
                            ("" variable (:type ("std::enable_if_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57860 57877])
                            ("" variable (:type ("std::is_base_of" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57892 57908])
                            ("" variable (:type ("std::random_access_iterator_tag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57908 57940])
                            ("" variable
                               (:typemodifiers ("typename")
                                :type ("std::iterator_traits" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [57971 58001])
                            ("" variable (:type ("decltype" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58001 58059])
                            ("" variable (:type ("iterator_category" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58062 58080])
                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58082 58088])
                            ("" variable (:type "void") (reparse-symbol arg-sub-list) [58103 58108])
                            ("" variable (:type ("nullptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58113 58121]))                          )
                        (reparse-symbol namespacesubparts) [57807 58177])
                    ("for_each" function
                       (:template 
                          ( ("R" type (:type "class") nil nil)
                            ("UnaryFunction" type (:type "class") nil nil))                          
                        :type ("UnaryFunction" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [58356 58360])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58360 58366])
                            ("F" variable (:type ("UnaryFunction" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58367 58383]))                          )
                        (reparse-symbol namespacesubparts) [58287 58448])
                    ("all_of" function
                       (:template 
                          ( ("R" type (:type "class") nil nil)
                            ("UnaryPredicate" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [58615 58619])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58619 58625])
                            ("P" variable (:type ("UnaryPredicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58626 58643]))                          )
                        (reparse-symbol namespacesubparts) [58556 58706])
                    ("any_of" function
                       (:template 
                          ( ("R" type (:type "class") nil nil)
                            ("UnaryPredicate" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [58873 58877])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58877 58883])
                            ("P" variable (:type ("UnaryPredicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58884 58901]))                          )
                        (reparse-symbol namespacesubparts) [58814 58964])
                    ("none_of" function
                       (:template 
                          ( ("R" type (:type "class") nil nil)
                            ("UnaryPredicate" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [59133 59137])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59137 59143])
                            ("P" variable (:type ("UnaryPredicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59144 59161]))                          )
                        (reparse-symbol namespacesubparts) [59073 59225])
                    ("find" function
                       (:template 
                          ( ("R" type (:type "class") nil nil)
                            ("T" type (:type "class") nil nil))                          
                        :type ("auto" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [59375 59379])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59379 59385])
                            ("Val" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [59386 59399]))                          )
                        (reparse-symbol namespacesubparts) [59331 59462])
                    ("find_if" function
                       (:template 
                          ( ("R" type (:type "class") nil nil)
                            ("UnaryPredicate" type (:type "class") nil nil))                          
                        :type ("auto" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [59631 59635])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59635 59641])
                            ("P" variable (:type ("UnaryPredicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59642 59659]))                          )
                        (reparse-symbol namespacesubparts) [59571 59723])
                    ("find_if_not" function
                       (:template 
                          ( ("R" type (:type "class") nil nil)
                            ("UnaryPredicate" type (:type "class") nil nil))                          
                        :type ("auto" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [59789 59793])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59793 59799])
                            ("P" variable (:type ("UnaryPredicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59800 59817]))                          )
                        (reparse-symbol namespacesubparts) [59725 59885])
                    ("remove_if" function
                       (:template 
                          ( ("R" type (:type "class") nil nil)
                            ("UnaryPredicate" type (:type "class") nil nil))                          
                        :type ("auto" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [60058 60062])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60062 60068])
                            ("P" variable (:type ("UnaryPredicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60069 60086]))                          )
                        (reparse-symbol namespacesubparts) [59996 60152])
                    ("copy_if" function
                       (:template 
                          ( ("R" type (:type "class") nil nil)
                            ("OutputIt" type (:type "class") nil nil)
                            ("UnaryPredicate" type (:type "class") nil nil))                          
                        :type ("OutputIt" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [60344 60348])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60348 60354])
                            ("Out" variable (:type ("OutputIt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60355 60368])
                            ("P" variable (:type ("UnaryPredicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60369 60386]))                          )
                        (reparse-symbol namespacesubparts) [60261 60455])
                    ("copy" function
                       (:template 
                          ( ("R" type (:type "class") nil nil)
                            ("OutputIt" type (:type "class") nil nil))                          
                        :type ("OutputIt" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [60512 60516])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60516 60522])
                            ("Out" variable (:type ("OutputIt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60523 60536]))                          )
                        (reparse-symbol namespacesubparts) [60457 60599])
                    ("move" function
                       (:template 
                          ( ("R" type (:type "class") nil nil)
                            ("OutputIt" type (:type "class") nil nil))                          
                        :type ("OutputIt" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [60760 60764])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60764 60770])
                            ("Out" variable (:type ("OutputIt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60771 60784]))                          )
                        (reparse-symbol namespacesubparts) [60705 60847])
                    ("is_contained" function
                       (:template 
                          ( ("R" type (:type "class") nil nil)
                            ("E" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [60990 60994])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60994 61000])
                            ("Element" variable
                               (:reference 1
                                :constant-flag t
                                :type ("E" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [61001 61018]))                          )
                        (reparse-symbol namespacesubparts) [60938 61103])
                    ("is_sorted" function
                       (:template 
                          ( ("R" type (:type "class") nil nil)
                            ("Compare" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [61290 61294])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61294 61300])
                            ("C" variable (:type ("Compare" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61301 61311]))                          )
                        (reparse-symbol namespacesubparts) [61235 61377])
                    ("is_sorted" function
                       (:template 
                          ( ("R" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [61536 61540])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61540 61546]))                          )
                        (reparse-symbol namespacesubparts) [61499 61609])
                    ("count" function
                       (:template 
                          ( ("R" type (:type "class") nil nil)
                            ("E" type (:type "class") nil nil))                          
                        :type ("auto" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [61786 61790])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61790 61796])
                            ("Element" variable
                               (:reference 1
                                :constant-flag t
                                :type ("E" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [61797 61814]))                          )
                        (reparse-symbol namespacesubparts) [61741 61882])
                    ("count_if" function
                       (:template 
                          ( ("R" type (:type "class") nil nil)
                            ("UnaryPredicate" type (:type "class") nil nil))                          
                        :type ("auto" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [62079 62083])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62083 62089])
                            ("P" variable (:type ("UnaryPredicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62090 62107]))                          )
                        (reparse-symbol namespacesubparts) [62018 62172])
                    ("transform" function
                       (:template 
                          ( ("R" type (:type "class") nil nil)
                            ("OutputIt" type (:type "class") nil nil)
                            ("UnaryFunction" type (:type "class") nil nil))                          
                        :type ("OutputIt" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [62368 62372])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62372 62378])
                            ("d_first" variable (:type ("OutputIt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62379 62396])
                            ("F" variable (:type ("UnaryFunction" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62397 62413]))                          )
                        (reparse-symbol namespacesubparts) [62284 62488])
                    ("partition" function
                       (:template 
                          ( ("R" type (:type "class") nil nil)
                            ("UnaryPredicate" type (:type "class") nil nil))                          
                        :type ("auto" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [62661 62665])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62665 62671])
                            ("P" variable (:type ("UnaryPredicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62672 62689]))                          )
                        (reparse-symbol namespacesubparts) [62599 62755])
                    ("lower_bound" function
                       (:template 
                          ( ("R" type (:type "class") nil nil)
                            ("T" type (:type "class") nil nil))                          
                        :type ("auto" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [62919 62923])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62923 62929])
                            ("" variable
                               (:reference 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [62930 62934])
                            ("" variable (:type ("Value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62934 62940]))                          )
                        (reparse-symbol namespacesubparts) [62868 63055])
                    ("lower_bound" function
                       (:template 
                          ( ("R" type (:type "class") nil nil)
                            ("T" type (:type "class") nil nil)
                            ("Compare" type (:type "class") nil nil))                          
                        :type ("auto" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [63126 63130])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63130 63136])
                            ("" variable
                               (:reference 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [63137 63141])
                            ("" variable (:type ("Value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63141 63147])
                            ("C" variable (:type ("Compare" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63148 63158]))                          )
                        (reparse-symbol namespacesubparts) [63057 63276])
                    ("upper_bound" function
                       (:template 
                          ( ("R" type (:type "class") nil nil)
                            ("T" type (:type "class") nil nil))                          
                        :type ("auto" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [63440 63444])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63444 63450])
                            ("" variable
                               (:reference 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [63451 63455])
                            ("" variable (:type ("Value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63455 63461]))                          )
                        (reparse-symbol namespacesubparts) [63389 63576])
                    ("upper_bound" function
                       (:template 
                          ( ("R" type (:type "class") nil nil)
                            ("T" type (:type "class") nil nil)
                            ("Compare" type (:type "class") nil nil))                          
                        :type ("auto" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [63647 63651])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63651 63657])
                            ("" variable
                               (:reference 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [63658 63662])
                            ("" variable (:type ("Value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63662 63668])
                            ("C" variable (:type ("Compare" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63669 63679]))                          )
                        (reparse-symbol namespacesubparts) [63578 63797])
                    ("stable_sort" function
                       (:template 
                          ( ("R" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [63838 63842])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63842 63848]))                          )
                        (reparse-symbol namespacesubparts) [63799 63906])
                    ("stable_sort" function
                       (:template 
                          ( ("R" type (:type "class") nil nil)
                            ("Compare" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [63965 63969])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63969 63975])
                            ("C" variable (:type ("Compare" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63976 63986]))                          )
                        (reparse-symbol namespacesubparts) [63908 64047])
                    ("partition_point" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [64338 64342])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64342 64348])
                            ("P" variable (:type ("Predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64349 64361]))                          
                        :type ("auto" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [64317 64433])
                    ("unique" function
                       (:template 
                          ( ("Range" type (:type "class") nil nil)
                            ("Predicate" type (:type "class") nil nil))                          
                        :type ("auto" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("Range" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [64492 64500])
                            ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64500 64502])
                            ("P" variable (:type ("Predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64503 64515]))                          )
                        (reparse-symbol namespacesubparts) [64435 64570])
                    ("equal" function
                       (:template 
                          ( ("L" type (:type "class") nil nil)
                            ("R" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("L" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [64725 64729])
                            ("" variable (:type ("LRange" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64729 64736])
                            ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [64737 64741])
                            ("" variable (:type ("RRange" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64741 64748]))                          )
                        (reparse-symbol namespacesubparts) [64680 64865])
                    ("is_splat" function
                       (:template 
                          ( ("R" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [64997 65001])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [65001 65007]))                          )
                        (reparse-symbol namespacesubparts) [64961 65172])
                    ("erase_if" function
                       (:template 
                          ( ("Container" type (:type "class") nil nil)
                            ("UnaryPredicate" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("C" variable
                               (:reference 1
                                :type ("Container" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [65505 65518])
                            ("P" variable (:type ("UnaryPredicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [65519 65536]))                          )
                        (reparse-symbol namespacesubparts) [65436 65577])
                    ("erase_value" function
                       (:template 
                          ( ("Container" type (:type "class") nil nil)
                            ("ValueType" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("C" variable
                               (:reference 1
                                :type ("Container" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [65760 65773])
                            ("V" variable (:type ("ValueType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [65774 65786]))                          )
                        (reparse-symbol namespacesubparts) [65693 65846])
                    ("append_range" function
                       (:template 
                          ( ("Container" type (:type "class") nil nil)
                            ("Range" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("C" variable
                               (:reference 1
                                :type ("Container" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [66021 66034])
                            ("" variable
                               (:reference 1
                                :type ("Range" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [66035 66043])
                            ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [66043 66045]))                          
                        :typemodifiers ("inline"))
                        (reparse-symbol namespacesubparts) [65950 66090])
                    ("replace" function
                       (:template 
                          ( ("Container" type (:type "class") nil nil)
                            ("RandomAccessIterator" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("Cont" variable
                               (:reference 1
                                :type ("Container" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [66313 66329])
                            ("ContIt" variable
                               (:typemodifiers ("typename")
                                :type ("Container::iterator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [66330 66366])
                            ("ContEnd" variable
                               (:typemodifiers ("typename")
                                :type ("Container::iterator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [66380 66417])
                            ("ValIt" variable (:type ("RandomAccessIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [66418 66445])
                            ("ValEnd" variable (:type ("RandomAccessIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [66459 66487]))                          )
                        (reparse-symbol namespacesubparts) [66240 66712])
                    ("replace" function
                       (:arguments 
                          ( ("Cont" variable
                               (:reference 1
                                :type ("Container" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [66957 66973])
                            ("ContIt" variable
                               (:typemodifiers ("typename")
                                :type ("Container::iterator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [66974 67010])
                            ("ContEnd" variable
                               (:typemodifiers ("typename")
                                :type ("Container::iterator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [67024 67061])
                            ("R" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [67062 67070]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [66944 67128])
                    ("interleave" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("begin" variable (:type ("ForwardIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [67819 67841])
                            ("end" variable (:type ("ForwardIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [67842 67862])
                            ("each_fn" variable (:type ("UnaryFunctor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [67886 67907])
                            ("between_fn" variable (:type ("NullaryFunctor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [67908 67934]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [67796 68077])
                    ("interleave" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("c" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Container" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [68377 68396])
                            ("each_fn" variable (:type ("UnaryFunctor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68397 68418])
                            ("between_fn" variable (:type ("NullaryFunctor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68442 68468]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [68354 68527])
                    ("interleave" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("c" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Container" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [68747 68766])
                            ("os" variable
                               (:reference 1
                                :type ("StreamT" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [68767 68779])
                            ("each_fn" variable (:type ("UnaryFunctor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68780 68801])
                            ("separator" variable
                               (:reference 1
                                :constant-flag t
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [68825 68852]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [68724 68925])
                    ("interleave" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("c" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Container" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [69053 69072])
                            ("os" variable
                               (:reference 1
                                :type ("StreamT" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [69073 69085])
                            ("separator" variable
                               (:reference 1
                                :constant-flag t
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [69109 69136]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [69030 69209])
                    ("interleaveComma" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("c" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Container" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [69366 69385])
                            ("os" variable
                               (:reference 1
                                :type ("StreamT" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [69386 69398])
                            ("each_fn" variable (:type ("UnaryFunctor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69427 69448]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [69338 69488])
                    ("interleaveComma" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("c" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Container" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [69621 69640])
                            ("os" variable
                               (:reference 1
                                :type ("StreamT" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [69641 69653]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [69593 69713])
                    ("FreeDeleter" type
                       (:members 
                          ( ("()" function
                               (:operator-flag t
                                :arguments 
                                  ( ("v" variable
                                       (:pointer 1
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [69952 69960]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [69936 69981]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [69913 69984])
                    ("pair_hash" type
                       (:template 
                          ( ("First" type (:type "class") nil nil)
                            ("Second" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("()" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("P" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::pair" type
                                             (:template-specifier 
                                                ( ("First" type nil nil nil)
                                                  ("Second" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [70067 70101]))                                  
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [70049 70190]))                          )
                        (reparse-symbol namespacesubparts) [69986 70193])
                    ("deref" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("func" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [70327 70334])
                            ("()" function
                               (:template 
                                  ( ("A" type (:type "class") nil nil)
                                    ("B" type (:type "class") nil nil))                                  
                                :type ("auto" type (:type "class") nil nil)
                                :arguments 
                                  ( ("lhs" variable
                                       (:reference 1
                                        :type ("A" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [70549 70556])
                                    ("rhs" variable
                                       (:reference 1
                                        :type ("B" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [70557 70564]))                                  
                                :operator-flag t
                                :methodconst-flag t)
                                (reparse-symbol classsubparts) [70499 70639]))                          )
                        (reparse-symbol namespacesubparts) [70288 70642])
                    ("detail" type
                       (:members 
                          ( ("enumerator_iter" type
                               (:template 
                                  ( ("R" type (:type "class") nil nil))                                  
                                :type "class"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [70664 70708])
                            ("result_pair" type
                               (:template 
                                  ( ("R" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("std::iterator_traits::reference" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [70785 70842])
                                    ("enumerator_iter" friend nil (reparse-symbol classsubparts) [70846 70874])
                                    ("result_pair" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("Index" variable (:type ("std::size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70921 70939])
                                            ("Iter" variable (:type ("IterOfRange" type
                                                 (:template-specifier 
                                                    ( ("R" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [70940 70960]))                                          
                                        :type ("result_pair" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [70909 70996])
                                    ("result_pair" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("Other" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("result_pair" type
                                                     (:template-specifier 
                                                        ( ("R" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [71012 71040]))                                          
                                        :type ("result_pair" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [71000 71088])
                                    ("=" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("Other" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("result_pair" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [71114 71139]))                                          
                                        :type ("result_pair" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [71091 71211])
                                    ("index" function
                                       (:methodconst-flag t
                                        :type ("std::size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [71215 71258])
                                    ("value" function
                                       (:methodconst-flag t
                                        :type ("value_reference" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [71261 71308])
                                    ("private" label nil (reparse-symbol classsubparts) [71310 71318])
                                    ("Index" variable
                                       (:default-value "std::numeric_limits<std::size_t>::max()"
                                        :type ("std::size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [71321 71381])
                                    ("Iter" variable (:type ("IterOfRange" type
                                         (:template-specifier 
                                            ( ("R" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [71384 71404]))                                  )
                                (reparse-symbol namespacesubparts) [70710 71407])
                            ("enumerator_iter" type
                               (:template 
                                  ( ("R" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("result_pair" variable (:type "int") (reparse-symbol classsubparts) [71614 71629])
                                    ("public" label nil (reparse-symbol classsubparts) [71631 71638])
                                    ("enumerator_iter" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("EndIter" variable (:type ("IterOfRange" type
                                                 (:template-specifier 
                                                    ( ("R" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [71666 71689]))                                          
                                        :type ("enumerator_iter" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [71650 71752])
                                    ("enumerator_iter" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("Index" variable (:type ("std::size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71772 71790])
                                            ("Iter" variable (:type ("IterOfRange" type
                                                 (:template-specifier 
                                                    ( ("R" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [71791 71811]))                                          
                                        :type ("enumerator_iter" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [71756 71842])
                                    ("" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :function-pointer t
                                        :constant-flag t
                                        :type ("result_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [71846 71901])
                                    ("++" function
                                       (:operator-flag t
                                        :type ("enumerator_iter" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [71905 72061])
                                    ("==" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("RHS" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("enumerator_iter" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [72081 72108]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [72065 72385])
                                    ("enumerator_iter" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("Other" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("enumerator_iter" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [72405 72434]))                                          
                                        :type ("enumerator_iter" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [72389 72460])
                                    ("=" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("Other" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("enumerator_iter" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [72490 72519]))                                          
                                        :type ("enumerator_iter" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [72463 72570])
                                    ("private" label nil (reparse-symbol classsubparts) [72572 72580])
                                    ("Result" variable (:type ("result_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [72583 72602]))                                  
                                :superclasses 
                                  ( ("iterator_facade_base" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [71409 72605])
                            ("enumerator" type
                               (:template 
                                  ( ("R" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [72648 72655])
                                    ("enumerator" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("R" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [72678 72682])
                                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72682 72688]))                                          
                                        :type ("enumerator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [72667 72726])
                                    ("begin" function (:type ("enumerator_iter" type
                                         (:template-specifier 
                                            ( ("R" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [72730 72818])
                                    ("begin" function
                                       (:methodconst-flag t
                                        :type ("enumerator_iter" type
                                             (:template-specifier 
                                                ( ("R" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [72821 72915])
                                    ("end" function (:type ("enumerator_iter" type
                                         (:template-specifier 
                                            ( ("R" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [72919 73000])
                                    ("end" function
                                       (:methodconst-flag t
                                        :type ("enumerator_iter" type
                                             (:template-specifier 
                                                ( ("R" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [73003 73090])
                                    ("private" label nil (reparse-symbol classsubparts) [73092 73100])
                                    ("TheRange" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol classsubparts) [73103 73114]))                                  )
                                (reparse-symbol namespacesubparts) [72607 73117]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [70644 73120])
                    ("enumerate" function
                       (:template 
                          ( ("R" type (:type "class") nil nil))                          
                        :type ("detail::enumerator" type
                             (:template-specifier 
                                ( ("R" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [73647 73651])
                            ("" variable (:type ("TheRange" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73651 73660]))                          )
                        (reparse-symbol namespacesubparts) [73593 73723])
                    ("detail" type
                       (:members 
                          ( ("apply_tuple_impl" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("F" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [73833 73837])
                                    ("" variable (:type ("f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73837 73839])
                                    ("" variable
                                       (:reference 1
                                        :type ("Tuple" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [73840 73848])
                                    ("" variable (:type ("t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73848 73850])
                                    ("" variable (:type ("std::index_sequence" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73851 73871])
                                    ("" variable (:type ("I" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73871 73873]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [73816 73950]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [73725 73953])
                    ("apply_tuple" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("F" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [74205 74209])
                            ("" variable (:type ("f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74209 74211])
                            ("" variable
                               (:reference 1
                                :type ("Tuple" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [74212 74220])
                            ("" variable (:type ("t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74220 74222]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [74193 74460])
                    ("detail" type
                       (:members 
                          ( ("all_of_zip_predicate_first" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Predicate" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [74562 74574])
                                    ("" variable (:type ("P" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74574 74576])
                                    ("" variable
                                       (:reference 1
                                        :type ("Args" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [74577 74584])
                                    ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74587 74592]))                                  
                                :type "bool")
                                (reparse-symbol namespacesubparts) [74530 74822])
                            ("all_of_zip_predicate_last" function
                               (:arguments 
                                  ( ("" variable (:type ("std::tuple" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75028 75039])
                                    ("" variable (:type ("ArgsThenPredicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75039 75057])
                                    ("" variable (:type ("argsThenPredicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75061 75079])
                                    ("" variable (:type ("std::index_sequence" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75084 75104])
                                    ("" variable (:type ("InputIndexes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75104 75117]))                                  
                                :type "bool")
                                (reparse-symbol namespacesubparts) [74992 75373]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [74462 75376])
                    ("all_of_zip" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("ArgsAndPredicate" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [75687 75706])
                            ("" variable (:type ("argsAndPredicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75709 75726]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [75671 75892])
                    ("hasNItems" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("IterTy" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [76222 76231])
                            ("" variable (:type ("Begin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76231 76237])
                            ("" variable
                               (:reference 1
                                :type ("IterTy" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [76238 76247])
                            ("" variable (:type ("End" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76247 76251])
                            ("N" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [76252 76263])
                            ("" variable
                               (:reference 1
                                :type ("Pred" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [76268 76275])
                            ("" variable (:type ("ShouldBeCounted" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76275 76363])
                            ("" variable (:type ("std::enable_if_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76369 76386])
                            ("" variable (:type ("std::is_base_of" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76396 76412])
                            ("" variable (:type ("std::random_access_iterator_tag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76412 76444])
                            ("" variable
                               (:typemodifiers ("typename")
                                :type ("std::iterator_traits" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [76470 76500])
                            ("" variable (:type ("std::remove_reference_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76500 76524])
                            ("" variable (:type ("decltype" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76554 76569])
                            ("" variable (:type ("iterator_category" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76573 76591])
                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76593 76599])
                            ("" variable (:type "void") (reparse-symbol arg-sub-list) [76608 76613])
                            ("" variable (:type ("nullptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76618 76626]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [76202 76858])
                    ("hasNItemsOrMore" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("IterTy" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [77194 77203])
                            ("" variable (:type ("Begin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77203 77209])
                            ("" variable
                               (:reference 1
                                :type ("IterTy" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [77210 77219])
                            ("" variable (:type ("End" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77219 77223])
                            ("N" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [77224 77235])
                            ("" variable
                               (:reference 1
                                :type ("Pred" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [77240 77247])
                            ("" variable (:type ("ShouldBeCounted" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77247 77335])
                            ("" variable (:type ("std::enable_if_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77341 77358])
                            ("" variable (:type ("std::is_base_of" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77368 77384])
                            ("" variable (:type ("std::random_access_iterator_tag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77384 77416])
                            ("" variable
                               (:typemodifiers ("typename")
                                :type ("std::iterator_traits" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [77442 77472])
                            ("" variable (:type ("std::remove_reference_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77472 77496])
                            ("" variable (:type ("decltype" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77526 77541])
                            ("" variable (:type ("iterator_category" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77545 77563])
                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77565 77571])
                            ("" variable (:type "void") (reparse-symbol arg-sub-list) [77580 77585])
                            ("" variable (:type ("nullptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77590 77598]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [77168 77732])
                    ("hasNItemsOrLess" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("IterTy" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [77998 78007])
                            ("" variable (:type ("Begin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [78007 78013])
                            ("" variable
                               (:reference 1
                                :type ("IterTy" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [78014 78023])
                            ("" variable (:type ("End" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [78023 78027])
                            ("N" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [78028 78039])
                            ("" variable
                               (:reference 1
                                :type ("Pred" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [78044 78051])
                            ("" variable (:type ("ShouldBeCounted" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [78051 78141]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [77972 78262])
                    ("hasNItems" function
                       (:template 
                          ( ("ContainerTy" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("ContainerTy" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [78371 78385])
                            ("" variable (:type ("C" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [78385 78387])
                            ("N" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [78388 78399]))                          )
                        (reparse-symbol namespacesubparts) [78324 78454])
                    ("hasNItemsOrMore" function
                       (:template 
                          ( ("ContainerTy" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("ContainerTy" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [78569 78583])
                            ("" variable (:type ("C" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [78583 78585])
                            ("N" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [78586 78597]))                          )
                        (reparse-symbol namespacesubparts) [78516 78658])
                    ("hasNItemsOrLess" function
                       (:template 
                          ( ("ContainerTy" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("ContainerTy" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [78773 78787])
                            ("" variable (:type ("C" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [78787 78789])
                            ("N" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [78790 78801]))                          )
                        (reparse-symbol namespacesubparts) [78720 78862])
                    ("to_address" function
                       (:template 
                          ( ("Ptr" type (:type "class") nil nil))                          
                        :type ("auto" type (:type "class") nil nil)
                        :arguments 
                          ( ("P" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Ptr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [79196 79209]))                          )
                        (reparse-symbol namespacesubparts) [79159 79236])
                    ("to_address" function
                       (:pointer 1
                        :arguments 
                          ( ("P" variable
                               (:pointer 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [79280 79285]))                          
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [79266 79299]))                  
                :type "namespace")
                nil [1345 79302]))          
      :file "STLExtras.h"
      :pointmax 79357
      :fsize 79356
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((symbol 79256 . 79265) (punctuation 79254 . 79255) (symbol 79253 . 79254) (CLASS 79247 . 79252) (punctuation 79246 . 79247) (TEMPLATE 79237 . 79245) (punctuation 78786 . 78787) (punctuation 78582 . 78583) (punctuation 78384 . 78385) (punctuation 78050 . 78051) (punctuation 78022 . 78023) (punctuation 78006 . 78007) (punctuation 77970 . 77971) (semantic-list 77927 . 77970) (semantic-list 77924 . 77927) (punctuation 77968 . 77969) (semantic-list 77942 . 77967) (BOOL 77919 . 77923) (punctuation 77968 . 77969) (semantic-list 77942 . 77967) (punctuation 77917 . 77918) (symbol 77912 . 77916) (TYPENAME 77903 . 77911) (punctuation 77891 . 77892) (symbol 77885 . 77891) (TYPENAME 77876 . 77884) (punctuation 77875 . 77876) (TEMPLATE 77866 . 77874) (punctuation 77588 . 77589) (punctuation 77586 . 77587) (punctuation 77584 . 77585) (punctuation 77564 . 77565) (punctuation 77563 . 77564) (punctuation 77562 . 77563) (punctuation 77544 . 77545) (punctuation 77543 . 77544) (punctuation 77542 . 77543) (punctuation 77541 . 77542) (semantic-list 77534 . 77541) (punctuation 77495 . 77496) (punctuation 77471 . 77472) (punctuation 77383 . 77384) (punctuation 77367 . 77368) (punctuation 77357 . 77358) (punctuation 77246 . 77247) (punctuation 77218 . 77219) (punctuation 77202 . 77203) (punctuation 77166 . 77167) (semantic-list 77123 . 77166) (semantic-list 77120 . 77123) (punctuation 77164 . 77165) (semantic-list 77138 . 77163) (BOOL 77115 . 77119) (punctuation 77164 . 77165) (semantic-list 77138 . 77163) (punctuation 77113 . 77114) (symbol 77108 . 77112) (TYPENAME 77099 . 77107) (punctuation 77087 . 77088) (symbol 77081 . 77087) (TYPENAME 77072 . 77080) (punctuation 77071 . 77072) (TEMPLATE 77062 . 77070) (punctuation 76616 . 76617) (punctuation 76614 . 76615) (punctuation 76612 . 76613) (punctuation 76592 . 76593) (punctuation 76591 . 76592) (punctuation 76590 . 76591) (punctuation 76572 . 76573) (punctuation 76571 . 76572) (punctuation 76570 . 76571) (punctuation 76569 . 76570) (semantic-list 76562 . 76569) (punctuation 76523 . 76524) (punctuation 76499 . 76500) (punctuation 76411 . 76412) (punctuation 76395 . 76396) (punctuation 76385 . 76386) (punctuation 76274 . 76275) (punctuation 76246 . 76247) (punctuation 76230 . 76231) (punctuation 76200 . 76201) (semantic-list 76157 . 76200) (semantic-list 76154 . 76157) (punctuation 76198 . 76199) (semantic-list 76172 . 76197) (BOOL 76149 . 76153) (punctuation 76198 . 76199) (semantic-list 76172 . 76197) (punctuation 76147 . 76148) (symbol 76142 . 76146) (TYPENAME 76133 . 76141) (punctuation 76121 . 76122) (symbol 76115 . 76121) (TYPENAME 76106 . 76114) (punctuation 76105 . 76106) (TEMPLATE 76096 . 76104) (punctuation 75708 . 75709) (punctuation 75707 . 75708) (punctuation 75706 . 75707) (punctuation 75705 . 75706) (punctuation 75669 . 75670) (symbol 75653 . 75669) (punctuation 75651 . 75652) (punctuation 75650 . 75651) (punctuation 75649 . 75650) (TYPENAME 75641 . 75649) (punctuation 75640 . 75641) (TEMPLATE 75631 . 75639) (punctuation 75119 . 75120) (punctuation 75118 . 75119) (punctuation 75117 . 75118) (punctuation 75116 . 75117) (punctuation 75103 . 75104) (punctuation 75059 . 75060) (punctuation 75058 . 75059) (punctuation 75057 . 75058) (punctuation 75056 . 75057) (punctuation 75038 . 75039) (punctuation 74990 . 74991) (symbol 74978 . 74990) (punctuation 74976 . 74977) (punctuation 74975 . 74976) (punctuation 74974 . 74975) (symbol 74968 . 74974) (punctuation 74966 . 74967) (symbol 74949 . 74966) (punctuation 74947 . 74948) (punctuation 74946 . 74947) (punctuation 74945 . 74946) (TYPENAME 74937 . 74945) (punctuation 74936 . 74937) (TEMPLATE 74927 . 74935) (punctuation 74586 . 74587) (punctuation 74585 . 74586) (punctuation 74584 . 74585) (punctuation 74583 . 74584) (punctuation 74573 . 74574) (punctuation 74528 . 74529) (symbol 74524 . 74528) (punctuation 74522 . 74523) (punctuation 74521 . 74522) (punctuation 74520 . 74521) (TYPENAME 74512 . 74520) (punctuation 74510 . 74511) (symbol 74501 . 74510) (TYPENAME 74492 . 74500) (punctuation 74491 . 74492) (TEMPLATE 74482 . 74490) (punctuation 74219 . 74220) (punctuation 74208 . 74209) (semantic-list 74186 . 74192) (symbol 74178 . 74186) (punctuation 74176 . 74177) (symbol 74171 . 74176) (TYPENAME 74162 . 74170) (punctuation 74160 . 74161) (symbol 74159 . 74160) (TYPENAME 74150 . 74158) (punctuation 74149 . 74150) (TEMPLATE 74140 . 74148) (punctuation 73875 . 73876) (punctuation 73874 . 73875) (punctuation 73873 . 73874) (punctuation 73872 . 73873) (punctuation 73870 . 73871) (punctuation 73847 . 73848) (punctuation 73836 . 73837) (semantic-list 73809 . 73815) (symbol 73801 . 73809) (punctuation 73799 . 73800) (symbol 73798 . 73799) (punctuation 73796 . 73797) (punctuation 73795 . 73796) (punctuation 73794 . 73795) (symbol 73788 . 73794) (punctuation 73787 . 73788) (punctuation 73786 . 73787) (symbol 73783 . 73786) (punctuation 73781 . 73782) (symbol 73776 . 73781) (TYPENAME 73767 . 73775) (punctuation 73765 . 73766) (symbol 73764 . 73765) (TYPENAME 73755 . 73763) (punctuation 73754 . 73755) (TEMPLATE 73745 . 73753) (punctuation 73650 . 73651) (punctuation 72681 . 72682) (EXPLICIT 72658 . 72666) (EXPLICIT 71641 . 71649) (punctuation 71612 . 71613) (symbol 71600 . 71611) (USING 71594 . 71599) (punctuation 70905 . 70906) (DEFAULT 70898 . 70905) (punctuation 70896 . 70897) (semantic-list 70893 . 70895) (symbol 70882 . 70893) (punctuation 70877 . 70878) (punctuation 70876 . 70877) (symbol 70875 . 70876) (punctuation 70874 . 70875) (punctuation 70777 . 70778) (symbol 70761 . 70776) (USING 70755 . 70760) (punctuation 69591 . 69592) (punctuation 69590 . 69591) (symbol 69581 . 69590) (punctuation 69580 . 69581) (symbol 69568 . 69580) (punctuation 69567 . 69568) (punctuation 69566 . 69567) (symbol 69560 . 69566) (punctuation 69558 . 69559) (symbol 69556 . 69557) (TYPENAME 69547 . 69555) (punctuation 69535 . 69536) (symbol 69528 . 69535) (TYPENAME 69519 . 69527) (punctuation 69517 . 69518) (symbol 69508 . 69517) (TYPENAME 69499 . 69507) (punctuation 69498 . 69499) (TEMPLATE 69489 . 69497) (punctuation 69336 . 69337) (punctuation 69335 . 69336) (symbol 69326 . 69335) (punctuation 69325 . 69326) (symbol 69313 . 69325) (punctuation 69312 . 69313) (punctuation 69311 . 69312) (symbol 69305 . 69311) (punctuation 69303 . 69304) (symbol 69301 . 69302) (TYPENAME 69292 . 69300) (punctuation 69280 . 69281) (symbol 69273 . 69280) (TYPENAME 69264 . 69272) (punctuation 69262 . 69263) (symbol 69250 . 69262) (TYPENAME 69241 . 69249) (punctuation 69239 . 69240) (symbol 69230 . 69239) (TYPENAME 69221 . 69229) (punctuation 69220 . 69221) (TEMPLATE 69211 . 69219) (punctuation 69028 . 69029) (punctuation 69027 . 69028) (symbol 69018 . 69027) (punctuation 69017 . 69018) (symbol 69005 . 69017) (punctuation 69004 . 69005) (punctuation 69003 . 69004) (symbol 68997 . 69003) (punctuation 68995 . 68996) (symbol 68993 . 68994) (TYPENAME 68984 . 68992) (punctuation 68972 . 68973) (symbol 68965 . 68972) (TYPENAME 68956 . 68964) (punctuation 68954 . 68955) (symbol 68945 . 68954) (TYPENAME 68936 . 68944) (punctuation 68935 . 68936) (TEMPLATE 68926 . 68934) (punctuation 68722 . 68723) (punctuation 68721 . 68722) (symbol 68712 . 68721) (punctuation 68711 . 68712) (symbol 68699 . 68711) (punctuation 68698 . 68699) (punctuation 68697 . 68698) (symbol 68691 . 68697) (punctuation 68689 . 68690) (symbol 68687 . 68688) (TYPENAME 68678 . 68686) (punctuation 68666 . 68667) (symbol 68659 . 68666) (TYPENAME 68650 . 68658) (punctuation 68648 . 68649) (symbol 68636 . 68648) (TYPENAME 68627 . 68635) (punctuation 68625 . 68626) (symbol 68616 . 68625) (TYPENAME 68607 . 68615) (punctuation 68606 . 68607) (TEMPLATE 68597 . 68605) (punctuation 68352 . 68353) (symbol 68348 . 68352) (punctuation 68347 . 68348) (punctuation 68346 . 68347) (punctuation 68345 . 68346) (symbol 68340 . 68345) (punctuation 68339 . 68340) (punctuation 68338 . 68339) (punctuation 68337 . 68338) (symbol 68323 . 68337) (punctuation 68321 . 68322) (symbol 68312 . 68321) (punctuation 68311 . 68312) (symbol 68295 . 68311) (punctuation 68294 . 68295) (punctuation 68293 . 68294) (symbol 68290 . 68293) (punctuation 68289 . 68290) (punctuation 68273 . 68274) (punctuation 68272 . 68273) (symbol 68266 . 68271) (punctuation 68265 . 68266) (punctuation 68264 . 68265) (punctuation 68263 . 68264) (symbol 68251 . 68263) (punctuation 68249 . 68250) (symbol 68240 . 68249) (punctuation 68239 . 68240) (symbol 68223 . 68239) (punctuation 68222 . 68223) (punctuation 68221 . 68222) (symbol 68218 . 68221) (punctuation 68217 . 68218) (punctuation 68201 . 68202) (symbol 68192 . 68201) (punctuation 68191 . 68192) (punctuation 68190 . 68191) (symbol 68187 . 68190) (TYPENAME 68178 . 68186) (punctuation 68176 . 68177) (TYPENAME 68167 . 68175) (punctuation 68155 . 68156) (symbol 68141 . 68155) (TYPENAME 68132 . 68140) (punctuation 68130 . 68131) (symbol 68118 . 68130) (TYPENAME 68109 . 68117) (punctuation 68107 . 68108) (symbol 68098 . 68107) (TYPENAME 68089 . 68097) (punctuation 68088 . 68089) (TEMPLATE 68079 . 68087) (punctuation 67794 . 67795) (symbol 67790 . 67794) (punctuation 67789 . 67790) (punctuation 67788 . 67789) (punctuation 67787 . 67788) (symbol 67782 . 67787) (punctuation 67781 . 67782) (punctuation 67780 . 67781) (punctuation 67779 . 67780) (symbol 67765 . 67779) (punctuation 67763 . 67764) (symbol 67754 . 67763) (punctuation 67753 . 67754) (symbol 67737 . 67753) (punctuation 67736 . 67737) (punctuation 67735 . 67736) (symbol 67732 . 67735) (punctuation 67731 . 67732) (punctuation 67715 . 67716) (punctuation 67714 . 67715) (symbol 67708 . 67713) (punctuation 67707 . 67708) (punctuation 67706 . 67707) (punctuation 67705 . 67706) (symbol 67693 . 67705) (punctuation 67691 . 67692) (symbol 67682 . 67691) (punctuation 67681 . 67682) (symbol 67665 . 67681) (punctuation 67664 . 67665) (punctuation 67663 . 67664) (symbol 67660 . 67663) (punctuation 67659 . 67660) (punctuation 67643 . 67644) (symbol 67634 . 67643) (punctuation 67633 . 67634) (punctuation 67632 . 67633) (symbol 67629 . 67632) (TYPENAME 67620 . 67628) (punctuation 67618 . 67619) (TYPENAME 67609 . 67617) (punctuation 67597 . 67598) (symbol 67583 . 67597) (TYPENAME 67574 . 67582) (punctuation 67562 . 67563) (symbol 67550 . 67562) (TYPENAME 67541 . 67549) (punctuation 67539 . 67540) (symbol 67524 . 67539) (TYPENAME 67515 . 67523) (punctuation 67514 . 67515) (TEMPLATE 67505 . 67513) (punctuation 66942 . 66943) (punctuation 66941 . 66942) (symbol 66931 . 66941) (punctuation 66930 . 66931) (punctuation 66929 . 66930) (symbol 66920 . 66929) (TYPENAME 66911 . 66919) (punctuation 66876 . 66877) (symbol 66860 . 66876) (punctuation 66859 . 66860) (punctuation 66858 . 66859) (symbol 66855 . 66858) (punctuation 66853 . 66854) (symbol 66847 . 66852) (TYPENAME 66838 . 66846) (punctuation 66836 . 66837) (symbol 66827 . 66836) (TYPENAME 66818 . 66826) (punctuation 66817 . 66818) (TEMPLATE 66809 . 66817) (punctuation 66042 . 66043) (punctuation 65000 . 65001) (punctuation 64740 . 64741) (punctuation 64728 . 64729) (punctuation 64499 . 64500) (punctuation 64341 . 64342) (punctuation 64315 . 64316) (semantic-list 64284 . 64315) (symbol 64276 . 64284) (semantic-list 64295 . 64314) (punctuation 64285 . 64286) (punctuation 64274 . 64275) (symbol 64270 . 64273) (TYPENAME 64261 . 64269) (punctuation 64249 . 64250) (symbol 64240 . 64249) (TYPENAME 64231 . 64239) (punctuation 64229 . 64230) (symbol 64228 . 64229) (TYPENAME 64219 . 64227) (punctuation 64218 . 64219) (TEMPLATE 64209 . 64217) (punctuation 63968 . 63969) (punctuation 63841 . 63842) (punctuation 63661 . 63662) (punctuation 63650 . 63651) (punctuation 63454 . 63455) (punctuation 63443 . 63444) (punctuation 63140 . 63141) (punctuation 63129 . 63130) (punctuation 62933 . 62934) (punctuation 62922 . 62923) (punctuation 62664 . 62665) (punctuation 62371 . 62372) (punctuation 62082 . 62083) (punctuation 61789 . 61790) (punctuation 61539 . 61540) (punctuation 61293 . 61294) (punctuation 60993 . 60994) (punctuation 60763 . 60764) (punctuation 60515 . 60516) (punctuation 60347 . 60348) (punctuation 60061 . 60062) (punctuation 59792 . 59793) (punctuation 59634 . 59635) (punctuation 59378 . 59379) (punctuation 59136 . 59137) (punctuation 58876 . 58877) (punctuation 58618 . 58619) (punctuation 58359 . 58360) (punctuation 58111 . 58112) (punctuation 58109 . 58110) (punctuation 58107 . 58108) (punctuation 58081 . 58082) (punctuation 58080 . 58081) (punctuation 58079 . 58080) (punctuation 58061 . 58062) (punctuation 58060 . 58061) (punctuation 58059 . 58060) (semantic-list 58009 . 58059) (punctuation 58000 . 58001) (punctuation 57907 . 57908) (punctuation 57876 . 57877) (punctuation 57842 . 57843) (punctuation 57607 . 57608) (punctuation 57251 . 57252) (punctuation 57105 . 57106) (number 57104 . 57105) (punctuation 57102 . 57103) (punctuation 57100 . 57101) (INT 57097 . 57100) (punctuation 57068 . 57069) (symbol 57063 . 57068) (punctuation 57062 . 57063) (punctuation 57061 . 57062) (punctuation 57060 . 57061) (symbol 57050 . 57060) (punctuation 57049 . 57050) (symbol 57026 . 57049) (punctuation 57025 . 57026) (punctuation 57024 . 57025) (symbol 57018 . 57024) (punctuation 57017 . 57018) (symbol 57006 . 57017) (punctuation 57005 . 57006) (punctuation 57004 . 57005) (symbol 57001 . 57004) (punctuation 56989 . 56990) (symbol 56979 . 56989) (TYPENAME 56970 . 56978) (punctuation 56969 . 56970) (TEMPLATE 56960 . 56968) (punctuation 56668 . 56669) (number 56667 . 56668) (punctuation 56665 . 56666) (punctuation 56663 . 56664) (INT 56660 . 56663) (punctuation 56631 . 56632) (symbol 56626 . 56631) (punctuation 56625 . 56626) (punctuation 56624 . 56625) (punctuation 56623 . 56624) (symbol 56613 . 56623) (punctuation 56612 . 56613) (symbol 56589 . 56612) (punctuation 56588 . 56589) (punctuation 56587 . 56588) (symbol 56581 . 56587) (punctuation 56580 . 56581) (punctuation 56579 . 56580) (symbol 56568 . 56579) (punctuation 56567 . 56568) (punctuation 56566 . 56567) (symbol 56563 . 56566) (punctuation 56551 . 56552) (symbol 56541 . 56551) (TYPENAME 56532 . 56540) (punctuation 56531 . 56532) (TEMPLATE 56522 . 56530) (punctuation 56365 . 56366) (punctuation 56364 . 56365) (punctuation 56363 . 56364) (symbol 56353 . 56363) (punctuation 56352 . 56353) (punctuation 56351 . 56352) (punctuation 56350 . 56351) (symbol 56349 . 56350) (punctuation 56348 . 56349) (symbol 56333 . 56348) (punctuation 56332 . 56333) (punctuation 56331 . 56332) (symbol 56328 . 56331) (TYPENAME 56319 . 56327) (punctuation 56318 . 56319) (symbol 56297 . 56318) (punctuation 56296 . 56297) (punctuation 56295 . 56296) (symbol 56292 . 56295) (punctuation 56286 . 56287) (punctuation 56285 . 56286) (symbol 56284 . 56285) (punctuation 56283 . 56284) (symbol 56273 . 56283) (punctuation 56272 . 56273) (punctuation 56271 . 56272) (symbol 56268 . 56271) (punctuation 56262 . 56263) (symbol 56251 . 56262) (punctuation 56249 . 56250) (symbol 56225 . 56248) (USING 56219 . 56224) (punctuation 56112 . 56113) (symbol 56111 . 56112) (TYPENAME 56102 . 56110) (punctuation 56101 . 56102) (TEMPLATE 56092 . 56100) (semantic-list 53843 . 53885) (semantic-list 53816 . 53842) (semantic-list 53759 . 53802) (INT 53755 . 53758) (INLINE 53748 . 53754) (punctuation 53746 . 53747) (symbol 53745 . 53746) (TYPENAME 53736 . 53744) (punctuation 53735 . 53736) (TEMPLATE 53727 . 53735) (punctuation 52673 . 52674) (punctuation 52191 . 52192) (punctuation 52190 . 52191) (punctuation 52189 . 52190) (punctuation 52188 . 52189) (semantic-list 52157 . 52163) (symbol 52149 . 52157) (symbol 52139 . 52148) (punctuation 52137 . 52138) (symbol 52127 . 52137) (punctuation 52125 . 52126) (punctuation 52124 . 52125) (punctuation 52123 . 52124) (TYPENAME 52115 . 52123) (punctuation 52114 . 52115) (TEMPLATE 52105 . 52113) (punctuation 50901 . 50902) (semantic-list 50899 . 50901) (OPERATOR 50891 . 50899) (punctuation 50890 . 50891) (punctuation 50889 . 50890) (punctuation 50888 . 50889) (symbol 50883 . 50888) (punctuation 50882 . 50883) (symbol 50868 . 50882) (USING 50862 . 50867) (punctuation 50793 . 50794) (EXPLICIT 50759 . 50767) (punctuation 50680 . 50681) (semantic-list 50414 . 50680) (punctuation 50412 . 50413) (punctuation 50411 . 50412) (punctuation 50410 . 50411) (punctuation 50409 . 50410) (symbol 50403 . 50409) (punctuation 50402 . 50403) (symbol 50395 . 50402) (punctuation 50393 . 50394) (punctuation 50392 . 50393) (symbol 50387 . 50392) (punctuation 50386 . 50387) (symbol 50372 . 50386) (punctuation 50370 . 50371) (punctuation 50368 . 50369) (punctuation 50367 . 50368) (punctuation 50366 . 50367) (punctuation 50365 . 50366) (symbol 50359 . 50365) (punctuation 50357 . 50358) (symbol 50352 . 50357) (punctuation 50351 . 50352) (symbol 50344 . 50351) (STRUCT 50337 . 50343) (punctuation 50335 . 50336) (symbol 50329 . 50335) (punctuation 50327 . 50328) (punctuation 50326 . 50327) (punctuation 50325 . 50326) (TYPENAME 50317 . 50325) (punctuation 50315 . 50316) (symbol 50310 . 50315) (TYPENAME 50301 . 50309) (punctuation 50300 . 50301) (TEMPLATE 50291 . 50299) (punctuation 50272 . 50273) (symbol 50270 . 50272) (punctuation 50268 . 50269) (punctuation 50267 . 50268) (punctuation 50266 . 50267) (TYPENAME 50258 . 50266) (punctuation 50257 . 50258) (TEMPLATE 50248 . 50256) (punctuation 50226 . 50227) (punctuation 50225 . 50226) (punctuation 50224 . 50225) (punctuation 50223 . 50224) (punctuation 50222 . 50223) (punctuation 50221 . 50222) (symbol 50219 . 50221) (punctuation 50217 . 50218) (symbol 50216 . 50217) (punctuation 50215 . 50216) (symbol 50205 . 50215) (punctuation 50204 . 50205) (punctuation 50203 . 50204) (symbol 50200 . 50203) (punctuation 50199 . 50200) (symbol 50188 . 50199) (punctuation 50186 . 50187) (symbol 50174 . 50185) (USING 50168 . 50173) (punctuation 50166 . 50167) (symbol 50164 . 50166) (punctuation 50162 . 50163) (punctuation 50161 . 50162) (punctuation 50160 . 50161) (TYPENAME 50152 . 50160) (punctuation 50150 . 50151) (symbol 50149 . 50150) (TYPENAME 50140 . 50148) (punctuation 50139 . 50140) (TEMPLATE 50130 . 50138) (punctuation 50015 . 50016) (punctuation 50014 . 50015) (punctuation 50013 . 50014) (punctuation 50012 . 50013) (punctuation 50011 . 50012) (punctuation 50010 . 50011) (symbol 50008 . 50010) (punctuation 50006 . 50007) (symbol 50005 . 50006) (punctuation 50004 . 50005) (symbol 49997 . 50004) (punctuation 49996 . 49997) (punctuation 49995 . 49996) (symbol 49992 . 49995) (punctuation 49991 . 49992) (symbol 49980 . 49991) (punctuation 49978 . 49979) (symbol 49968 . 49977) (USING 49962 . 49967) (punctuation 49960 . 49961) (symbol 49958 . 49960) (punctuation 49956 . 49957) (punctuation 49955 . 49956) (punctuation 49954 . 49955) (TYPENAME 49946 . 49954) (punctuation 49944 . 49945) (symbol 49943 . 49944) (TYPENAME 49934 . 49942) (punctuation 49933 . 49934) (TEMPLATE 49924 . 49932) (punctuation 49786 . 49787) (semantic-list 49784 . 49786) (punctuation 49782 . 49783) (number 49781 . 49782) (punctuation 49779 . 49780) (symbol 49777 . 49778) (punctuation 49776 . 49777) (symbol 49772 . 49776) (punctuation 49770 . 49771) (symbol 49765 . 49769) (STRUCT 49758 . 49764) (punctuation 49756 . 49757) (symbol 49755 . 49756) (INT 49751 . 49754) (punctuation 49750 . 49751) (TEMPLATE 49741 . 49749) (semantic-list 49541 . 49547) (symbol 49533 . 49541) (punctuation 49529 . 49530) (symbol 49528 . 49529) (TYPENAME 49519 . 49527) (punctuation 49518 . 49519) (TEMPLATE 49509 . 49517) (punctuation 48266 . 48267) (punctuation 47781 . 47782) (punctuation 47465 . 47466) (symbol 47460 . 47464) (USING 47454 . 47459) (USING 46009 . 46014) (punctuation 45588 . 45589) (punctuation 45587 . 45588) (symbol 45585 . 45586) (punctuation 45583 . 45584) (symbol 45572 . 45582) (TYPENAME 45563 . 45571) (punctuation 45561 . 45562) (punctuation 45560 . 45561) (symbol 45558 . 45559) (punctuation 45556 . 45557) (symbol 45547 . 45555) (TYPENAME 45538 . 45546) (punctuation 45526 . 45527) (symbol 45525 . 45526) (TYPENAME 45516 . 45524) (punctuation 45514 . 45515) (symbol 45509 . 45514) (TYPENAME 45500 . 45508) (punctuation 45498 . 45499) (symbol 45490 . 45498) (TYPENAME 45481 . 45489) (punctuation 45480 . 45481) (TEMPLATE 45471 . 45479) (punctuation 44862 . 44863) (DEFAULT 44855 . 44862) (punctuation 44853 . 44854) (semantic-list 44815 . 44852) (punctuation 44814 . 44815) (OPERATOR 44806 . 44814) (punctuation 44802 . 44803) (symbol 44774 . 44801) (punctuation 44770 . 44771) (DEFAULT 44763 . 44770) (punctuation 44761 . 44762) (semantic-list 44728 . 44760) (symbol 44701 . 44728) (punctuation 44758 . 44759) (punctuation 44697 . 44698) (DEFAULT 44690 . 44697) (punctuation 44688 . 44689) (semantic-list 44650 . 44687) (symbol 44623 . 44650) (OPERATOR 44260 . 44268) (punctuation 44256 . 44257) (punctuation 44255 . 44256) (symbol 44250 . 44255) (punctuation 44249 . 44250) (punctuation 44248 . 44249) (punctuation 44247 . 44248) (punctuation 44246 . 44247) (symbol 44238 . 44246) (punctuation 44237 . 44238) (symbol 44223 . 44237) (punctuation 44221 . 44222) (symbol 44215 . 44221) (punctuation 44180 . 44181) (symbol 44164 . 44180) (punctuation 44163 . 44164) (punctuation 44162 . 44163) (symbol 44159 . 44162) (punctuation 44158 . 44159) (symbol 44147 . 44158) (punctuation 44146 . 44147) (punctuation 44145 . 44146) (symbol 44142 . 44145) (punctuation 44140 . 44141) (TYPENAME 44131 . 44139) (punctuation 44129 . 44130) (symbol 44123 . 44129) (TYPENAME 44114 . 44122) (punctuation 44113 . 44114) (TEMPLATE 44104 . 44112) (USING 40871 . 40876) (punctuation 40823 . 40824) (punctuation 40822 . 40823) (symbol 40820 . 40821) (punctuation 40818 . 40819) (symbol 40807 . 40817) (TYPENAME 40798 . 40806) (punctuation 40796 . 40797) (punctuation 40795 . 40796) (symbol 40793 . 40794) (punctuation 40791 . 40792) (symbol 40782 . 40790) (TYPENAME 40773 . 40781) (punctuation 40761 . 40762) (symbol 40760 . 40761) (TYPENAME 40751 . 40759) (punctuation 40749 . 40750) (symbol 40744 . 40749) (TYPENAME 40735 . 40743) (punctuation 40733 . 40734) (symbol 40725 . 40733) (TYPENAME 40716 . 40724) (punctuation 40715 . 40716) (TEMPLATE 40706 . 40714) (punctuation 38863 . 38864) (punctuation 38862 . 38863) (symbol 38860 . 38861) (punctuation 38858 . 38859) (symbol 38847 . 38857) (TYPENAME 38838 . 38846) (punctuation 38836 . 38837) (punctuation 38835 . 38836) (symbol 38833 . 38834) (punctuation 38831 . 38832) (symbol 38822 . 38830) (TYPENAME 38813 . 38821) (punctuation 38801 . 38802) (symbol 38800 . 38801) (TYPENAME 38791 . 38799) (punctuation 38789 . 38790) (symbol 38784 . 38789) (TYPENAME 38775 . 38783) (punctuation 38773 . 38774) (symbol 38765 . 38773) (TYPENAME 38756 . 38764) (punctuation 38755 . 38756) (TEMPLATE 38746 . 38754) (punctuation 38381 . 38382) (punctuation 38380 . 38381) (punctuation 38379 . 38380) (punctuation 38378 . 38379) (punctuation 38360 . 38361) (punctuation 38359 . 38360) (punctuation 38358 . 38359) (punctuation 38357 . 38358) (symbol 38350 . 38357) (punctuation 38348 . 38349) (symbol 38342 . 38348) (punctuation 38341 . 38342) (symbol 38329 . 38341) (punctuation 38328 . 38329) (punctuation 38327 . 38328) (symbol 38321 . 38327) (punctuation 38319 . 38320) (symbol 38312 . 38319) (punctuation 38310 . 38311) (punctuation 38309 . 38310) (punctuation 38308 . 38309) (TYPENAME 38300 . 38308) (punctuation 38298 . 38299) (symbol 38292 . 38298) (TYPENAME 38283 . 38291) (punctuation 38282 . 38283) (TEMPLATE 38273 . 38281) (punctuation 37716 . 37717) (punctuation 37715 . 37716) (punctuation 37714 . 37715) (punctuation 37713 . 37714) (punctuation 37534 . 37535) (punctuation 37533 . 37534) (punctuation 37532 . 37533) (punctuation 37531 . 37532) (punctuation 37528 . 37529) (punctuation 37489 . 37490) (symbol 37487 . 37489) (punctuation 37485 . 37486) (punctuation 37484 . 37485) (punctuation 37483 . 37484) (symbol 37477 . 37483) (punctuation 37476 . 37477) (TEMPLATE 37467 . 37475) (punctuation 37325 . 37326) (punctuation 37324 . 37325) (punctuation 37323 . 37324) (punctuation 37322 . 37323) (punctuation 37319 . 37320) (punctuation 37280 . 37281) (symbol 37278 . 37280) (punctuation 37276 . 37277) (punctuation 37275 . 37276) (punctuation 37274 . 37275) (symbol 37268 . 37274) (punctuation 37267 . 37268) (TEMPLATE 37258 . 37266) (punctuation 37195 . 37196) (punctuation 37194 . 37195) (punctuation 37193 . 37194) (punctuation 37192 . 37193) (punctuation 37189 . 37190) (punctuation 37146 . 37147) (symbol 37144 . 37146) (punctuation 37142 . 37143) (punctuation 37141 . 37142) (punctuation 37140 . 37141) (symbol 37134 . 37140) (punctuation 37133 . 37134) (TEMPLATE 37124 . 37132) (punctuation 37067 . 37068) (punctuation 37066 . 37067) (punctuation 37065 . 37066) (punctuation 37064 . 37065) (punctuation 37061 . 37062) (punctuation 37018 . 37019) (symbol 37016 . 37018) (punctuation 37014 . 37015) (punctuation 37013 . 37014) (punctuation 37012 . 37013) (symbol 37006 . 37012) (punctuation 37005 . 37006) (TEMPLATE 36996 . 37004) (punctuation 36983 . 36984) (punctuation 36982 . 36983) (punctuation 36981 . 36982) (punctuation 36980 . 36981) (symbol 36973 . 36980) (punctuation 36972 . 36973) (symbol 36967 . 36972) (punctuation 36966 . 36967) (punctuation 36965 . 36966) (symbol 36962 . 36965) (punctuation 36948 . 36949) (punctuation 36947 . 36948) (punctuation 36946 . 36947) (punctuation 36945 . 36946) (punctuation 36944 . 36945) (semantic-list 36905 . 36944) (symbol 36897 . 36905) (semantic-list 36916 . 36943) (punctuation 36873 . 36874) (symbol 36867 . 36873) (punctuation 36866 . 36867) (symbol 36851 . 36866) (punctuation 36843 . 36844) (symbol 36834 . 36842) (USING 36828 . 36833) (punctuation 36795 . 36796) (symbol 36788 . 36795) (punctuation 36786 . 36787) (punctuation 36785 . 36786) (punctuation 36784 . 36785) (TYPENAME 36776 . 36784) (punctuation 36774 . 36775) (symbol 36768 . 36774) (TYPENAME 36759 . 36767) (punctuation 36758 . 36759) (TEMPLATE 36749 . 36757) (punctuation 36470 . 36471) (semantic-list 33289 . 36470) (punctuation 33287 . 33288) (symbol 33281 . 33287) (punctuation 33279 . 33280) (symbol 33259 . 33279) (punctuation 33258 . 33259) (punctuation 33257 . 33258) (symbol 33254 . 33257) (punctuation 33218 . 33219) (punctuation 33217 . 33218) (punctuation 33216 . 33217) (punctuation 33215 . 33216) (punctuation 33214 . 33215) (symbol 33208 . 33214) (punctuation 33206 . 33207) (symbol 33200 . 33206) (punctuation 33199 . 33200) (symbol 33184 . 33199) (punctuation 33183 . 33184) (symbol 33163 . 33183) (PUBLIC 33156 . 33162) (punctuation 33154 . 33155) (symbol 33134 . 33149) (CLASS 33128 . 33133) (punctuation 33126 . 33127) (symbol 33120 . 33126) (punctuation 33118 . 33119) (punctuation 33117 . 33118) (punctuation 33116 . 33117) (TYPENAME 33108 . 33116) (punctuation 33106 . 33107) (symbol 33100 . 33106) (TYPENAME 33091 . 33099) (punctuation 33090 . 33091) (TEMPLATE 33081 . 33089) (punctuation 32390 . 32391) (punctuation 32389 . 32390) (punctuation 32388 . 32389) (punctuation 32387 . 32388) (punctuation 32324 . 32325) (punctuation 32317 . 32318) (punctuation 32300 . 32301) (punctuation 32299 . 32300) (punctuation 32298 . 32299) (punctuation 32297 . 32298) (symbol 32293 . 32297) (punctuation 32291 . 32292) (symbol 32290 . 32291) (punctuation 32288 . 32289) (symbol 32287 . 32288) (punctuation 32286 . 32287) (symbol 32269 . 32286) (punctuation 32268 . 32269) (punctuation 32267 . 32268) (symbol 32261 . 32267) (punctuation 32259 . 32260) (symbol 32255 . 32259) (punctuation 32253 . 32254) (punctuation 32252 . 32253) (punctuation 32251 . 32252) (TYPENAME 32243 . 32251) (punctuation 32241 . 32242) (symbol 32240 . 32241) (TYPENAME 32231 . 32239) (punctuation 32229 . 32230) (symbol 32228 . 32229) (TYPENAME 32219 . 32227) (punctuation 32218 . 32219) (TEMPLATE 32209 . 32217) (punctuation 31767 . 31768) (punctuation 31766 . 31767) (punctuation 31765 . 31766) (punctuation 31764 . 31765) (punctuation 31585 . 31586) (punctuation 31584 . 31585) (punctuation 31583 . 31584) (punctuation 31582 . 31583) (punctuation 31579 . 31580) (punctuation 31540 . 31541) (symbol 31538 . 31540) (punctuation 31536 . 31537) (punctuation 31535 . 31536) (punctuation 31534 . 31535) (symbol 31528 . 31534) (punctuation 31527 . 31528) (TEMPLATE 31518 . 31526) (punctuation 31369 . 31370) (punctuation 31368 . 31369) (punctuation 31367 . 31368) (punctuation 31366 . 31367) (punctuation 31363 . 31364) (punctuation 31320 . 31321) (symbol 31318 . 31320) (punctuation 31316 . 31317) (punctuation 31315 . 31316) (punctuation 31314 . 31315) (symbol 31308 . 31314) (punctuation 31307 . 31308) (TEMPLATE 31298 . 31306) (punctuation 31289 . 31290) (punctuation 31288 . 31289) (punctuation 31287 . 31288) (punctuation 31286 . 31287) (symbol 31282 . 31286) (punctuation 31281 . 31282) (symbol 31276 . 31281) (punctuation 31275 . 31276) (punctuation 31274 . 31275) (symbol 31271 . 31274) (punctuation 31227 . 31228) (symbol 31217 . 31226) (USING 31211 . 31216) (punctuation 31179 . 31180) (symbol 31171 . 31178) (USING 31165 . 31170) (punctuation 31125 . 31126) (symbol 31109 . 31124) (USING 31103 . 31108) (punctuation 31068 . 31069) (symbol 31057 . 31067) (USING 31051 . 31056) (punctuation 31009 . 31010) (symbol 30991 . 31008) (USING 30985 . 30990) (punctuation 30981 . 30982) (punctuation 30980 . 30981) (punctuation 30979 . 30980) (punctuation 30978 . 30979) (punctuation 30977 . 30978) (semantic-list 30944 . 30977) (symbol 30936 . 30944) (semantic-list 30954 . 30976) (punctuation 30935 . 30936) (symbol 30915 . 30935) (punctuation 30907 . 30908) (symbol 30898 . 30906) (USING 30892 . 30897) (punctuation 30854 . 30855) (symbol 30850 . 30854) (punctuation 30848 . 30849) (punctuation 30847 . 30848) (punctuation 30846 . 30847) (TYPENAME 30838 . 30846) (punctuation 30837 . 30838) (TEMPLATE 30828 . 30836) (punctuation 30825 . 30826) (semantic-list 29393 . 30825) (punctuation 29391 . 29392) (symbol 29387 . 29391) (punctuation 29386 . 29387) (punctuation 29385 . 29386) (punctuation 29384 . 29385) (punctuation 29383 . 29384) (punctuation 29382 . 29383) (punctuation 29381 . 29382) (symbol 29376 . 29381) (punctuation 29375 . 29376) (symbol 29356 . 29375) (TYPENAME 29347 . 29355) (punctuation 29335 . 29336) (punctuation 29334 . 29335) (symbol 29329 . 29333) (punctuation 29328 . 29329) (punctuation 29327 . 29328) (punctuation 29326 . 29327) (punctuation 29325 . 29326) (punctuation 29324 . 29325) (punctuation 29323 . 29324) (symbol 29318 . 29323) (punctuation 29317 . 29318) (symbol 29298 . 29317) (TYPENAME 29289 . 29297) (punctuation 29277 . 29278) (symbol 29262 . 29277) (punctuation 29261 . 29262) (punctuation 29260 . 29261) (punctuation 29259 . 29260) (symbol 29255 . 29259) (punctuation 29254 . 29255) (punctuation 29253 . 29254) (punctuation 29252 . 29253) (punctuation 29251 . 29252) (punctuation 29250 . 29251) (punctuation 29249 . 29250) (punctuation 29248 . 29249) (symbol 29243 . 29248) (punctuation 29242 . 29243) (symbol 29237 . 29242) (punctuation 29236 . 29237) (punctuation 29235 . 29236) (symbol 29232 . 29235) (punctuation 29230 . 29231) (number 29229 . 29230) (punctuation 29213 . 29214) (symbol 29200 . 29213) (punctuation 29199 . 29200) (punctuation 29198 . 29199) (symbol 29195 . 29198) (TYPENAME 29186 . 29194) (punctuation 29185 . 29186) (symbol 29170 . 29185) (punctuation 29169 . 29170) (punctuation 29168 . 29169) (symbol 29165 . 29168) (TYPENAME 29156 . 29164) (punctuation 29144 . 29145) (symbol 29140 . 29144) (punctuation 29139 . 29140) (punctuation 29138 . 29139) (punctuation 29137 . 29138) (punctuation 29136 . 29137) (punctuation 29135 . 29136) (punctuation 29134 . 29135) (symbol 29129 . 29134) (punctuation 29128 . 29129) (symbol 29109 . 29128) (TYPENAME 29100 . 29108) (punctuation 29088 . 29089) (symbol 29084 . 29088) (punctuation 29083 . 29084) (punctuation 29082 . 29083) (punctuation 29081 . 29082) (punctuation 29080 . 29081) (punctuation 29079 . 29080) (punctuation 29078 . 29079) (symbol 29061 . 29078) (punctuation 29060 . 29061) (punctuation 29059 . 29060) (punctuation 29058 . 29059) (symbol 29053 . 29058) (punctuation 29052 . 29053) (symbol 29037 . 29052) (punctuation 29036 . 29037) (punctuation 29035 . 29036) (symbol 29032 . 29035) (TYPENAME 29023 . 29031) (punctuation 29007 . 29008) (symbol 28987 . 29007) (punctuation 28986 . 28987) (punctuation 28985 . 28986) (symbol 28982 . 28985) (punctuation 28966 . 28967) (symbol 28955 . 28966) (punctuation 28954 . 28955) (punctuation 28953 . 28954) (symbol 28950 . 28953) (TYPENAME 28941 . 28949) (punctuation 28929 . 28930) (punctuation 28928 . 28929) (punctuation 28927 . 28928) (punctuation 28926 . 28927) (punctuation 28925 . 28926) (symbol 28920 . 28925) (punctuation 28919 . 28920) (symbol 28899 . 28919) (punctuation 28887 . 28888) (symbol 28867 . 28887) (PUBLIC 28860 . 28866) (punctuation 28858 . 28859) (symbol 28833 . 28853) (CLASS 28827 . 28832) (punctuation 28825 . 28826) (symbol 28820 . 28825) (punctuation 28818 . 28819) (punctuation 28817 . 28818) (punctuation 28816 . 28817) (TYPENAME 28808 . 28816) (punctuation 28807 . 28808) (TEMPLATE 28798 . 28806) (punctuation 28792 . 28793) (punctuation 28791 . 28792) (punctuation 28790 . 28791) (punctuation 28789 . 28790) (punctuation 28788 . 28789) (symbol 28784 . 28788) (punctuation 28783 . 28784) (punctuation 28782 . 28783) (punctuation 28781 . 28782) (symbol 28776 . 28781) (punctuation 28775 . 28776) (symbol 28757 . 28775) (TYPENAME 28748 . 28756) (punctuation 28747 . 28748) (symbol 28742 . 28747) (punctuation 28741 . 28742) (punctuation 28740 . 28741) (symbol 28737 . 28740) (punctuation 28735 . 28736) (symbol 28730 . 28734) (USING 28724 . 28729) (punctuation 28691 . 28692) (symbol 28686 . 28691) (punctuation 28684 . 28685) (punctuation 28683 . 28684) (punctuation 28682 . 28683) (TYPENAME 28674 . 28682) (punctuation 28673 . 28674) (TEMPLATE 28664 . 28672) (punctuation 28658 . 28659) (punctuation 28657 . 28658) (symbol 28653 . 28657) (punctuation 28652 . 28653) (punctuation 28651 . 28652) (punctuation 28650 . 28651) (symbol 28646 . 28650) (punctuation 28645 . 28646) (punctuation 28644 . 28645) (punctuation 28643 . 28644) (semantic-list 28620 . 28643) (symbol 28612 . 28620) (semantic-list 28640 . 28642) (punctuation 28621 . 28622) (punctuation 28600 . 28601) (symbol 28584 . 28600) (punctuation 28583 . 28584) (punctuation 28582 . 28583) (symbol 28579 . 28582) (TYPENAME 28570 . 28578) (punctuation 28569 . 28570) (symbol 28557 . 28569) (punctuation 28556 . 28557) (punctuation 28555 . 28556) (symbol 28552 . 28555) (TYPENAME 28543 . 28551) (punctuation 28542 . 28543) (symbol 28534 . 28542) (punctuation 28533 . 28534) (punctuation 28532 . 28533) (symbol 28528 . 28532) (punctuation 28520 . 28521) (symbol 28515 . 28519) (USING 28509 . 28514) (semantic-list 28403 . 28452) (punctuation 28401 . 28402) (punctuation 28400 . 28401) (punctuation 28399 . 28400) (semantic-list 28395 . 28399) (symbol 28387 . 28395) (punctuation 28396 . 28397) (punctuation 28386 . 28387) (symbol 28368 . 28386) (punctuation 28367 . 28368) (punctuation 28366 . 28367) (symbol 28363 . 28366) (punctuation 28362 . 28363) (symbol 28348 . 28362) (punctuation 28347 . 28348) (punctuation 28346 . 28347) (symbol 28343 . 28346) (punctuation 28337 . 28338) (symbol 28329 . 28337) (punctuation 28328 . 28329) (punctuation 28327 . 28328) (symbol 28323 . 28327) (punctuation 28321 . 28322) (punctuation 28320 . 28321) (semantic-list 28287 . 28319) (symbol 28274 . 28287) (symbol 28269 . 28273) (punctuation 28267 . 28268) (symbol 28263 . 28267) (TYPENAME 28254 . 28262) (punctuation 28253 . 28254) (TEMPLATE 28244 . 28252) (punctuation 27944 . 27945) (punctuation 27943 . 27944) (punctuation 27942 . 27943) (punctuation 27941 . 27942) (punctuation 27873 . 27874) (punctuation 27866 . 27867) (punctuation 27851 . 27852) (punctuation 27850 . 27851) (punctuation 27849 . 27850) (punctuation 27848 . 27849) (symbol 27844 . 27848) (punctuation 27842 . 27843) (symbol 27841 . 27842) (punctuation 27839 . 27840) (symbol 27838 . 27839) (punctuation 27836 . 27837) (symbol 27827 . 27836) (punctuation 27826 . 27827) (punctuation 27825 . 27826) (symbol 27819 . 27825) (punctuation 27818 . 27819) (symbol 27813 . 27818) (punctuation 27812 . 27813) (punctuation 27811 . 27812) (symbol 27805 . 27811) (punctuation 27803 . 27804) (symbol 27799 . 27803) (punctuation 27797 . 27798) (punctuation 27796 . 27797) (punctuation 27795 . 27796) (TYPENAME 27787 . 27795) (punctuation 27785 . 27786) (symbol 27784 . 27785) (TYPENAME 27775 . 27783) (punctuation 27773 . 27774) (symbol 27772 . 27773) (TYPENAME 27763 . 27771) (punctuation 27762 . 27763) (TEMPLATE 27753 . 27761) (punctuation 27501 . 27502) (punctuation 27500 . 27501) (punctuation 27499 . 27500) (punctuation 27498 . 27499) (punctuation 27433 . 27434) (punctuation 27426 . 27427) (punctuation 27417 . 27418) (punctuation 27416 . 27417) (punctuation 27415 . 27416) (punctuation 27414 . 27415) (symbol 27410 . 27414) (punctuation 27408 . 27409) (symbol 27407 . 27408) (punctuation 27405 . 27406) (symbol 27404 . 27405) (punctuation 27402 . 27403) (symbol 27390 . 27402) (punctuation 27389 . 27390) (punctuation 27388 . 27389) (symbol 27382 . 27388) (punctuation 27381 . 27382) (symbol 27376 . 27381) (punctuation 27375 . 27376) (punctuation 27374 . 27375) (symbol 27368 . 27374) (punctuation 27366 . 27367) (symbol 27362 . 27366) (punctuation 27360 . 27361) (punctuation 27359 . 27360) (punctuation 27358 . 27359) (TYPENAME 27350 . 27358) (punctuation 27348 . 27349) (symbol 27347 . 27348) (TYPENAME 27338 . 27346) (punctuation 27336 . 27337) (symbol 27335 . 27336) (TYPENAME 27326 . 27334) (punctuation 27325 . 27326) (TEMPLATE 27316 . 27324) (punctuation 27020 . 27021) (punctuation 27019 . 27020) (punctuation 27018 . 27019) (punctuation 27017 . 27018) (punctuation 26927 . 26928) (punctuation 26926 . 26927) (punctuation 26925 . 26926) (punctuation 26924 . 26925) (punctuation 26921 . 26922) (punctuation 26882 . 26883) (symbol 26880 . 26882) (punctuation 26878 . 26879) (punctuation 26877 . 26878) (punctuation 26876 . 26877) (symbol 26870 . 26876) (punctuation 26869 . 26870) (TEMPLATE 26860 . 26868) (punctuation 26789 . 26790) (punctuation 26788 . 26789) (punctuation 26787 . 26788) (punctuation 26786 . 26787) (punctuation 26783 . 26784) (punctuation 26740 . 26741) (symbol 26738 . 26740) (punctuation 26736 . 26737) (punctuation 26735 . 26736) (punctuation 26734 . 26735) (symbol 26728 . 26734) (punctuation 26727 . 26728) (TEMPLATE 26718 . 26726) (punctuation 26709 . 26710) (punctuation 26708 . 26709) (punctuation 26707 . 26708) (punctuation 26706 . 26707) (symbol 26702 . 26706) (punctuation 26701 . 26702) (symbol 26696 . 26701) (punctuation 26695 . 26696) (punctuation 26694 . 26695) (symbol 26691 . 26694) (punctuation 26647 . 26648) (symbol 26637 . 26646) (USING 26631 . 26636) (punctuation 26599 . 26600) (symbol 26591 . 26598) (USING 26585 . 26590) (punctuation 26545 . 26546) (symbol 26529 . 26544) (USING 26523 . 26528) (punctuation 26488 . 26489) (symbol 26477 . 26487) (USING 26471 . 26476) (punctuation 26429 . 26430) (symbol 26411 . 26428) (USING 26405 . 26410) (punctuation 26401 . 26402) (punctuation 26400 . 26401) (punctuation 26399 . 26400) (punctuation 26398 . 26399) (punctuation 26397 . 26398) (semantic-list 26363 . 26397) (symbol 26355 . 26363) (semantic-list 26374 . 26396) (punctuation 26354 . 26355) (symbol 26348 . 26354) (punctuation 26346 . 26347) (symbol 26337 . 26345) (USING 26331 . 26336) (punctuation 26305 . 26306) (symbol 26301 . 26305) (punctuation 26299 . 26300) (punctuation 26298 . 26299) (punctuation 26297 . 26298) (TYPENAME 26289 . 26297) (punctuation 26287 . 26288) (symbol 26281 . 26287) (CLASS 26275 . 26280) (punctuation 26273 . 26274) (punctuation 26272 . 26273) (punctuation 26271 . 26272) (punctuation 26270 . 26271) (TYPENAME 26262 . 26270) (punctuation 26261 . 26262) (TEMPLATE 26252 . 26260) (punctuation 26251 . 26252) (TEMPLATE 26242 . 26250) (punctuation 26239 . 26240) (semantic-list 25642 . 26239) (punctuation 25640 . 25641) (punctuation 25639 . 25640) (punctuation 25638 . 25639) (punctuation 25637 . 25638) (symbol 25632 . 25637) (punctuation 25630 . 25631) (punctuation 25629 . 25630) (punctuation 25628 . 25629) (punctuation 25627 . 25628) (punctuation 25626 . 25627) (symbol 25621 . 25626) (punctuation 25620 . 25621) (symbol 25608 . 25620) (punctuation 25607 . 25608) (symbol 25597 . 25607) (PUBLIC 25590 . 25596) (punctuation 25588 . 25589) (symbol 25575 . 25587) (CLASS 25569 . 25574) (punctuation 25567 . 25568) (symbol 25562 . 25567) (punctuation 25560 . 25561) (punctuation 25559 . 25560) (punctuation 25558 . 25559) (TYPENAME 25550 . 25558) (punctuation 25549 . 25550) (TEMPLATE 25540 . 25548) (punctuation 25537 . 25538) (semantic-list 25271 . 25537) (punctuation 25269 . 25270) (punctuation 25268 . 25269) (punctuation 25267 . 25268) (punctuation 25266 . 25267) (symbol 25261 . 25266) (punctuation 25259 . 25260) (punctuation 25258 . 25259) (punctuation 25257 . 25258) (punctuation 25256 . 25257) (punctuation 25255 . 25256) (symbol 25250 . 25255) (punctuation 25249 . 25250) (symbol 25240 . 25249) (punctuation 25239 . 25240) (symbol 25229 . 25239) (PUBLIC 25222 . 25228) (punctuation 25220 . 25221) (symbol 25210 . 25219) (STRUCT 25203 . 25209) (punctuation 25201 . 25202) (symbol 25196 . 25201) (punctuation 25194 . 25195) (punctuation 25193 . 25194) (punctuation 25192 . 25193) (TYPENAME 25184 . 25192) (punctuation 25183 . 25184) (TEMPLATE 25174 . 25182) (punctuation 25171 . 25172) (semantic-list 23473 . 25171) (punctuation 23471 . 23472) (punctuation 23470 . 23471) (punctuation 23469 . 23470) (punctuation 23468 . 23469) (symbol 23463 . 23468) (punctuation 23461 . 23462) (symbol 23454 . 23461) (punctuation 23453 . 23454) (symbol 23443 . 23453) (PUBLIC 23436 . 23442) (punctuation 23434 . 23435) (symbol 23423 . 23433) (STRUCT 23416 . 23422) (punctuation 23414 . 23415) (symbol 23409 . 23414) (punctuation 23407 . 23408) (punctuation 23406 . 23407) (punctuation 23405 . 23406) (TYPENAME 23397 . 23405) (punctuation 23395 . 23396) (symbol 23388 . 23395) (TYPENAME 23379 . 23387) (punctuation 23378 . 23379) (TEMPLATE 23369 . 23377) (punctuation 23366 . 23367) (punctuation 23365 . 23366) (symbol 23361 . 23365) (punctuation 23360 . 23361) (punctuation 23359 . 23360) (punctuation 23358 . 23359) (punctuation 23357 . 23358) (punctuation 23356 . 23357) (punctuation 23355 . 23356) (symbol 23350 . 23355) (punctuation 23349 . 23350) (symbol 23337 . 23349) (TYPENAME 23328 . 23336) (punctuation 23322 . 23323) (punctuation 23321 . 23322) (symbol 23316 . 23320) (punctuation 23315 . 23316) (punctuation 23314 . 23315) (punctuation 23313 . 23314) (punctuation 23312 . 23313) (punctuation 23311 . 23312) (punctuation 23310 . 23311) (symbol 23305 . 23310) (punctuation 23304 . 23305) (symbol 23292 . 23304) (TYPENAME 23283 . 23291) (punctuation 23029 . 23030) (symbol 23014 . 23029) (punctuation 23013 . 23014) (punctuation 23012 . 23013) (punctuation 23011 . 23012) (symbol 23007 . 23011) (punctuation 23006 . 23007) (punctuation 23005 . 23006) (punctuation 23004 . 23005) (punctuation 23003 . 23004) (punctuation 23002 . 23003) (punctuation 23001 . 23002) (punctuation 23000 . 23001) (symbol 22995 . 23000) (punctuation 22994 . 22995) (symbol 22989 . 22994) (punctuation 22988 . 22989) (punctuation 22987 . 22988) (symbol 22984 . 22987) (punctuation 22982 . 22983) (number 22981 . 22982) (punctuation 22971 . 22972) (symbol 22958 . 22971) (punctuation 22957 . 22958) (punctuation 22956 . 22957) (symbol 22953 . 22956) (TYPENAME 22944 . 22952) (punctuation 22943 . 22944) (symbol 22928 . 22943) (punctuation 22927 . 22928) (punctuation 22926 . 22927) (symbol 22923 . 22926) (TYPENAME 22914 . 22922) (punctuation 22908 . 22909) (symbol 22904 . 22908) (punctuation 22903 . 22904) (punctuation 22902 . 22903) (punctuation 22901 . 22902) (punctuation 22900 . 22901) (punctuation 22899 . 22900) (punctuation 22898 . 22899) (symbol 22893 . 22898) (punctuation 22892 . 22893) (symbol 22880 . 22892) (TYPENAME 22871 . 22879) (punctuation 22817 . 22818) (symbol 22813 . 22817) (punctuation 22812 . 22813) (punctuation 22811 . 22812) (punctuation 22810 . 22811) (punctuation 22809 . 22810) (punctuation 22808 . 22809) (punctuation 22807 . 22808) (symbol 22790 . 22807) (punctuation 22789 . 22790) (punctuation 22788 . 22789) (punctuation 22787 . 22788) (symbol 22782 . 22787) (punctuation 22737 . 22738) (symbol 22722 . 22737) (punctuation 22721 . 22722) (punctuation 22720 . 22721) (symbol 22717 . 22720) (TYPENAME 22708 . 22716) (punctuation 22667 . 22668) (symbol 22641 . 22667) (punctuation 22640 . 22641) (punctuation 22639 . 22640) (symbol 22636 . 22639) (punctuation 22635 . 22636) (symbol 22624 . 22635) (punctuation 22623 . 22624) (punctuation 22622 . 22623) (symbol 22619 . 22622) (TYPENAME 22610 . 22618) (punctuation 22608 . 22609) (symbol 22601 . 22608) (punctuation 22595 . 22596) (symbol 22575 . 22595) (punctuation 22573 . 22574) (symbol 22562 . 22572) (USING 22556 . 22561) (punctuation 22554 . 22555) (symbol 22549 . 22554) (punctuation 22547 . 22548) (punctuation 22546 . 22547) (punctuation 22545 . 22546) (TYPENAME 22537 . 22545) (punctuation 22535 . 22536) (symbol 22528 . 22535) (TYPENAME 22519 . 22527) (punctuation 22518 . 22519) (TEMPLATE 22509 . 22517) (punctuation 22503 . 22504) (punctuation 22502 . 22503) (punctuation 22501 . 22502) (punctuation 22500 . 22501) (punctuation 22499 . 22500) (semantic-list 22480 . 22499) (symbol 22472 . 22480) (semantic-list 22496 . 22498) (punctuation 22481 . 22482) (punctuation 22471 . 22472) (symbol 22466 . 22471) (punctuation 22465 . 22466) (punctuation 22464 . 22465) (symbol 22461 . 22464) (punctuation 22459 . 22460) (symbol 22454 . 22458) (USING 22448 . 22453) (punctuation 22422 . 22423) (symbol 22417 . 22422) (punctuation 22415 . 22416) (punctuation 22414 . 22415) (punctuation 22413 . 22414) (TYPENAME 22405 . 22413) (punctuation 22404 . 22405) (TEMPLATE 22396 . 22404) (punctuation 22180 . 22181) (punctuation 22091 . 22092) (punctuation 21698 . 21699) (punctuation 20392 . 20393) (punctuation 20391 . 20392) (punctuation 20390 . 20391) (OPERATOR 20382 . 20390) (punctuation 20381 . 20382) (punctuation 20380 . 20381) (symbol 20375 . 20380) (USING 20369 . 20374) (semantic-list 20149 . 20184) (symbol 20141 . 20149) (semantic-list 20181 . 20183) (punctuation 20150 . 20151) (punctuation 20137 . 20138) (punctuation 20136 . 20137) (OPERATOR 20128 . 20136) (punctuation 20127 . 20128) (punctuation 20126 . 20127) (symbol 20121 . 20126) (USING 20115 . 20120) (punctuation 19893 . 19894) (symbol 19884 . 19892) (USING 19878 . 19883) (punctuation 19816 . 19817) (symbol 19810 . 19815) (USING 19804 . 19809) (punctuation 18396 . 18397) (punctuation 17834 . 17835) (punctuation 17833 . 17834) (symbol 17829 . 17833) (punctuation 17828 . 17829) (punctuation 17827 . 17828) (punctuation 17826 . 17827) (symbol 17810 . 17826) (punctuation 17809 . 17810) (symbol 17794 . 17809) (punctuation 17793 . 17794) (punctuation 17792 . 17793) (symbol 17786 . 17792) (TYPENAME 17777 . 17785) (punctuation 17771 . 17772) (symbol 17761 . 17771) (punctuation 17759 . 17760) (symbol 17743 . 17759) (punctuation 17737 . 17738) (symbol 17717 . 17737) (punctuation 17715 . 17716) (symbol 17699 . 17714) (USING 17693 . 17698) (punctuation 17691 . 17692) (symbol 17681 . 17691) (TYPENAME 17672 . 17680) (punctuation 17670 . 17671) (symbol 17654 . 17670) (TYPENAME 17645 . 17653) (punctuation 17644 . 17645) (TEMPLATE 17635 . 17643) (punctuation 17470 . 17471) (punctuation 17469 . 17470) (punctuation 17468 . 17469) (symbol 17463 . 17468) (punctuation 17462 . 17463) (punctuation 17461 . 17462) (punctuation 17460 . 17461) (symbol 17443 . 17460) (punctuation 17442 . 17443) (punctuation 17441 . 17442) (punctuation 17440 . 17441) (symbol 17435 . 17440) (punctuation 17434 . 17435) (symbol 17419 . 17434) (punctuation 17418 . 17419) (punctuation 17417 . 17418) (symbol 17414 . 17417) (TYPENAME 17405 . 17413) (punctuation 17397 . 17398) (symbol 17371 . 17397) (punctuation 17370 . 17371) (punctuation 17369 . 17370) (symbol 17366 . 17369) (punctuation 17358 . 17359) (symbol 17348 . 17358) (punctuation 17347 . 17348) (punctuation 17346 . 17347) (symbol 17343 . 17346) (punctuation 17342 . 17343) (symbol 17322 . 17342) (TYPENAME 17313 . 17321) (punctuation 17311 . 17312) (symbol 17306 . 17310) (USING 17300 . 17305) (punctuation 17016 . 17017) (symbol 17011 . 17015) (USING 17005 . 17010) (punctuation 16922 . 16923) (symbol 16917 . 16921) (USING 16911 . 16916) (punctuation 16567 . 16568) (punctuation 16566 . 16567) (punctuation 16565 . 16566) (OPERATOR 16557 . 16565) (punctuation 16556 . 16557) (punctuation 16555 . 16556) (symbol 16550 . 16555) (USING 16544 . 16549) (punctuation 16387 . 16388) (symbol 16381 . 16386) (USING 16375 . 16380) (punctuation 15696 . 15697) (symbol 15676 . 15696) (punctuation 15675 . 15676) (punctuation 15674 . 15675) (symbol 15671 . 15674) (punctuation 15669 . 15670) (symbol 15661 . 15668) (TYPENAME 15652 . 15660) (punctuation 15640 . 15641) (symbol 15630 . 15640) (TYPENAME 15621 . 15629) (punctuation 15619 . 15620) (symbol 15603 . 15619) (TYPENAME 15594 . 15602) (punctuation 15593 . 15594) (TEMPLATE 15584 . 15592) (punctuation 15510 . 15511) (semantic-list 14738 . 15510) (punctuation 14736 . 14737) (symbol 14732 . 14736) (punctuation 14731 . 14732) (punctuation 14730 . 14731) (punctuation 14729 . 14730) (symbol 14712 . 14729) (punctuation 14711 . 14712) (punctuation 14710 . 14711) (punctuation 14709 . 14710) (symbol 14693 . 14709) (punctuation 14664 . 14665) (symbol 14649 . 14664) (punctuation 14648 . 14649) (punctuation 14647 . 14648) (symbol 14644 . 14647) (TYPENAME 14635 . 14643) (punctuation 14633 . 14634) (symbol 14626 . 14633) (punctuation 14610 . 14611) (symbol 14599 . 14610) (punctuation 14598 . 14599) (punctuation 14597 . 14598) (symbol 14594 . 14597) (TYPENAME 14585 . 14593) (punctuation 14573 . 14574) (symbol 14557 . 14573) (punctuation 14545 . 14546) (punctuation 14544 . 14545) (symbol 14537 . 14544) (punctuation 14535 . 14536) (symbol 14525 . 14535) (punctuation 14523 . 14524) (symbol 14507 . 14523) (punctuation 14506 . 14507) (symbol 14486 . 14506) (punctuation 14474 . 14475) (symbol 14453 . 14474) (PUBLIC 14446 . 14452) (punctuation 14444 . 14445) (symbol 14419 . 14439) (CLASS 14413 . 14418) (punctuation 14411 . 14412) (symbol 14404 . 14411) (TYPENAME 14395 . 14403) (punctuation 14393 . 14394) (symbol 14383 . 14393) (TYPENAME 14374 . 14382) (punctuation 14372 . 14373) (symbol 14356 . 14372) (TYPENAME 14347 . 14355) (punctuation 14346 . 14347) (TEMPLATE 14337 . 14345) (punctuation 13471 . 13472) (punctuation 13469 . 13470) (punctuation 13467 . 13468) (punctuation 13461 . 13462) (punctuation 13460 . 13461) (punctuation 13436 . 13437) (punctuation 13435 . 13436) (punctuation 13402 . 13403) (punctuation 13087 . 13088) (punctuation 13085 . 13086) (punctuation 13083 . 13084) (punctuation 13077 . 13078) (punctuation 13076 . 13077) (punctuation 13052 . 13053) (punctuation 13019 . 13020) (punctuation 12798 . 12799) (semantic-list 12795 . 12798) (punctuation 12793 . 12794) (symbol 12789 . 12793) (punctuation 12788 . 12789) (punctuation 12787 . 12788) (punctuation 12786 . 12787) (symbol 12784 . 12786) (punctuation 12783 . 12784) (symbol 12767 . 12783) (punctuation 12766 . 12767) (punctuation 12765 . 12766) (symbol 12762 . 12765) (TYPENAME 12753 . 12761) (punctuation 12752 . 12753) (symbol 12737 . 12752) (punctuation 12735 . 12736) (symbol 12724 . 12734) (STRUCT 12717 . 12723) (punctuation 12715 . 12716) (symbol 12713 . 12715) (TYPENAME 12704 . 12712) (punctuation 12703 . 12704) (TEMPLATE 12694 . 12702) (punctuation 12617 . 12618) (semantic-list 12612 . 12617) (SIZEOF 12606 . 12612) (punctuation 12604 . 12605) (punctuation 12603 . 12604) (semantic-list 12583 . 12602) (SIZEOF 12577 . 12583) (punctuation 12575 . 12576) (symbol 12569 . 12574) (BOOL 12564 . 12568) (CONST 12558 . 12563) (STATIC 12551 . 12557) (punctuation 12514 . 12515) (TYPENAME 12506 . 12514) (punctuation 12505 . 12506) (TEMPLATE 12496 . 12504) (punctuation 12481 . 12482) (punctuation 12479 . 12480) (semantic-list 12465 . 12478) (punctuation 12397 . 12398) (semantic-list 12394 . 12397) (CHAR 12390 . 12394) (punctuation 12388 . 12389) (symbol 12385 . 12387) (USING 12379 . 12384) (punctuation 12375 . 12376) (semantic-list 12372 . 12375) (CHAR 12368 . 12372) (punctuation 12366 . 12367) (symbol 12362 . 12365) (USING 12356 . 12361) (punctuation 12240 . 12241) (semantic-list 11940 . 12240) (punctuation 11938 . 11939) (symbol 11927 . 11938) (punctuation 11925 . 11926) (punctuation 11924 . 11925) (punctuation 11922 . 11923) (symbol 11911 . 11922) (punctuation 11910 . 11911) (symbol 11892 . 11910) (punctuation 11891 . 11892) (punctuation 11890 . 11891) (symbol 11887 . 11890) (punctuation 11875 . 11876) (symbol 11860 . 11875) (punctuation 11859 . 11860) (punctuation 11858 . 11859) (punctuation 11857 . 11858) (symbol 11853 . 11857) (punctuation 11852 . 11853) (symbol 11837 . 11852) (punctuation 11836 . 11837) (punctuation 11835 . 11836) (symbol 11832 . 11835) (TYPENAME 11823 . 11831) (punctuation 11811 . 11812) (punctuation 11810 . 11811) (symbol 11799 . 11810) (punctuation 11798 . 11799) (symbol 11780 . 11798) (punctuation 11779 . 11780) (punctuation 11778 . 11779) (symbol 11775 . 11778) (punctuation 11763 . 11764) (symbol 11746 . 11763) (punctuation 11745 . 11746) (punctuation 11744 . 11745) (punctuation 11743 . 11744) (symbol 11739 . 11743) (punctuation 11738 . 11739) (symbol 11723 . 11738) (punctuation 11722 . 11723) (punctuation 11721 . 11722) (symbol 11718 . 11721) (TYPENAME 11709 . 11717) (punctuation 11697 . 11698) (symbol 11693 . 11697) (punctuation 11691 . 11692) (symbol 11683 . 11691) (punctuation 11671 . 11672) (symbol 11650 . 11671) (PUBLIC 11643 . 11649) (punctuation 11641 . 11642) (symbol 11616 . 11636) (CLASS 11610 . 11615) (punctuation 11608 . 11609) (symbol 11597 . 11608) (TYPENAME 11588 . 11596) (punctuation 11586 . 11587) (symbol 11582 . 11586) (TYPENAME 11573 . 11581) (punctuation 11571 . 11572) (symbol 11563 . 11571) (TYPENAME 11554 . 11562) (punctuation 11553 . 11554) (TEMPLATE 11544 . 11552) (punctuation 11141 . 11142) (punctuation 10764 . 10765) (semantic-list 10467 . 10764) (punctuation 10465 . 10466) (symbol 10454 . 10465) (punctuation 10452 . 10453) (punctuation 10451 . 10452) (punctuation 10449 . 10450) (symbol 10438 . 10449) (punctuation 10437 . 10438) (symbol 10419 . 10437) (punctuation 10418 . 10419) (punctuation 10417 . 10418) (symbol 10414 . 10417) (punctuation 10402 . 10403) (symbol 10387 . 10402) (punctuation 10386 . 10387) (punctuation 10385 . 10386) (punctuation 10384 . 10385) (symbol 10380 . 10384) (punctuation 10379 . 10380) (symbol 10364 . 10379) (punctuation 10363 . 10364) (punctuation 10362 . 10363) (symbol 10359 . 10362) (TYPENAME 10350 . 10358) (punctuation 10338 . 10339) (punctuation 10337 . 10338) (symbol 10326 . 10337) (punctuation 10325 . 10326) (symbol 10307 . 10325) (punctuation 10306 . 10307) (punctuation 10305 . 10306) (symbol 10302 . 10305) (punctuation 10290 . 10291) (symbol 10273 . 10290) (punctuation 10272 . 10273) (punctuation 10271 . 10272) (punctuation 10270 . 10271) (symbol 10266 . 10270) (punctuation 10265 . 10266) (symbol 10250 . 10265) (punctuation 10249 . 10250) (punctuation 10248 . 10249) (symbol 10245 . 10248) (TYPENAME 10236 . 10244) (punctuation 10224 . 10225) (symbol 10220 . 10224) (punctuation 10218 . 10219) (punctuation 10217 . 10218) (symbol 10211 . 10217) (punctuation 10209 . 10210) (symbol 10205 . 10209) (punctuation 10204 . 10205) (symbol 10189 . 10204) (punctuation 10177 . 10178) (symbol 10156 . 10177) (PUBLIC 10149 . 10155) (punctuation 10147 . 10148) (symbol 10127 . 10142) (CLASS 10121 . 10126) (punctuation 10119 . 10120) (semantic-list 10072 . 10119) (symbol 10064 . 10072) (semantic-list 10115 . 10117) (punctuation 10096 . 10097) (punctuation 10048 . 10049) (symbol 10036 . 10047) (TYPENAME 10027 . 10035) (punctuation 10015 . 10016) (symbol 10009 . 10015) (TYPENAME 10000 . 10008) (punctuation 9998 . 9999) (symbol 9994 . 9998) (TYPENAME 9985 . 9993) (punctuation 9984 . 9985) (TEMPLATE 9975 . 9983) (punctuation 9683 . 9684) (punctuation 9464 . 9465) (symbol 9205 . 9214) (punctuation 9203 . 9204) (symbol 9202 . 9203) (TYPENAME 9193 . 9201) (punctuation 9192 . 9193) (TEMPLATE 9183 . 9191) (semantic-list 8972 . 9032) (semantic-list 8931 . 8949) (symbol 8923 . 8931) (punctuation 8944 . 8945) (punctuation 8935 . 8936) (VOID 8918 . 8922) (punctuation 8944 . 8945) (punctuation 8935 . 8936) (punctuation 8916 . 8917) (symbol 8915 . 8916) (TYPENAME 8906 . 8914) (punctuation 8905 . 8906) (TEMPLATE 8896 . 8904) (punctuation 8944 . 8945) (punctuation 8935 . 8936) (punctuation 8811 . 8812) (semantic-list 8783 . 8789) (symbol 8775 . 8783) (punctuation 8773 . 8774) (symbol 8762 . 8773) (TYPENAME 8753 . 8761) (punctuation 8752 . 8753) (TEMPLATE 8743 . 8751) (punctuation 8656 . 8657) (semantic-list 8626 . 8632) (symbol 8618 . 8626) (punctuation 8616 . 8617) (symbol 8605 . 8616) (TYPENAME 8596 . 8604) (punctuation 8595 . 8596) (TEMPLATE 8586 . 8594) (semantic-list 8397 . 8496) (semantic-list 8361 . 8379) (symbol 8353 . 8361) (punctuation 8374 . 8375) (punctuation 8365 . 8366) (VOID 8348 . 8352) (punctuation 8374 . 8375) (punctuation 8365 . 8366) (punctuation 8346 . 8347) (symbol 8345 . 8346) (TYPENAME 8336 . 8344) (punctuation 8335 . 8336) (TEMPLATE 8326 . 8334) (punctuation 8374 . 8375) (punctuation 8365 . 8366) (punctuation 8239 . 8240) (semantic-list 8211 . 8217) (symbol 8203 . 8211) (punctuation 8201 . 8202) (symbol 8190 . 8201) (TYPENAME 8181 . 8189) (punctuation 8180 . 8181) (TEMPLATE 8171 . 8179) (punctuation 8083 . 8084) (semantic-list 8053 . 8059) (symbol 8045 . 8053) (punctuation 8043 . 8044) (symbol 8032 . 8043) (TYPENAME 8023 . 8031) (punctuation 8022 . 8023) (TEMPLATE 8013 . 8021) (punctuation 7767 . 7768) (punctuation 7766 . 7767) (punctuation 7765 . 7766) (punctuation 7764 . 7765) (punctuation 7763 . 7764) (punctuation 7762 . 7763) (symbol 7760 . 7762) (punctuation 7759 . 7760) (symbol 7754 . 7759) (punctuation 7753 . 7754) (punctuation 7752 . 7753) (symbol 7749 . 7752) (punctuation 7747 . 7748) (symbol 7746 . 7747) (punctuation 7745 . 7746) (symbol 7730 . 7745) (punctuation 7729 . 7730) (punctuation 7728 . 7729) (symbol 7725 . 7728) (punctuation 7723 . 7724) (symbol 7711 . 7722) (USING 7705 . 7710) (punctuation 7703 . 7704) (symbol 7701 . 7703) (punctuation 7699 . 7700) (punctuation 7698 . 7699) (punctuation 7697 . 7698) (TYPENAME 7689 . 7697) (punctuation 7687 . 7688) (symbol 7686 . 7687) (symbol 7679 . 7685) (punctuation 7678 . 7679) (TEMPLATE 7669 . 7677) (punctuation 7513 . 7514) (punctuation 7511 . 7512) (punctuation 7510 . 7511) (punctuation 7509 . 7510) (punctuation 7508 . 7509) (symbol 7506 . 7508) (punctuation 7504 . 7505) (symbol 7503 . 7504) (punctuation 7501 . 7502) (symbol 7500 . 7501) (punctuation 7499 . 7500) (symbol 7483 . 7499) (STRUCT 7476 . 7482) (punctuation 7474 . 7475) (symbol 7472 . 7474) (punctuation 7470 . 7471) (punctuation 7469 . 7470) (punctuation 7468 . 7469) (TYPENAME 7460 . 7468) (punctuation 7458 . 7459) (symbol 7457 . 7458) (TYPENAME 7448 . 7456) (punctuation 7447 . 7448) (TEMPLATE 7438 . 7446) (punctuation 7436 . 7437) (semantic-list 7434 . 7436) (punctuation 7432 . 7433) (symbol 7427 . 7432) (punctuation 7426 . 7427) (punctuation 7425 . 7426) (punctuation 7424 . 7425) (punctuation 7423 . 7424) (punctuation 7422 . 7423) (punctuation 7421 . 7422) (symbol 7419 . 7421) (punctuation 7417 . 7418) (symbol 7416 . 7417) (punctuation 7415 . 7416) (symbol 7399 . 7415) (punctuation 7397 . 7398) (number 7395 . 7396) (punctuation 7393 . 7394) (symbol 7387 . 7393) (punctuation 7386 . 7387) (symbol 7369 . 7386) (punctuation 7368 . 7369) (punctuation 7367 . 7368) (symbol 7364 . 7367) (punctuation 7362 . 7363) (punctuation 7356 . 7357) (punctuation 7355 . 7356) (punctuation 7354 . 7355) (punctuation 7353 . 7354) (symbol 7351 . 7353) (punctuation 7349 . 7350) (symbol 7348 . 7349) (punctuation 7346 . 7347) (symbol 7345 . 7346) (punctuation 7344 . 7345) (symbol 7328 . 7344) (STRUCT 7321 . 7327) (punctuation 7319 . 7320) (symbol 7317 . 7319) (punctuation 7315 . 7316) (punctuation 7314 . 7315) (punctuation 7313 . 7314) (TYPENAME 7305 . 7313) (punctuation 7303 . 7304) (symbol 7302 . 7303) (TYPENAME 7293 . 7301) (punctuation 7291 . 7292) (symbol 7290 . 7291) (TYPENAME 7281 . 7289) (punctuation 7280 . 7281) (TEMPLATE 7271 . 7279) (punctuation 7244 . 7245) (symbol 7242 . 7244) (punctuation 7240 . 7241) (punctuation 7239 . 7240) (punctuation 7238 . 7239) (TYPENAME 7230 . 7238) (punctuation 7228 . 7229) (symbol 7227 . 7228) (TYPENAME 7218 . 7226) (punctuation 7217 . 7218) (TEMPLATE 7208 . 7216) (punctuation 6726 . 6727) (semantic-list 6724 . 6726) (punctuation 6722 . 6723) (symbol 6717 . 6722) (punctuation 6716 . 6717) (punctuation 6715 . 6716) (punctuation 6714 . 6715) (punctuation 6713 . 6714) (punctuation 6712 . 6713) (punctuation 6711 . 6712) (symbol 6709 . 6711) (punctuation 6708 . 6709) (symbol 6692 . 6708) (punctuation 6691 . 6692) (punctuation 6690 . 6691) (symbol 6684 . 6690) (punctuation 6682 . 6683) (BOOL 6678 . 6682) (punctuation 6677 . 6678) (symbol 6660 . 6677) (punctuation 6659 . 6660) (punctuation 6658 . 6659) (symbol 6655 . 6658) (punctuation 6653 . 6654) (symbol 6632 . 6648) (STRUCT 6625 . 6631) (punctuation 6623 . 6624) (symbol 6621 . 6623) (punctuation 6619 . 6620) (punctuation 6618 . 6619) (punctuation 6617 . 6618) (TYPENAME 6609 . 6617) (punctuation 6608 . 6609) (TEMPLATE 6599 . 6607) (punctuation 6513 . 6514) (symbol 6511 . 6513) (punctuation 6509 . 6510) (punctuation 6508 . 6509) (punctuation 6507 . 6508) (TYPENAME 6499 . 6507) (punctuation 6498 . 6499) (TEMPLATE 6489 . 6497) (punctuation 6104 . 6105) (semantic-list 6102 . 6104) (punctuation 6100 . 6101) (symbol 6095 . 6100) (punctuation 6094 . 6095) (punctuation 6093 . 6094) (punctuation 6092 . 6093) (punctuation 6091 . 6092) (punctuation 6090 . 6091) (punctuation 6089 . 6090) (symbol 6087 . 6089) (punctuation 6086 . 6087) (symbol 6070 . 6086) (punctuation 6029 . 6030) (punctuation 6028 . 6029) (symbol 6022 . 6027) (punctuation 6021 . 6022) (punctuation 6020 . 6021) (punctuation 6019 . 6020) (punctuation 6018 . 6019) (punctuation 6017 . 6018) (punctuation 6016 . 6017) (symbol 6014 . 6016) (punctuation 6012 . 6013) (symbol 6011 . 6012) (punctuation 6010 . 6011) (symbol 6001 . 6010) (punctuation 6000 . 6001) (punctuation 5998 . 5999) (BOOL 5994 . 5998) (punctuation 5993 . 5994) (symbol 5976 . 5993) (punctuation 5975 . 5976) (punctuation 5974 . 5975) (symbol 5971 . 5974) (punctuation 5969 . 5970) (symbol 5948 . 5964) (STRUCT 5941 . 5947) (punctuation 5939 . 5940) (symbol 5937 . 5939) (punctuation 5935 . 5936) (punctuation 5934 . 5935) (punctuation 5933 . 5934) (TYPENAME 5925 . 5933) (punctuation 5923 . 5924) (symbol 5922 . 5923) (TYPENAME 5913 . 5921) (punctuation 5912 . 5913) (TEMPLATE 5903 . 5911) (punctuation 5876 . 5877) (symbol 5874 . 5876) (punctuation 5872 . 5873) (punctuation 5871 . 5872) (punctuation 5870 . 5871) (TYPENAME 5862 . 5870) (punctuation 5860 . 5861) (symbol 5859 . 5860) (TYPENAME 5850 . 5858) (punctuation 5849 . 5850) (TEMPLATE 5840 . 5848) (punctuation 5818 . 5819) (punctuation 5817 . 5818) (punctuation 5816 . 5817) (punctuation 5815 . 5816) (punctuation 5814 . 5815) (punctuation 5813 . 5814) (symbol 5811 . 5813) (punctuation 5809 . 5810) (symbol 5808 . 5809) (punctuation 5807 . 5808) (symbol 5797 . 5807) (punctuation 5796 . 5797) (punctuation 5795 . 5796) (symbol 5792 . 5795) (punctuation 5791 . 5792) (symbol 5780 . 5791) (punctuation 5778 . 5779) (symbol 5766 . 5777) (USING 5760 . 5765) (punctuation 5758 . 5759) (symbol 5756 . 5758) (punctuation 5754 . 5755) (punctuation 5753 . 5754) (punctuation 5752 . 5753) (TYPENAME 5744 . 5752) (punctuation 5742 . 5743) (symbol 5741 . 5742) (TYPENAME 5732 . 5740) (punctuation 5731 . 5732) (TEMPLATE 5722 . 5730) (punctuation 5607 . 5608) (punctuation 5606 . 5607) (punctuation 5605 . 5606) (punctuation 5604 . 5605) (punctuation 5603 . 5604) (punctuation 5602 . 5603) (symbol 5600 . 5602) (punctuation 5598 . 5599) (symbol 5597 . 5598) (punctuation 5596 . 5597) (symbol 5589 . 5596) (punctuation 5588 . 5589) (punctuation 5587 . 5588) (symbol 5584 . 5587) (punctuation 5583 . 5584) (symbol 5572 . 5583) (punctuation 5570 . 5571) (symbol 5560 . 5569) (USING 5554 . 5559) (punctuation 5552 . 5553) (symbol 5550 . 5552) (punctuation 5548 . 5549) (punctuation 5547 . 5548) (punctuation 5546 . 5547) (TYPENAME 5538 . 5546) (punctuation 5536 . 5537) (symbol 5535 . 5536) (TYPENAME 5526 . 5534) (punctuation 5525 . 5526) (TEMPLATE 5516 . 5524) (punctuation 5296 . 5297) (symbol 5292 . 5296) (punctuation 5290 . 5291) (punctuation 5289 . 5290) (punctuation 5288 . 5289) (TYPENAME 5280 . 5288) (punctuation 5278 . 5279) (symbol 5268 . 5278) (TYPENAME 5259 . 5267) (punctuation 5258 . 5259) (TEMPLATE 5249 . 5257) (punctuation 5186 . 5187) (punctuation 5185 . 5186) (punctuation 5184 . 5185) (punctuation 5183 . 5184) (punctuation 5182 . 5183) (punctuation 5181 . 5182) (punctuation 5180 . 5181) (symbol 5176 . 5180) (punctuation 5175 . 5176) (symbol 5170 . 5175) (punctuation 5169 . 5170) (punctuation 5168 . 5169) (symbol 5165 . 5168) (punctuation 5163 . 5164) (symbol 5162 . 5163) (punctuation 5161 . 5162) (symbol 5148 . 5161) (punctuation 5147 . 5148) (punctuation 5146 . 5147) (symbol 5143 . 5146) (TYPENAME 5134 . 5142) (punctuation 5132 . 5133) (symbol 5126 . 5131) (USING 5120 . 5125) (punctuation 5116 . 5117) (symbol 5115 . 5116) (symbol 5108 . 5114) (punctuation 5107 . 5108) (TEMPLATE 5098 . 5106) (USING 5018 . 5023) (semantic-list 4965 . 4971) (punctuation 4964 . 4965) (punctuation 4963 . 4964) (punctuation 4962 . 4963) (SIZEOF 4956 . 4962) (punctuation 4954 . 4955) (semantic-list 4965 . 4971) (punctuation 4964 . 4965) (punctuation 4963 . 4964) (punctuation 4962 . 4963) (SIZEOF 4956 . 4962) (punctuation 4954 . 4955) (punctuation 4829 . 4830) (symbol 4825 . 4829) (punctuation 4823 . 4824) (punctuation 4822 . 4823) (punctuation 4821 . 4822) (TYPENAME 4813 . 4821) (punctuation 4811 . 4812) (symbol 4801 . 4811) (TYPENAME 4792 . 4800) (punctuation 4791 . 4792) (TEMPLATE 4782 . 4790) (punctuation 4737 . 4738) (semantic-list 4735 . 4737) (punctuation 4733 . 4734) (CONST 4728 . 4733) (punctuation 4716 . 4717) (punctuation 4715 . 4716) (punctuation 4714 . 4715) (punctuation 4692 . 4693) (symbol 4677 . 4692) (punctuation 4675 . 4676) (punctuation 4669 . 4670) (symbol 4664 . 4669) (punctuation 4662 . 4663) (punctuation 4651 . 4652) (punctuation 4650 . 4651) (punctuation 4649 . 4650) (punctuation 4627 . 4628) (symbol 4612 . 4627) (STRUCT 4605 . 4611) (punctuation 4603 . 4604) (symbol 4599 . 4603) (punctuation 4597 . 4598) (punctuation 4596 . 4597) (punctuation 4595 . 4596) (TYPENAME 4587 . 4595) (punctuation 4585 . 4586) (symbol 4575 . 4585) (TYPENAME 4566 . 4574) (punctuation 4564 . 4565) (symbol 4555 . 4564) (TYPENAME 4546 . 4554) (punctuation 4545 . 4546) (TEMPLATE 4536 . 4544) (punctuation 4495 . 4496) (semantic-list 4179 . 4495) (punctuation 4177 . 4178) (symbol 4172 . 4177) (punctuation 4170 . 4171) (CONST 4165 . 4170) (punctuation 4153 . 4154) (punctuation 4152 . 4153) (punctuation 4151 . 4152) (punctuation 4129 . 4130) (symbol 4114 . 4129) (STRUCT 4107 . 4113) (punctuation 4105 . 4106) (symbol 4101 . 4105) (punctuation 4099 . 4100) (punctuation 4098 . 4099) (punctuation 4097 . 4098) (TYPENAME 4089 . 4097) (punctuation 4087 . 4088) (symbol 4077 . 4087) (TYPENAME 4068 . 4076) (punctuation 4066 . 4067) (symbol 4057 . 4066) (TYPENAME 4048 . 4056) (punctuation 4047 . 4048) (TEMPLATE 4038 . 4046) (punctuation 3996 . 3997) (semantic-list 3994 . 3996) (punctuation 3992 . 3993) (semantic-list 3976 . 3992) (symbol 3968 . 3976) (semantic-list 3989 . 3991) (OPERATOR 3981 . 3989) (punctuation 3980 . 3981) (punctuation 3979 . 3980) (punctuation 3977 . 3978) (punctuation 3967 . 3968) (symbol 3952 . 3967) (PUBLIC 3945 . 3951) (punctuation 3943 . 3944) (symbol 3927 . 3942) (STRUCT 3920 . 3926) (punctuation 3918 . 3919) (symbol 3913 . 3918) (punctuation 3912 . 3913) (punctuation 3911 . 3912) (punctuation 3910 . 3911) (symbol 3909 . 3910) (punctuation 3908 . 3909) (symbol 3900 . 3908) (punctuation 3899 . 3900) (punctuation 3898 . 3899) (symbol 3895 . 3898) (punctuation 3893 . 3894) (symbol 3885 . 3892) (BOOL 3880 . 3884) (punctuation 3878 . 3879) (symbol 3877 . 3878) (TYPENAME 3868 . 3876) (punctuation 3867 . 3868) (TEMPLATE 3858 . 3866) (punctuation 3596 . 3597) (punctuation 3595 . 3596) (punctuation 3594 . 3595) (punctuation 3593 . 3594) (punctuation 3592 . 3593) (symbol 3588 . 3592) (punctuation 3586 . 3587) (symbol 3578 . 3586) (punctuation 3576 . 3577) (symbol 3564 . 3576) (punctuation 3563 . 3564) (punctuation 3562 . 3563) (symbol 3556 . 3562) (punctuation 3555 . 3556) (symbol 3544 . 3555) (punctuation 3542 . 3543) (symbol 3529 . 3541) (USING 3523 . 3528) (punctuation 3521 . 3522) (symbol 3517 . 3521) (punctuation 3515 . 3516) (punctuation 3514 . 3515) (punctuation 3513 . 3514) (TYPENAME 3505 . 3513) (punctuation 3503 . 3504) (symbol 3495 . 3503) (TYPENAME 3486 . 3494) (punctuation 3485 . 3486) (TEMPLATE 3476 . 3484) (USING 3288 . 3293) (punctuation 3286 . 3287) (symbol 3282 . 3286) (punctuation 3280 . 3281) (punctuation 3279 . 3280) (punctuation 3278 . 3279) (TYPENAME 3270 . 3278) (punctuation 3268 . 3269) (symbol 3260 . 3268) (TYPENAME 3251 . 3259) (punctuation 3250 . 3251) (TEMPLATE 3241 . 3249) (punctuation 3211 . 3212) (punctuation 3210 . 3211) (punctuation 3209 . 3210) (punctuation 3208 . 3209) (punctuation 3207 . 3208) (punctuation 3206 . 3207) (symbol 3202 . 3206) (punctuation 3200 . 3201) (symbol 3198 . 3200) (punctuation 3196 . 3197) (VOID 3192 . 3196) (punctuation 3191 . 3192) (symbol 3183 . 3191) (punctuation 3182 . 3183) (punctuation 3181 . 3182) (symbol 3175 . 3181) (TYPENAME 3166 . 3174) (punctuation 3164 . 3165) (symbol 3152 . 3163) (USING 3146 . 3151) (punctuation 3144 . 3145) (symbol 3140 . 3144) (punctuation 3138 . 3139) (punctuation 3137 . 3138) (punctuation 3136 . 3137) (CLASS 3131 . 3136) (punctuation 3129 . 3130) (symbol 3127 . 3129) (CLASS 3121 . 3126) (punctuation 3119 . 3120) (punctuation 3118 . 3119) (punctuation 3117 . 3118) (punctuation 3116 . 3117) (CLASS 3111 . 3116) (punctuation 3110 . 3111) (TEMPLATE 3101 . 3109) (punctuation 3100 . 3101) (TEMPLATE 3091 . 3099) (punctuation 2640 . 2641) (semantic-list 2603 . 2640) (punctuation 2601 . 2602) (punctuation 2600 . 2601) (punctuation 2599 . 2600) (punctuation 2598 . 2599) (symbol 2594 . 2598) (punctuation 2592 . 2593) (symbol 2590 . 2592) (punctuation 2588 . 2589) (punctuation 2587 . 2588) (punctuation 2586 . 2587) (punctuation 2585 . 2586) (punctuation 2584 . 2585) (punctuation 2583 . 2584) (symbol 2579 . 2583) (punctuation 2578 . 2579) (symbol 2576 . 2578) (punctuation 2575 . 2576) (symbol 2569 . 2575) (punctuation 2568 . 2569) (symbol 2560 . 2568) (STRUCT 2553 . 2559) (punctuation 2551 . 2552) (symbol 2547 . 2551) (punctuation 2545 . 2546) (punctuation 2544 . 2545) (punctuation 2543 . 2544) (CLASS 2538 . 2543) (punctuation 2536 . 2537) (symbol 2534 . 2536) (CLASS 2528 . 2533) (punctuation 2526 . 2527) (punctuation 2525 . 2526) (punctuation 2524 . 2525) (punctuation 2523 . 2524) (CLASS 2518 . 2523) (punctuation 2517 . 2518) (TEMPLATE 2508 . 2516) (punctuation 2507 . 2508) (TEMPLATE 2498 . 2506) (punctuation 2476 . 2477) (symbol 2468 . 2475) (USING 2462 . 2467) (punctuation 2440 . 2441) (symbol 2436 . 2440) (punctuation 2434 . 2435) (punctuation 2433 . 2434) (punctuation 2432 . 2433) (CLASS 2427 . 2432) (punctuation 2425 . 2426) (symbol 2423 . 2425) (CLASS 2417 . 2422) (punctuation 2415 . 2416) (punctuation 2414 . 2415) (punctuation 2413 . 2414) (punctuation 2412 . 2413) (CLASS 2407 . 2412) (punctuation 2406 . 2407) (TEMPLATE 2397 . 2405) (punctuation 2395 . 2396) (CLASS 2390 . 2395) (punctuation 2389 . 2390) (TEMPLATE 2380 . 2388) (punctuation 2378 . 2379) (VOID 2374 . 2378) (punctuation 2372 . 2373) (symbol 2365 . 2371) (USING 2359 . 2364) (punctuation 2357 . 2358) (punctuation 2356 . 2357) (punctuation 2355 . 2356) (punctuation 2354 . 2355) (TYPENAME 2346 . 2354) (punctuation 2345 . 2346) (TEMPLATE 2336 . 2344) (punctuation 2306 . 2307) (punctuation 2305 . 2306) (punctuation 2304 . 2305) (symbol 2300 . 2304) (punctuation 2299 . 2300) (punctuation 2298 . 2299) (punctuation 2297 . 2298) (symbol 2296 . 2297) (punctuation 2295 . 2296) (symbol 2286 . 2295) (punctuation 2285 . 2286) (punctuation 2284 . 2285) (symbol 2281 . 2284) (TYPENAME 2272 . 2280) (punctuation 2264 . 2265) (symbol 2244 . 2264) (punctuation 2243 . 2244) (punctuation 2242 . 2243) (symbol 2239 . 2242) (TYPENAME 2230 . 2238) (punctuation 2228 . 2229) (symbol 2223 . 2227) (USING 2217 . 2222) (punctuation 2158 . 2159) (punctuation 2157 . 2158) (punctuation 2156 . 2157) (symbol 2152 . 2156) (punctuation 2151 . 2152) (punctuation 2150 . 2151) (punctuation 2149 . 2150) (symbol 2148 . 2149) (punctuation 2147 . 2148) (symbol 2138 . 2147) (punctuation 2137 . 2138) (punctuation 2136 . 2137) (symbol 2133 . 2136) (TYPENAME 2124 . 2132) (punctuation 2123 . 2124) (symbol 2112 . 2123) (punctuation 2111 . 2112) (punctuation 2110 . 2111) (symbol 2107 . 2110) (TYPENAME 2098 . 2106) (punctuation 2090 . 2091) (symbol 2085 . 2089) (USING 2079 . 2084) (punctuation 1793 . 1794) (punctuation 1792 . 1793) (punctuation 1791 . 1792) (semantic-list 1747 . 1791) (symbol 1739 . 1747) (semantic-list 1764 . 1790) (punctuation 1753 . 1754) (punctuation 1738 . 1739) (symbol 1722 . 1738) (punctuation 1721 . 1722) (punctuation 1720 . 1721) (symbol 1717 . 1720) (TYPENAME 1708 . 1716) (punctuation 1706 . 1707) (symbol 1693 . 1705) (USING 1687 . 1692) (punctuation 1685 . 1686) (symbol 1679 . 1685) (TYPENAME 1670 . 1678) (punctuation 1669 . 1670) (TEMPLATE 1660 . 1668) (USING 1591 . 1596) (punctuation 1589 . 1590) (symbol 1583 . 1589) (TYPENAME 1574 . 1582) (punctuation 1573 . 1574) (TEMPLATE 1564 . 1572))
      :lexical-table 
        '(("LLVM_ADT_STLEXTRAS_H")
          )
)
    (semanticdb-table "semanticdb-table-155561f6da90"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_SMALLVECTOR_H" variable (:constant-flag t) nil [554 576])
            ("llvm/Support/Compiler.h" include nil nil [578 612])
            ("llvm/Support/type_traits.h" include nil nil [613 650])
            ("algorithm" include (:system-flag t) nil [651 671])
            ("cassert" include (:system-flag t) nil [672 690])
            ("cstddef" include (:system-flag t) nil [691 709])
            ("cstdlib" include (:system-flag t) nil [710 728])
            ("cstring" include (:system-flag t) nil [729 747])
            ("functional" include (:system-flag t) nil [748 769])
            ("initializer_list" include (:system-flag t) nil [770 797])
            ("iterator" include (:system-flag t) nil [798 817])
            ("limits" include (:system-flag t) nil [818 835])
            ("memory" include (:system-flag t) nil [836 853])
            ("new" include (:system-flag t) nil [854 868])
            ("type_traits" include (:system-flag t) nil [869 891])
            ("utility" include (:system-flag t) nil [892 910])
            ("llvm" type
               (:members 
                  ( ("iterator_range" type
                       (:template 
                          ( ("IteratorT" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [930 981])
                    ("SmallVectorBase" type
                       (:template 
                          ( ("Size_T" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("protected" label nil (reparse-symbol classsubparts) [1511 1521])
                            ("BeginX" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol classsubparts) [1524 1537])
                            ("Size" variable
                               (:default-value "0"
                                :type ("Size_T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1540 1566])
                            ("Capacity" variable (:type ("Size_T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1540 1566])
                            ("SizeTypeMax" function (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1631 1704])
                            ("SmallVectorBase" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("FirstEl" variable
                                       (:pointer 1
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [1754 1768])
                                    ("TotalCapacity" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1769 1790]))                                  
                                :type ("SmallVectorBase" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1738 1842])
                            ("mallocForGrow" function
                               (:prototype-flag t
                                :pointer 1
                                :arguments 
                                  ( ("MinSize" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2044 2059])
                                    ("TSize" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2060 2073])
                                    ("NewCapacity" variable
                                       (:reference 1
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2074 2094]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [2024 2095])
                            ("grow_pod" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("FirstEl" variable
                                       (:pointer 1
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [2337 2351])
                                    ("MinSize" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2352 2367])
                                    ("TSize" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2368 2381]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [2323 2382])
                            ("public" label nil (reparse-symbol classsubparts) [2384 2391])
                            ("size" function
                               (:methodconst-flag t
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2394 2430])
                            ("capacity" function
                               (:methodconst-flag t
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2433 2477])
                            ("empty" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [2496 2532])
                            ("protected" label nil (reparse-symbol classsubparts) [2534 2544])
                            ("set_size" function
                               (:arguments 
                                  ( ("N" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2731 2740]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [2717 2789]))                          )
                        (reparse-symbol namespacesubparts) [1463 2792])
                    ("type" variable (:type "int") (reparse-symbol namespacesubparts) [2960 2965])
                    ("SmallVectorAlignmentAndSize" type
                       (:members 
                          ( ("Base" variable (:type "char") (reparse-symbol classsubparts) [3139 3205])
                            ("FirstEl" variable
                               (:dereference 1
                                :type "char")
                                (reparse-symbol classsubparts) [3219 3243]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [3051 3246])
                    ("SmallVectorTemplateCommon" type
                       (:superclasses 
                          ( ("SmallVectorBase" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("SmallVectorBase" variable (:type "int") (reparse-symbol classsubparts) [3604 3644])
                            ("getFirstEl" function
                               (:methodconst-flag t
                                :pointer 1
                                :type "void")
                                (reparse-symbol classsubparts) [3876 4076])
                            ("protected" label nil (reparse-symbol classsubparts) [4158 4168])
                            ("SmallVectorTemplateCommon" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4197 4209]))                                  
                                :type ("SmallVectorTemplateCommon" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4171 4239])
                            ("grow_pod" function
                               (:arguments 
                                  ( ("MinSize" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4257 4272])
                                    ("TSize" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4273 4286]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [4243 4342])
                            ("isSmall" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [4446 4507])
                            ("resetToSmall" function (:type "void") (reparse-symbol classsubparts) [4560 4699])
                            ("isReferenceToRange" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [4795 4809])
                                    ("First" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [4810 4828])
                                    ("Last" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [4829 4846]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [4771 4971])
                            ("isReferenceToStorage" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [5065 5079]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [5039 5153])
                            ("isRangeInStorage" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("First" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [5283 5301])
                                    ("Last" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [5302 5319]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [5261 5504])
                            ("isSafeToReferenceAfterResize" function
                               (:arguments 
                                  ( ("Elt" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [5632 5648])
                                    ("NewSize" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5649 5664]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [5598 5977])
                            ("assertSafeToReferenceAfterResize" function
                               (:arguments 
                                  ( ("Elt" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [6098 6114])
                                    ("NewSize" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6115 6130]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [6060 6307])
                            ("assertSafeToAdd" function
                               (:arguments 
                                  ( ("Elt" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [6425 6441])
                                    ("N" variable
                                       (:default-value "1"
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6442 6454]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [6404 6528])
                            ("assertSafeToReferenceAfterClear" function
                               (:arguments 
                                  ( ("From" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6644 6658])
                                    ("To" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6659 6671]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [6607 6819])
                            ("assertSafeToReferenceAfterClear" function
                               (:arguments 
                                  ( ("" variable (:type ("ItTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7005 7010])
                                    ("" variable (:type ("ItTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7011 7016]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [6968 7019])
                            ("assertSafeToAddRange" function
                               (:arguments 
                                  ( ("From" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7123 7137])
                                    ("To" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7138 7150]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [7097 7280])
                            ("assertSafeToAddRange" function
                               (:arguments 
                                  ( ("" variable (:type ("ItTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7455 7460])
                                    ("" variable (:type ("ItTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7461 7466]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [7429 7469])
                            ("reserveForParamAndGetAddressImpl" function
                               (:template 
                                  ( ("U" type (:type "class") nil nil))                                  
                                :type ("T" type (:type "class") nil nil)
                                :arguments 
                                  ( ("This" variable
                                       (:pointer 1
                                        :type ("U" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7678 7686])
                                    ("Elt" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7687 7700])
                                    ("N" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7752 7761]))                                  
                                :constant-flag t
                                :typemodifiers ("static")
                                :pointer 1)
                                (reparse-symbol classsubparts) [7608 8202])
                            ("public" label nil (reparse-symbol classsubparts) [8204 8211])
                            ("size_type" variable
                               (:default-value "size_t"
                                :type "int")
                                (reparse-symbol classsubparts) [8220 8239])
                            ("difference_type" variable
                               (:default-value "ptrdiff_t"
                                :type "int")
                                (reparse-symbol classsubparts) [8248 8276])
                            ("value_type" variable
                               (:default-value "T"
                                :type "int")
                                (reparse-symbol classsubparts) [8285 8300])
                            ("std::reverse_iterator" variable (:type "int") (reparse-symbol classsubparts) [8395 8433])
                            ("std::reverse_iterator" variable (:type "int") (reparse-symbol classsubparts) [8461 8493])
                            ("Base::capacity" variable (:type "int") (reparse-symbol classsubparts) [8624 8639])
                            ("Base::empty" variable (:type "int") (reparse-symbol classsubparts) [8648 8660])
                            ("Base::size" variable (:type "int") (reparse-symbol classsubparts) [8669 8680])
                            ("begin" function (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8724 8775])
                            ("begin" function
                               (:methodconst-flag t
                                :type ("const_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8778 8847])
                            ("end" function (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8850 8893])
                            ("end" function
                               (:methodconst-flag t
                                :type ("const_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8896 8951])
                            ("rbegin" function (:type ("reverse_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8995 9067])
                            ("rbegin" function
                               (:methodconst-flag t
                                :type ("const_reverse_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9070 9148])
                            ("rend" function (:type ("reverse_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9151 9225])
                            ("rend" function
                               (:methodconst-flag t
                                :type ("const_reverse_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9228 9306])
                            ("size_in_bytes" function
                               (:methodconst-flag t
                                :type ("size_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9310 9372])
                            ("max_size" function
                               (:methodconst-flag t
                                :type ("size_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9375 9476])
                            ("capacity_in_bytes" function
                               (:methodconst-flag t
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9480 9547])
                            ("data" function (:type ("pointer" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9615 9658])
                            ("data" function
                               (:methodconst-flag t
                                :type ("const_pointer" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9725 9786])
                            ("[]" function
                               (:operator-flag t
                                :arguments 
                                  ( ("idx" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9811 9825]))                                  
                                :type ("reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9790 9882])
                            ("[]" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("idx" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9912 9926]))                                  
                                :type ("const_reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9885 9989])
                            ("front" function (:type ("reference" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9993 10061])
                            ("front" function
                               (:methodconst-flag t
                                :type ("const_reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10064 10144])
                            ("back" function (:type ("reference" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10148 10214])
                            ("back" function
                               (:methodconst-flag t
                                :type ("const_reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10217 10295]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [3502 10298])
                    ("SmallVectorTemplateBase" type
                       (:superclasses 
                          ( ("SmallVectorTemplateCommon" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("SmallVectorTemplateCommon" friend nil (reparse-symbol classsubparts) [11092 11130])
                            ("protected" label nil (reparse-symbol classsubparts) [11136 11146])
                            ("TakesParamByValue" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol classsubparts) [11166 11197])
                            ("SmallVectorTemplateBase" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11258 11270]))                                  
                                :type ("SmallVectorTemplateBase" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11234 11310])
                            ("destroy_range" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11340 11345])
                                    ("E" variable
                                       (:pointer 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11346 11351]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [11314 11410])
                            ("uninitialized_move" function
                               (:template 
                                  ( ("It1" type (:type "class") nil nil)
                                    ("It2" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("I" variable (:type ("It1" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11603 11609])
                                    ("E" variable (:type ("It1" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11610 11616])
                                    ("Dest" variable (:type ("It2" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11617 11626]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [11533 11751])
                            ("uninitialized_copy" function
                               (:template 
                                  ( ("It1" type (:type "class") nil nil)
                                    ("It2" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("I" variable (:type ("It1" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11944 11950])
                                    ("E" variable (:type ("It1" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11951 11957])
                                    ("Dest" variable (:type ("It2" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11958 11967]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [11874 12014])
                            ("grow" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("MinSize" variable
                                       (:default-value "0"
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12239 12257]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [12229 12259])
                            ("mallocForGrow" function
                               (:pointer 1
                                :arguments 
                                  ( ("MinSize" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12424 12439])
                                    ("NewCapacity" variable
                                       (:reference 1
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12440 12460]))                                  
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12407 12606])
                            ("moveElementsForGrow" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("NewElts" variable
                                       (:pointer 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12742 12753]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [12717 12754])
                            ("takeAllocationForGrow" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("NewElts" variable
                                       (:pointer 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12853 12864])
                                    ("NewCapacity" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12865 12884]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [12826 12885])
                            ("reserveForParamAndGetAddress" function
                               (:pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Elt" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13062 13075])
                                    ("N" variable
                                       (:default-value "1"
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13076 13088]))                                  
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13024 13160])
                            ("reserveForParamAndGetAddress" function
                               (:pointer 1
                                :arguments 
                                  ( ("Elt" variable
                                       (:reference 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13331 13338])
                                    ("N" variable
                                       (:default-value "1"
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13339 13351]))                                  
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13299 13449])
                            ("forward_value_param" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13484 13488])
                                    ("" variable (:type ("V" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13488 13490]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [13464 13515])
                            ("forward_value_param" function
                               (:typemodifiers ("static")
                                :constant-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13554 13565]))                                  
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13518 13579])
                            ("growAndAssign" function
                               (:arguments 
                                  ( ("NumElts" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13602 13617])
                                    ("Elt" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13618 13631]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [13583 13959])
                            ("growAndEmplaceBack" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("ArgTypes" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14017 14028])
                                    ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14032 14037]))                                  
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13995 14409])
                            ("public" label nil (reparse-symbol classsubparts) [14411 14418])
                            ("push_back" function
                               (:arguments 
                                  ( ("Elt" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14436 14449]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [14421 14594])
                            ("push_back" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14613 14617])
                                    ("" variable (:type ("Elt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14617 14621]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [14598 14773])
                            ("pop_back" function (:type "void") (reparse-symbol classsubparts) [14777 14859]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [11020 14862])
                    ("grow" function
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("bool" type (:typevar "TriviallyCopyable") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("MinSize" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15041 15056]))                          
                        :parent "SmallVectorTemplateBase")
                        (reparse-symbol namespacesubparts) [14938 15213])
                    ("moveElementsForGrow" function
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("bool" type (:typevar "TriviallyCopyable") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("NewElts" variable
                               (:pointer 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [15412 15423]))                          
                        :parent "SmallVectorTemplateBase")
                        (reparse-symbol namespacesubparts) [15289 15603])
                    ("takeAllocationForGrow" function
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("bool" type (:typevar "TriviallyCopyable") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("NewElts" variable
                               (:pointer 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [15804 15815])
                            ("NewCapacity" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15816 15835]))                          
                        :parent "SmallVectorTemplateBase")
                        (reparse-symbol namespacesubparts) [15679 16021])
                    ("SmallVectorTemplateBase" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("SmallVectorTemplateCommon" friend nil (reparse-symbol classsubparts) [16379 16417])
                            ("protected" label nil (reparse-symbol classsubparts) [16423 16433])
                            ("std::conditional::type" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [16785 16850])
                            ("SmallVectorTemplateBase" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16878 16890]))                                  
                                :type ("SmallVectorTemplateBase" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16854 16930])
                            ("destroy_range" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17005 17009])
                                    ("" variable
                                       (:pointer 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17010 17014]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [16979 17017])
                            ("uninitialized_move" function
                               (:template 
                                  ( ("It1" type (:type "class") nil nil)
                                    ("It2" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("I" variable (:type ("It1" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17218 17224])
                                    ("E" variable (:type ("It1" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17225 17231])
                                    ("Dest" variable (:type ("It2" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17232 17241]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [17148 17306])
                            ("uninitialized_copy" function
                               (:template 
                                  ( ("It1" type (:type "class") nil nil)
                                    ("It2" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("I" variable (:type ("It1" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17507 17513])
                                    ("E" variable (:type ("It1" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17514 17520])
                                    ("Dest" variable (:type ("It2" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17521 17530]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [17437 17645])
                            ("uninitialized_copy" function
                               (:template 
                                  ( ("T1" type (:type "class") nil nil)
                                    ("T2" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("I" variable
                                       (:pointer 1
                                        :type ("T1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17852 17858])
                                    ("E" variable
                                       (:pointer 1
                                        :type ("T1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17859 17865])
                                    ("Dest" variable
                                       (:pointer 1
                                        :type ("T2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17866 17875])
                                    ("" variable (:type ("std::enable_if_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17882 17899])
                                    ("" variable (:type ("std::is_same" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17899 17912])
                                    ("" variable
                                       (:typemodifiers ("typename")
                                        :type ("std::remove_const::type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17912 17949])
                                    ("" variable (:type ("T2" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17986 17989])
                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17991 17997])
                                    ("" variable (:type ("nullptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18002 18010]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [17776 18373])
                            ("grow" function
                               (:arguments 
                                  ( ("MinSize" variable
                                       (:default-value "0"
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18514 18532]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [18504 18573])
                            ("reserveForParamAndGetAddress" function
                               (:pointer 1
                                :constant-flag t
                                :arguments 
                                  ( ("Elt" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18750 18763])
                                    ("N" variable
                                       (:default-value "1"
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18764 18776]))                                  
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18712 18848])
                            ("reserveForParamAndGetAddress" function
                               (:pointer 1
                                :arguments 
                                  ( ("Elt" variable
                                       (:reference 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19019 19026])
                                    ("N" variable
                                       (:default-value "1"
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19027 19039]))                                  
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18987 19137])
                            ("forward_value_param" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("V" variable (:type ("ValueParamT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19248 19262]))                                  
                                :type ("ValueParamT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [19209 19276])
                            ("growAndAssign" function
                               (:arguments 
                                  ( ("NumElts" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19299 19314])
                                    ("Elt" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19315 19321]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [19280 19621])
                            ("growAndEmplaceBack" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("ArgTypes" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19679 19690])
                                    ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19694 19699]))                                  
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [19657 19955])
                            ("public" label nil (reparse-symbol classsubparts) [19957 19964])
                            ("push_back" function
                               (:arguments 
                                  ( ("Elt" variable (:type ("ValueParamT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19982 19998]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [19967 20169])
                            ("pop_back" function (:type "void") (reparse-symbol classsubparts) [20173 20226]))                          
                        :superclasses 
                          ( ("SmallVectorTemplateCommon" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :template-specifier 
                          ( ("T" type nil nil nil)
                            ("true" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [16276 20229])
                    ("SmallVectorImpl" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("SmallVectorTemplateBase" variable (:type "int") (reparse-symbol classsubparts) [20491 20518])
                            ("public" label nil (reparse-symbol classsubparts) [20520 20527])
                            ("SuperClass::iterator" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [20547 20577])
                            ("SuperClass::const_iterator" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [20603 20639])
                            ("SuperClass::reference" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [20660 20691])
                            ("SuperClass::size_type" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [20712 20743])
                            ("protected" label nil (reparse-symbol classsubparts) [20745 20755])
                            ("SmallVectorTemplateBase::TakesParamByValue" variable (:type "int") (reparse-symbol classsubparts) [20764 20810])
                            ("SuperClass::ValueParamT" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [20833 20866])
                            ("SmallVectorImpl" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("N" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [20936 20947]))                                  
                                :type ("SmallVectorImpl" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [20920 20988])
                            ("assignRemote" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [21010 21028])
                                    ("" variable (:type ("RHS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21028 21032]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [20992 21261])
                            ("public" label nil (reparse-symbol classsubparts) [21263 21270])
                            ("SmallVectorImpl" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [21327 21543])
                            ("clear" function (:type "void") (reparse-symbol classsubparts) [21547 21638])
                            ("private" label nil (reparse-symbol classsubparts) [21640 21648])
                            ("SuperClass::set_size" variable (:type "int") (reparse-symbol classsubparts) [21717 21738])
                            ("resizeImpl" function
                               (:template 
                                  ( ("bool" type (:typevar "ForOverwrite") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("N" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21787 21799]))                                  )
                                (reparse-symbol classsubparts) [21742 22112])
                            ("public" label nil (reparse-symbol classsubparts) [22114 22121])
                            ("resize" function
                               (:arguments 
                                  ( ("N" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22136 22148]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [22124 22174])
                            ("resize_for_overwrite" function
                               (:arguments 
                                  ( ("N" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22279 22291]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [22253 22316])
                            ("truncate" function
                               (:arguments 
                                  ( ("N" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22400 22412]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [22386 22569])
                            ("resize" function
                               (:arguments 
                                  ( ("N" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22585 22597])
                                    ("NV" variable (:type ("ValueParamT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22598 22613]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [22573 22817])
                            ("reserve" function
                               (:arguments 
                                  ( ("N" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22834 22846]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [22821 22903])
                            ("pop_back_n" function
                               (:arguments 
                                  ( ("NumItems" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22923 22942]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [22907 23025])
                            ("pop_back_val" function (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [23044 23149])
                            ("swap" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23163 23184]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [23153 23185])
                            ("append" function
                               (:arguments 
                                  ( ("in_start" variable (:type ("in_iter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23478 23495])
                                    ("in_end" variable (:type ("in_iter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23496 23511]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [23466 23778])
                            ("append" function
                               (:arguments 
                                  ( ("NumInputs" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23849 23869])
                                    ("Elt" variable (:type ("ValueParamT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23870 23886]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [23837 24076])
                            ("append" function
                               (:arguments 
                                  ( ("IL" variable (:type ("std::initializer_list" type
                                         (:template-specifier 
                                            ( ("T" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [24092 24120]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [24080 24160])
                            ("append" function
                               (:arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SmallVectorImpl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24176 24203]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [24164 24239])
                            ("assign" function
                               (:arguments 
                                  ( ("NumElts" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24255 24273])
                                    ("Elt" variable (:type ("ValueParamT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24274 24290]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [24243 24795])
                            ("assign" function
                               (:arguments 
                                  ( ("in_start" variable (:type ("in_iter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25164 25181])
                                    ("in_end" variable (:type ("in_iter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25182 25197]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [25152 25307])
                            ("assign" function
                               (:arguments 
                                  ( ("IL" variable (:type ("std::initializer_list" type
                                         (:template-specifier 
                                            ( ("T" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [25323 25351]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [25311 25386])
                            ("assign" function
                               (:arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SmallVectorImpl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25402 25429]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [25390 25465])
                            ("erase" function
                               (:arguments 
                                  ( ("CI" variable (:type ("const_iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25484 25502]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [25469 25866])
                            ("erase" function
                               (:arguments 
                                  ( ("CS" variable (:type ("const_iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25885 25903])
                                    ("CE" variable (:type ("const_iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25904 25922]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [25870 26390])
                            ("private" label nil (reparse-symbol classsubparts) [26392 26400])
                            ("insert_one_impl" function
                               (:template 
                                  ( ("ArgType" type (:type "class") nil nil))                                  
                                :type ("iterator" type (:type "class") nil nil)
                                :arguments 
                                  ( ("I" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26453 26464])
                                    ("" variable
                                       (:reference 1
                                        :type ("ArgType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26465 26475])
                                    ("" variable (:type ("Elt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26475 26479]))                                  )
                                (reparse-symbol classsubparts) [26403 27761])
                            ("public" label nil (reparse-symbol classsubparts) [27763 27770])
                            ("insert" function
                               (:arguments 
                                  ( ("I" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27789 27800])
                                    ("" variable
                                       (:reference 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27801 27805])
                                    ("" variable (:type ("Elt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27805 27809]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [27773 27889])
                            ("insert" function
                               (:arguments 
                                  ( ("I" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27909 27920])
                                    ("Elt" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27921 27934]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [27893 28003])
                            ("insert" function
                               (:arguments 
                                  ( ("I" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28023 28034])
                                    ("NumToInsert" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28035 28057])
                                    ("Elt" variable (:type ("ValueParamT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28058 28074]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [28007 30365])
                            ("insert" function
                               (:arguments 
                                  ( ("I" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30595 30606])
                                    ("From" variable (:type ("ItTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30607 30617])
                                    ("To" variable (:type ("ItTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30618 30626]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [30579 32545])
                            ("insert" function
                               (:arguments 
                                  ( ("I" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32561 32572])
                                    ("IL" variable (:type ("std::initializer_list" type
                                         (:template-specifier 
                                            ( ("T" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [32573 32601]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [32549 32644])
                            ("emplace_back" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("ArgTypes" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32703 32714])
                                    ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32718 32723]))                                  
                                :type ("reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32680 32990])
                            ("=" function
                               (:prototype-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SmallVectorImpl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33021 33048]))                                  
                                :type ("SmallVectorImpl" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32994 33049])
                            ("=" function
                               (:prototype-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33080 33098])
                                    ("" variable (:type ("RHS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33098 33102]))                                  
                                :type ("SmallVectorImpl" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [33053 33103])
                            ("==" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SmallVectorImpl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33123 33150]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [33107 33276])
                            ("!=" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SmallVectorImpl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33295 33322]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [33279 33362])
                            ("<" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SmallVectorImpl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33381 33408]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [33366 33553]))                          
                        :superclasses 
                          ( ("SmallVectorTemplateBase" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [20388 33556])
                    ("swap" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("RHS" variable
                               (:reference 1
                                :type ("SmallVectorImpl" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [33610 33634]))                          
                        :parent "SmallVectorImpl")
                        (reparse-symbol namespacesubparts) [33558 34808])
                    ("=" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("SmallVectorImpl" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("RHS" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SmallVectorImpl" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [34885 34915]))                          
                        :parent "SmallVectorImpl"
                        :operator-flag t)
                        (reparse-symbol namespacesubparts) [34810 36208])
                    ("=" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("SmallVectorImpl" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("SmallVectorImpl" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [36282 36303])
                            ("" variable (:type ("RHS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36303 36307]))                          
                        :parent "SmallVectorImpl"
                        :operator-flag t)
                        (reparse-symbol namespacesubparts) [36210 37816])
                    ("SmallVectorStorage" type
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("unsigned int" type (:typevar "N") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("InlineElts" variable
                               (:dereference 1
                                :type "char")
                                (reparse-symbol classsubparts) [38018 38049]))                          )
                        (reparse-symbol namespacesubparts) [37943 38052])
                    ("SmallVectorStorage" variable (:type ("alignas" type (:type "struct") nil nil)) (reparse-symbol namespacesubparts) [38222 38290])
                    ("SmallVector" variable (:type ("LLVM_GSL_OWNER" type
                         (:prototype t
                          :type "class")
                          nil nil)) (reparse-symbol namespacesubparts) [38433 38500])
                    ("CalculateSmallVectorDefaultInlinedElements" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("kPreferredSmallVectorSizeof" variable
                               (:default-value "64"
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [39133 39173])
                            ("static_assert" function
                               (:prototype-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [40550 40866])
                            ("NumElementsThatFit" variable (:type "int") (reparse-symbol classsubparts) [41223 41242]))                          )
                        (reparse-symbol namespacesubparts) [38744 41245])
                    ("SmallVectorImpl" variable (:type "int") (reparse-symbol namespacesubparts) [42244 44407])
                    ("SmallVectorStorage" variable (:type "int") (reparse-symbol namespacesubparts) [42244 44407])
                    ("capacity_in_bytes" function
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("unsigned int" type (:typevar "N") nil nil))                          
                        :type ("size_t" type (:type "class") nil nil)
                        :arguments 
                          ( ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SmallVector" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("N" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [44475 44502]))                          
                        :typemodifiers ("inline"))
                        (reparse-symbol namespacesubparts) [44409 44538])
                    ("type" variable (:type "int") (reparse-symbol namespacesubparts) [44732 44737])
                    ("to_vector" function
                       (:template 
                          ( ("unsigned int" type (:typevar "Size") nil nil)
                            ("R" type (:type "class") nil nil))                          
                        :type ("SmallVector" type
                             (:template-specifier 
                                ( ("ValueTypeFromRangeType" type (:template-specifier 
                                    ( ("R" type nil nil nil))                                    ) nil nil)
                                  ("Size" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [45037 45041])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45041 45047]))                          )
                        (reparse-symbol namespacesubparts) [44945 45098])
                    ("to_vector" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [45277 45281])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45281 45287]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [45267 45338]))                  
                :type "namespace")
                nil [912 45341])
            ("std" type
               (:members 
                  ( ("swap" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("LHS" variable
                               (:reference 1
                                :type ("llvm::SmallVectorImpl" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [45482 45512])
                            ("RHS" variable
                               (:reference 1
                                :type ("llvm::SmallVectorImpl" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [45513 45543]))                          
                        :typemodifiers ("inline"))
                        (reparse-symbol namespacesubparts) [45440 45568])
                    ("swap" function
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("unsigned int" type (:typevar "N") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("LHS" variable
                               (:reference 1
                                :type ("llvm::SmallVector" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("N" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [45682 45711])
                            ("RHS" variable
                               (:reference 1
                                :type ("llvm::SmallVector" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("N" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [45712 45741]))                          
                        :typemodifiers ("inline"))
                        (reparse-symbol namespacesubparts) [45628 45766]))                  
                :type "namespace")
                nil [45365 45769]))          
      :file "SmallVector.h"
      :pointmax 45825
      :fsize 45824
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 45280 . 45281) (punctuation 45265 . 45266) (symbol 45260 . 45265) (punctuation 45259 . 45260) (punctuation 45258 . 45259) (punctuation 45257 . 45258) (punctuation 45256 . 45257) (symbol 45255 . 45256) (punctuation 45254 . 45255) (symbol 45232 . 45254) (punctuation 45214 . 45215) (symbol 45172 . 45214) (punctuation 45158 . 45159) (punctuation 45157 . 45158) (symbol 45156 . 45157) (punctuation 45155 . 45156) (symbol 45133 . 45155) (punctuation 45132 . 45133) (symbol 45121 . 45132) (punctuation 45119 . 45120) (symbol 45118 . 45119) (TYPENAME 45109 . 45117) (punctuation 45108 . 45109) (TEMPLATE 45099 . 45107) (punctuation 45040 . 45041) (punctuation 44731 . 44732) (punctuation 44730 . 44731) (punctuation 44729 . 44730) (symbol 44725 . 44729) (punctuation 44724 . 44725) (punctuation 44723 . 44724) (punctuation 44722 . 44723) (semantic-list 44680 . 44722) (symbol 44672 . 44680) (semantic-list 44692 . 44721) (punctuation 44681 . 44682) (punctuation 44662 . 44663) (symbol 44646 . 44662) (punctuation 44645 . 44646) (punctuation 44644 . 44645) (symbol 44641 . 44644) (TYPENAME 44632 . 44640) (punctuation 44631 . 44632) (symbol 44619 . 44631) (punctuation 44618 . 44619) (punctuation 44617 . 44618) (symbol 44614 . 44617) (TYPENAME 44605 . 44613) (punctuation 44599 . 44600) (symbol 44576 . 44598) (USING 44570 . 44575) (punctuation 44568 . 44569) (symbol 44559 . 44568) (TYPENAME 44550 . 44558) (punctuation 44549 . 44550) (TEMPLATE 44540 . 44548) (PUBLIC 42237 . 42243) (punctuation 42235 . 42236) (symbol 42223 . 42234) (symbol 42208 . 42222) (CLASS 42202 . 42207) (punctuation 42200 . 42201) (symbol 42195 . 42200) (punctuation 42194 . 42195) (punctuation 42193 . 42194) (punctuation 42192 . 42193) (symbol 42191 . 42192) (punctuation 42190 . 42191) (symbol 42148 . 42190) (punctuation 42146 . 42147) (symbol 42144 . 42145) (UNSIGNED 42135 . 42143) (punctuation 42123 . 42124) (symbol 42122 . 42123) (TYPENAME 42113 . 42121) (punctuation 42112 . 42113) (TEMPLATE 42103 . 42111) (punctuation 41221 . 41222) (number 41219 . 41220) (punctuation 41217 . 41218) (number 41215 . 41216) (punctuation 41213 . 41214) (punctuation 41212 . 41213) (symbol 41193 . 41211) (punctuation 41185 . 41186) (symbol 41179 . 41184) (symbol 41172 . 41178) (symbol 41162 . 41171) (STATIC 41155 . 41161) (punctuation 41151 . 41152) (semantic-list 41148 . 41151) (SIZEOF 41142 . 41148) (punctuation 41140 . 41141) (symbol 41119 . 41139) (punctuation 41117 . 41118) (symbol 41098 . 41116) (symbol 41091 . 41097) (symbol 41081 . 41090) (STATIC 41074 . 41080) (punctuation 41070 . 41071) (semantic-list 41051 . 41070) (SIZEOF 41045 . 41051) (punctuation 41043 . 41044) (symbol 41015 . 41042) (punctuation 41007 . 41008) (symbol 40986 . 41006) (symbol 40979 . 40985) (symbol 40969 . 40978) (STATIC 40962 . 40968) (string 40816 . 40864) (string 40738 . 40809) (string 40667 . 40731) (string 40595 . 40660) (number 40584 . 40587) (punctuation 40582 . 40583) (punctuation 40581 . 40582) (semantic-list 40577 . 40580) (SIZEOF 40571 . 40577) (symbol 39123 . 39132) (STATIC 39116 . 39122) (close-paren 38260 . 38261) (symbol 38259 . 38260) (open-paren 38258 . 38259) (close-paren 38260 . 38261) (symbol 38259 . 38260) (open-paren 38258 . 38259) (semantic-list 38014 . 38017) (symbol 38007 . 38014) (punctuation 36302 . 36303) (punctuation 33097 . 33098) (punctuation 32716 . 32717) (punctuation 32715 . 32716) (punctuation 32714 . 32715) (punctuation 32713 . 32714) (punctuation 32678 . 32679) (symbol 32670 . 32678) (punctuation 32668 . 32669) (punctuation 32667 . 32668) (punctuation 32666 . 32667) (TYPENAME 32658 . 32666) (punctuation 32657 . 32658) (TEMPLATE 32648 . 32656) (punctuation 30575 . 30576) (punctuation 30574 . 30575) (symbol 30569 . 30574) (punctuation 30568 . 30569) (punctuation 30567 . 30568) (punctuation 30566 . 30567) (symbol 30548 . 30566) (punctuation 30547 . 30548) (punctuation 30546 . 30547) (symbol 30543 . 30546) (punctuation 30525 . 30526) (symbol 30508 . 30525) (punctuation 30507 . 30508) (punctuation 30506 . 30507) (punctuation 30505 . 30506) (symbol 30501 . 30505) (punctuation 30500 . 30501) (symbol 30485 . 30500) (punctuation 30484 . 30485) (punctuation 30483 . 30484) (symbol 30480 . 30483) (TYPENAME 30471 . 30479) (punctuation 30453 . 30454) (symbol 30439 . 30453) (punctuation 30438 . 30439) (punctuation 30437 . 30438) (symbol 30434 . 30437) (punctuation 30433 . 30434) (symbol 30422 . 30433) (punctuation 30421 . 30422) (punctuation 30420 . 30421) (symbol 30417 . 30420) (punctuation 30415 . 30416) (TYPENAME 30406 . 30414) (punctuation 30392 . 30393) (symbol 30388 . 30392) (TYPENAME 30379 . 30387) (punctuation 30378 . 30379) (TEMPLATE 30369 . 30377) (punctuation 27804 . 27805) (punctuation 26474 . 26475) (punctuation 25148 . 25149) (punctuation 25147 . 25148) (symbol 25142 . 25147) (punctuation 25141 . 25142) (punctuation 25140 . 25141) (punctuation 25139 . 25140) (symbol 25121 . 25139) (punctuation 25120 . 25121) (punctuation 25119 . 25120) (symbol 25116 . 25119) (punctuation 25098 . 25099) (symbol 25081 . 25098) (punctuation 25080 . 25081) (punctuation 25079 . 25080) (punctuation 25078 . 25079) (symbol 25071 . 25078) (punctuation 25070 . 25071) (symbol 25055 . 25070) (punctuation 25054 . 25055) (punctuation 25053 . 25054) (symbol 25050 . 25053) (TYPENAME 25041 . 25049) (punctuation 25023 . 25024) (symbol 25009 . 25023) (punctuation 25008 . 25009) (punctuation 25007 . 25008) (symbol 25004 . 25007) (punctuation 25003 . 25004) (symbol 24992 . 25003) (punctuation 24991 . 24992) (punctuation 24990 . 24991) (symbol 24987 . 24990) (punctuation 24985 . 24986) (TYPENAME 24976 . 24984) (punctuation 24962 . 24963) (symbol 24955 . 24962) (TYPENAME 24946 . 24954) (punctuation 24945 . 24946) (TEMPLATE 24936 . 24944) (punctuation 23462 . 23463) (punctuation 23461 . 23462) (symbol 23456 . 23461) (punctuation 23455 . 23456) (punctuation 23454 . 23455) (punctuation 23453 . 23454) (symbol 23435 . 23453) (punctuation 23434 . 23435) (punctuation 23433 . 23434) (symbol 23430 . 23433) (punctuation 23412 . 23413) (symbol 23395 . 23412) (punctuation 23394 . 23395) (punctuation 23393 . 23394) (punctuation 23392 . 23393) (symbol 23385 . 23392) (punctuation 23384 . 23385) (symbol 23369 . 23384) (punctuation 23368 . 23369) (punctuation 23367 . 23368) (symbol 23364 . 23367) (TYPENAME 23355 . 23363) (punctuation 23337 . 23338) (symbol 23323 . 23337) (punctuation 23322 . 23323) (punctuation 23321 . 23322) (symbol 23318 . 23321) (punctuation 23317 . 23318) (symbol 23306 . 23317) (punctuation 23305 . 23306) (punctuation 23304 . 23305) (symbol 23301 . 23304) (punctuation 23299 . 23300) (TYPENAME 23290 . 23298) (punctuation 23276 . 23277) (symbol 23269 . 23276) (TYPENAME 23260 . 23268) (punctuation 23259 . 23260) (TEMPLATE 23250 . 23258) (symbol 23029 . 23043) (USING 21711 . 21716) (punctuation 21322 . 21323) (DELETE 21316 . 21322) (punctuation 21314 . 21315) (semantic-list 21288 . 21313) (symbol 21273 . 21288) (punctuation 21027 . 21028) (EXPLICIT 20911 . 20919) (punctuation 20831 . 20832) (symbol 20819 . 20830) (USING 20813 . 20818) (USING 20758 . 20763) (punctuation 20710 . 20711) (symbol 20700 . 20709) (USING 20694 . 20699) (punctuation 20658 . 20659) (symbol 20648 . 20657) (USING 20642 . 20647) (punctuation 20601 . 20602) (symbol 20586 . 20600) (USING 20580 . 20585) (punctuation 20545 . 20546) (symbol 20536 . 20544) (USING 20530 . 20535) (punctuation 20489 . 20490) (symbol 20478 . 20488) (USING 20472 . 20477) (punctuation 19692 . 19693) (punctuation 19691 . 19692) (punctuation 19690 . 19691) (punctuation 19689 . 19690) (punctuation 19655 . 19656) (symbol 19647 . 19655) (punctuation 19645 . 19646) (punctuation 19644 . 19645) (punctuation 19643 . 19644) (TYPENAME 19635 . 19643) (punctuation 19634 . 19635) (TEMPLATE 19625 . 19633) (punctuation 18000 . 18001) (punctuation 17998 . 17999) (punctuation 17996 . 17997) (punctuation 17990 . 17991) (punctuation 17989 . 17990) (punctuation 17988 . 17989) (punctuation 17911 . 17912) (punctuation 17898 . 17899) (punctuation 16777 . 16778) (symbol 16765 . 16776) (USING 16759 . 16764) (punctuation 16652 . 16653) (semantic-list 16644 . 16652) (SIZEOF 16638 . 16644) (punctuation 16636 . 16637) (number 16634 . 16635) (punctuation 16632 . 16633) (punctuation 16631 . 16632) (semantic-list 16627 . 16630) (SIZEOF 16621 . 16627) (punctuation 16619 . 16620) (symbol 16601 . 16618) (BOOL 16596 . 16600) (symbol 16586 . 16595) (STATIC 16579 . 16585) (punctuation 16420 . 16421) (punctuation 16419 . 16420) (symbol 16418 . 16419) (punctuation 16417 . 16418) (punctuation 14616 . 14617) (punctuation 14030 . 14031) (punctuation 14029 . 14030) (punctuation 14028 . 14029) (punctuation 14027 . 14028) (punctuation 13993 . 13994) (symbol 13985 . 13993) (punctuation 13983 . 13984) (punctuation 13982 . 13983) (punctuation 13981 . 13982) (TYPENAME 13973 . 13981) (punctuation 13972 . 13973) (TEMPLATE 13963 . 13971) (punctuation 13487 . 13488) (punctuation 13463 . 13464) (punctuation 13462 . 13463) (symbol 13460 . 13461) (STATIC 13453 . 13459) (punctuation 11229 . 11230) (punctuation 11228 . 11229) (symbol 11226 . 11227) (CONST 11220 . 11225) (punctuation 11218 . 11219) (symbol 11206 . 11217) (USING 11200 . 11205) (symbol 11156 . 11165) (STATIC 11149 . 11155) (punctuation 11133 . 11134) (punctuation 11132 . 11133) (symbol 11131 . 11132) (punctuation 11130 . 11131) (punctuation 11018 . 11019) (symbol 11013 . 11018) (punctuation 11012 . 11013) (punctuation 11011 . 11012) (punctuation 11010 . 11011) (symbol 11009 . 11010) (punctuation 11008 . 11009) (symbol 10983 . 11008) (punctuation 10982 . 10983) (punctuation 10981 . 10982) (symbol 10978 . 10981) (punctuation 10947 . 10948) (punctuation 10946 . 10947) (semantic-list 10902 . 10945) (punctuation 10871 . 10872) (punctuation 10870 . 10871) (semantic-list 10826 . 10869) (punctuation 10824 . 10825) (BOOL 10819 . 10823) (punctuation 10817 . 10818) (symbol 10816 . 10817) (TYPENAME 10807 . 10815) (punctuation 10806 . 10807) (TEMPLATE 10797 . 10805) (USING 8663 . 8668) (USING 8642 . 8647) (USING 8618 . 8623) (punctuation 8613 . 8614) (punctuation 8612 . 8613) (symbol 8610 . 8611) (CONST 8604 . 8609) (punctuation 8602 . 8603) (symbol 8588 . 8601) (USING 8582 . 8587) (punctuation 8578 . 8579) (punctuation 8577 . 8578) (symbol 8575 . 8576) (punctuation 8573 . 8574) (symbol 8565 . 8572) (USING 8559 . 8564) (punctuation 8555 . 8556) (punctuation 8554 . 8555) (symbol 8552 . 8553) (CONST 8546 . 8551) (punctuation 8544 . 8545) (symbol 8528 . 8543) (USING 8522 . 8527) (punctuation 8518 . 8519) (punctuation 8517 . 8518) (symbol 8515 . 8516) (punctuation 8513 . 8514) (symbol 8503 . 8512) (USING 8497 . 8502) (punctuation 8459 . 8460) (symbol 8442 . 8458) (USING 8436 . 8441) (punctuation 8393 . 8394) (symbol 8370 . 8392) (USING 8364 . 8369) (punctuation 8359 . 8360) (punctuation 8358 . 8359) (symbol 8356 . 8357) (CONST 8350 . 8355) (punctuation 8348 . 8349) (symbol 8333 . 8347) (USING 8327 . 8332) (punctuation 8323 . 8324) (punctuation 8322 . 8323) (symbol 8320 . 8321) (punctuation 8318 . 8319) (symbol 8309 . 8317) (USING 8303 . 8308) (USING 8279 . 8284) (USING 8242 . 8247) (USING 8214 . 8219) (punctuation 7425 . 7426) (symbol 7420 . 7425) (punctuation 7418 . 7419) (punctuation 7416 . 7417) (BOOL 7412 . 7416) (punctuation 7387 . 7388) (symbol 7382 . 7387) (punctuation 7381 . 7382) (punctuation 7380 . 7381) (punctuation 7379 . 7380) (punctuation 7378 . 7379) (symbol 7376 . 7377) (punctuation 7374 . 7375) (punctuation 7373 . 7374) (symbol 7369 . 7373) (punctuation 7368 . 7369) (symbol 7354 . 7368) (punctuation 7353 . 7354) (punctuation 7352 . 7353) (symbol 7349 . 7352) (punctuation 7348 . 7349) (symbol 7341 . 7348) (punctuation 7340 . 7341) (punctuation 7339 . 7340) (symbol 7336 . 7339) (punctuation 7335 . 7336) (punctuation 7334 . 7335) (symbol 7323 . 7334) (punctuation 7322 . 7323) (punctuation 7321 . 7322) (symbol 7318 . 7321) (punctuation 7310 . 7311) (symbol 7306 . 7310) (CLASS 7300 . 7305) (punctuation 7292 . 7293) (TEMPLATE 7283 . 7291) (punctuation 6964 . 6965) (symbol 6959 . 6964) (punctuation 6957 . 6958) (punctuation 6955 . 6956) (BOOL 6951 . 6955) (punctuation 6926 . 6927) (symbol 6921 . 6926) (punctuation 6920 . 6921) (punctuation 6919 . 6920) (punctuation 6918 . 6919) (punctuation 6917 . 6918) (symbol 6915 . 6916) (punctuation 6913 . 6914) (punctuation 6912 . 6913) (symbol 6908 . 6912) (punctuation 6907 . 6908) (symbol 6893 . 6907) (punctuation 6892 . 6893) (punctuation 6891 . 6892) (symbol 6888 . 6891) (punctuation 6887 . 6888) (symbol 6880 . 6887) (punctuation 6879 . 6880) (punctuation 6878 . 6879) (symbol 6875 . 6878) (punctuation 6874 . 6875) (punctuation 6873 . 6874) (symbol 6862 . 6873) (punctuation 6861 . 6862) (punctuation 6860 . 6861) (symbol 6857 . 6860) (punctuation 6849 . 6850) (symbol 6845 . 6849) (CLASS 6839 . 6844) (punctuation 6831 . 6832) (TEMPLATE 6822 . 6830) (punctuation 3602 . 3603) (symbol 3597 . 3601) (USING 3591 . 3596) (punctuation 3500 . 3501) (VOID 3496 . 3500) (punctuation 3494 . 3495) (TYPENAME 3485 . 3493) (punctuation 3483 . 3484) (symbol 3482 . 3483) (TYPENAME 3473 . 3481) (punctuation 3472 . 3473) (TEMPLATE 3463 . 3471) (semantic-list 3215 . 3218) (symbol 3208 . 3215) (semantic-list 3097 . 3138) (symbol 3090 . 3097) (punctuation 3049 . 3050) (VOID 3045 . 3049) (punctuation 3043 . 3044) (TYPENAME 3034 . 3042) (punctuation 3032 . 3033) (symbol 3031 . 3032) (CLASS 3025 . 3030) (punctuation 3024 . 3025) (TEMPLATE 3015 . 3023) (punctuation 2959 . 2960) (punctuation 2958 . 2959) (punctuation 2957 . 2958) (symbol 2949 . 2957) (punctuation 2917 . 2918) (symbol 2909 . 2917) (punctuation 2907 . 2908) (number 2906 . 2907) (punctuation 2904 . 2905) (punctuation 2903 . 2904) (semantic-list 2894 . 2902) (SIZEOF 2888 . 2894) (punctuation 2886 . 2887) (punctuation 2885 . 2886) (number 2883 . 2884) (punctuation 2881 . 2882) (semantic-list 2877 . 2880) (SIZEOF 2871 . 2877) (punctuation 2870 . 2871) (symbol 2859 . 2870) (punctuation 2858 . 2859) (punctuation 2857 . 2858) (symbol 2854 . 2857) (TYPENAME 2845 . 2853) (punctuation 2839 . 2840) (symbol 2819 . 2838) (USING 2813 . 2818) (punctuation 2811 . 2812) (symbol 2810 . 2811) (CLASS 2804 . 2809) (punctuation 2803 . 2804) (TEMPLATE 2794 . 2802) (symbol 2481 . 2495) (punctuation 1734 . 1735) (DELETE 1728 . 1734) (punctuation 1726 . 1727) (semantic-list 1723 . 1725) (symbol 1708 . 1723) (symbol 1621 . 1630) (STATIC 1614 . 1620))
      :lexical-table 
        '(("LLVM_ADT_SMALLVECTOR_H")
          )
)
    (semanticdb-table "semanticdb-table-155561fc27ce"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_OPTIONAL_H" variable (:constant-flag t) nil [685 704])
            ("llvm/ADT/Hashing.h" include nil nil [706 735])
            ("llvm/ADT/None.h" include nil nil [736 762])
            ("llvm/ADT/STLForwardCompat.h" include nil nil [763 801])
            ("llvm/Support/Compiler.h" include nil nil [802 836])
            ("llvm/Support/type_traits.h" include nil nil [837 874])
            ("cassert" include (:system-flag t) nil [875 893])
            ("new" include (:system-flag t) nil [894 908])
            ("utility" include (:system-flag t) nil [909 927])
            ("llvm" type
               (:members 
                  ( ("raw_ostream" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [947 965])
                    ("optional_detail" type
                       (:members 
                          ( ("OptionalStorage" type
                               (:members 
                                  ( ("" type
                                       (:members 
                                          ( ("empty" variable (:type "char") (reparse-symbol classsubparts) [2458 2469])
                                            ("value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2474 2482]))                                          
                                        :type "union")
                                        (reparse-symbol classsubparts) [2446 2487])
                                    ("hasVal" variable (:type "bool") (reparse-symbol classsubparts) [2490 2502])
                                    ("public" label nil (reparse-symbol classsubparts) [2504 2511])
                                    ("OptionalStorage" function
                                       (:destructor-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [2514 2545])
                                    ("empty" function
                                       (:constructor-flag t
                                        :type ("OptionalStorage" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2588 2613])
                                    ("OptionalStorage" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("other" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("OptionalStorage" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2643 2672]))                                          
                                        :type ("constexpr" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2617 2760])
                                    ("OptionalStorage" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("OptionalStorage" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2789 2807])
                                            ("" variable (:type ("other" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2807 2813]))                                          
                                        :type ("constexpr" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2763 2912])
                                    ("OptionalStorage" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("" variable (:type ("in_place_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2978 2989])
                                            ("" variable
                                               (:reference 1
                                                :type ("Args" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2990 2997])
                                            ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3001 3006]))                                          
                                        :type ("OptionalStorage" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2962 3066])
                                    ("emplace" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Args" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3595 3602])
                                            ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3606 3611]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [3582 3723])
                                    ("=" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("y" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3754 3765]))                                          
                                        :type ("OptionalStorage" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [3727 3918])
                                    ("=" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3948 3952])
                                            ("" variable (:type ("y" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3952 3954]))                                          
                                        :type ("OptionalStorage" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [3921 4129])
                                    ("=" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("other" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("OptionalStorage" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4160 4189]))                                          
                                        :type ("OptionalStorage" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [4133 4436])
                                    ("=" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("OptionalStorage" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4467 4485])
                                            ("" variable (:type ("other" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4485 4491]))                                          
                                        :type ("OptionalStorage" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [4440 4760]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [2420 4763])
                            ("OptionalStorage" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("" type
                                       (:members 
                                          ( ("empty" variable (:type "char") (reparse-symbol classsubparts) [4834 4845])
                                            ("value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4850 4858]))                                          
                                        :type "union")
                                        (reparse-symbol classsubparts) [4822 4863])
                                    ("hasVal" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol classsubparts) [4866 4886])
                                    ("public" label nil (reparse-symbol classsubparts) [4888 4895])
                                    ("OptionalStorage" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("" variable (:type ("in_place_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5316 5327])
                                            ("" variable
                                               (:reference 1
                                                :type ("Args" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5328 5335])
                                            ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5339 5344]))                                          
                                        :type ("OptionalStorage" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [5300 5404])
                                    ("emplace" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Args" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5933 5940])
                                            ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5944 5949]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [5920 6061])
                                    ("=" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("y" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [6092 6103]))                                          
                                        :type ("OptionalStorage" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [6065 6256])
                                    ("=" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [6286 6290])
                                            ("" variable (:type ("y" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6290 6292]))                                          
                                        :type ("OptionalStorage" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [6259 6467]))                                  
                                :template-specifier 
                                  ( ("T" type nil nil nil)
                                    ("true" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [4765 6470]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [967 6473])
                    ("Optional" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("Storage" variable (:type ("optional_detail::OptionalStorage" type
                                 (:template-specifier 
                                    ( ("T" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [6545 6589])
                            ("public" label nil (reparse-symbol classsubparts) [6591 6598])
                            ("value_type" variable
                               (:default-value "T"
                                :type "int")
                                (reparse-symbol classsubparts) [6607 6622])
                            ("Optional" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable (:type ("NoneType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6679 6688]))                                  
                                :type ("constexpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6660 6691])
                            ("Optional" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("y" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6714 6725]))                                  
                                :type ("constexpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6695 6751])
                            ("Optional" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6825 6829])
                                    ("" variable (:type ("y" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6829 6831]))                                  
                                :type ("constexpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6806 6868])
                            ("Optional" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable (:type ("in_place_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6971 6982])
                                    ("" variable
                                       (:reference 1
                                        :type ("ArgTypes" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6983 6994])
                                    ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6997 7002]))                                  
                                :type ("constexpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6952 7064])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7088 7092])
                                    ("" variable (:type ("y" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7092 7094]))                                  
                                :type ("Optional" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7068 7146])
                            ("emplace" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("ArgTypes" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7322 7333])
                                    ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7337 7342]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [7309 7402])
                            ("create" function
                               (:arguments 
                                  ( ("y" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7439 7450]))                                  
                                :type ("Optional" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7423 7498])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("y" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7522 7533]))                                  
                                :type ("Optional" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7502 7574])
                            ("reset" function (:type "void") (reparse-symbol classsubparts) [7630 7663])
                            ("getPointer" function
                               (:methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7677 7736])
                            ("getPointer" function
                               (:pointer 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7739 7786])
                            ("hasValue" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [8030 8082])
                            ("->" function
                               (:methodconst-flag t
                                :operator-flag t
                                :pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8095 8147])
                            ("->" function
                               (:operator-flag t
                                :pointer 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8150 8190]))                          )
                        (reparse-symbol namespacesubparts) [6504 9328])
                    ("hash_value" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("llvm::hash_code" type (:type "class") nil nil)
                        :arguments 
                          ( ("O" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [9376 9397]))                          )
                        (reparse-symbol namespacesubparts) [9330 9458])
                    ("==" function
                       (:operator-flag t
                        :arguments 
                          ( ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [9520 9541])
                            ("Y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("U" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [9542 9563]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [9504 9641])
                    ("!=" function
                       (:operator-flag t
                        :arguments 
                          ( ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [9703 9724])
                            ("Y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("U" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [9725 9746]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [9687 9770])
                    ("<" function
                       (:operator-flag t
                        :arguments 
                          ( ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [9831 9852])
                            ("Y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("U" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [9853 9874]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [9816 9950])
                    ("<=" function
                       (:operator-flag t
                        :arguments 
                          ( ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [10012 10033])
                            ("Y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("U" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [10034 10055]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [9996 10078])
                    (">" function
                       (:operator-flag t
                        :arguments 
                          ( ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [10139 10160])
                            ("Y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("U" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [10161 10182]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [10124 10202])
                    (">=" function
                       (:operator-flag t
                        :arguments 
                          ( ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [10264 10285])
                            ("Y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("U" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [10286 10307]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [10248 10330])
                    ("==" function
                       (:operator-flag t
                        :arguments 
                          ( ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [10380 10401])
                            ("" variable (:type ("NoneType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10402 10411]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [10364 10428])
                    ("==" function
                       (:operator-flag t
                        :arguments 
                          ( ("" variable (:type ("NoneType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10478 10487])
                            ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [10488 10509]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [10462 10533])
                    ("!=" function
                       (:operator-flag t
                        :arguments 
                          ( ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [10583 10604])
                            ("" variable (:type ("NoneType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10605 10614]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [10567 10641])
                    ("!=" function
                       (:operator-flag t
                        :arguments 
                          ( ("" variable (:type ("NoneType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10691 10700])
                            ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [10701 10722]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [10675 10746])
                    ("<" function
                       (:operator-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [10795 10815])
                            ("" variable (:type ("NoneType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10816 10825]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [10780 10845])
                    ("<" function
                       (:operator-flag t
                        :arguments 
                          ( ("" variable (:type ("NoneType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10894 10903])
                            ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [10904 10925]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [10879 10952])
                    ("<=" function
                       (:operator-flag t
                        :arguments 
                          ( ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [11002 11023])
                            ("" variable (:type ("NoneType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11024 11033]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [10986 11059])
                    ("<=" function
                       (:operator-flag t
                        :arguments 
                          ( ("" variable (:type ("NoneType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11109 11118])
                            ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [11119 11140]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [11093 11166])
                    (">" function
                       (:operator-flag t
                        :arguments 
                          ( ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [11215 11236])
                            ("" variable (:type ("NoneType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11237 11246]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [11200 11269])
                    (">" function
                       (:operator-flag t
                        :arguments 
                          ( ("" variable (:type ("NoneType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11318 11327])
                            ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [11328 11349]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [11303 11372])
                    (">=" function
                       (:operator-flag t
                        :arguments 
                          ( ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [11422 11443])
                            ("" variable (:type ("NoneType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11444 11453]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [11406 11477])
                    (">=" function
                       (:operator-flag t
                        :arguments 
                          ( ("" variable (:type ("NoneType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11527 11536])
                            ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [11537 11558]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [11511 11582])
                    ("==" function
                       (:operator-flag t
                        :arguments 
                          ( ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [11632 11653])
                            ("Y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11654 11665]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [11616 11692])
                    ("==" function
                       (:operator-flag t
                        :arguments 
                          ( ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11742 11753])
                            ("Y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [11754 11775]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [11726 11802])
                    ("!=" function
                       (:operator-flag t
                        :arguments 
                          ( ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [11852 11873])
                            ("Y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11874 11885]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [11836 11909])
                    ("!=" function
                       (:operator-flag t
                        :arguments 
                          ( ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11959 11970])
                            ("Y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [11971 11992]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [11943 12016])
                    ("<" function
                       (:operator-flag t
                        :arguments 
                          ( ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [12065 12086])
                            ("Y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12087 12098]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [12050 12125])
                    ("<" function
                       (:operator-flag t
                        :arguments 
                          ( ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12174 12185])
                            ("Y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [12186 12207]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [12159 12233])
                    ("<=" function
                       (:operator-flag t
                        :arguments 
                          ( ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [12283 12304])
                            ("Y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12305 12316]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [12267 12339])
                    ("<=" function
                       (:operator-flag t
                        :arguments 
                          ( ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12389 12400])
                            ("Y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [12401 12422]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [12373 12445])
                    (">" function
                       (:operator-flag t
                        :arguments 
                          ( ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [12494 12515])
                            ("Y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12516 12527]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [12479 12547])
                    (">" function
                       (:operator-flag t
                        :arguments 
                          ( ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12596 12607])
                            ("Y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [12608 12629]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [12581 12649])
                    (">=" function
                       (:operator-flag t
                        :arguments 
                          ( ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [12699 12720])
                            ("Y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12721 12732]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [12683 12755])
                    (">=" function
                       (:operator-flag t
                        :arguments 
                          ( ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12805 12816])
                            ("Y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [12817 12838]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [12789 12861])
                    ("<<" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("OS" variable
                               (:reference 1
                                :type ("raw_ostream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12887 12903])
                            ("" variable (:type ("NoneType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12904 12913]))                          
                        :type ("raw_ostream" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [12863 12914])
                    ("<<" function
                       (:operator-flag t
                        :arguments 
                          ( ("OS" variable
                               (:reference 1
                                :type ("raw_ostream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13085 13101])
                            ("O" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [13102 13123]))                          
                        :type ("raw_ostream" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [13061 13186]))                  
                :type "namespace")
                nil [929 13189]))          
      :file "Optional.h"
      :pointmax 13243
      :fsize 13242
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 13059 . 13060) (semantic-list 12957 . 13059) (symbol 12949 . 12957) (semantic-list 13056 . 13058) (punctuation 13031 . 13032) (punctuation 13030 . 13031) (semantic-list 12985 . 12987) (punctuation 12947 . 12948) (TYPENAME 12938 . 12946) (punctuation 12936 . 12937) (symbol 12935 . 12936) (TYPENAME 12926 . 12934) (punctuation 12925 . 12926) (TEMPLATE 12916 . 12924) (symbol 12779 . 12788) (punctuation 12777 . 12778) (symbol 12776 . 12777) (TYPENAME 12767 . 12775) (punctuation 12766 . 12767) (TEMPLATE 12757 . 12765) (symbol 12673 . 12682) (punctuation 12671 . 12672) (symbol 12670 . 12671) (TYPENAME 12661 . 12669) (punctuation 12660 . 12661) (TEMPLATE 12651 . 12659) (symbol 12571 . 12580) (punctuation 12569 . 12570) (symbol 12568 . 12569) (TYPENAME 12559 . 12567) (punctuation 12558 . 12559) (TEMPLATE 12549 . 12557) (symbol 12469 . 12478) (punctuation 12467 . 12468) (symbol 12466 . 12467) (TYPENAME 12457 . 12465) (punctuation 12456 . 12457) (TEMPLATE 12447 . 12455) (symbol 12363 . 12372) (punctuation 12361 . 12362) (symbol 12360 . 12361) (TYPENAME 12351 . 12359) (punctuation 12350 . 12351) (TEMPLATE 12341 . 12349) (symbol 12257 . 12266) (punctuation 12255 . 12256) (symbol 12254 . 12255) (TYPENAME 12245 . 12253) (punctuation 12244 . 12245) (TEMPLATE 12235 . 12243) (symbol 12149 . 12158) (punctuation 12147 . 12148) (symbol 12146 . 12147) (TYPENAME 12137 . 12145) (punctuation 12136 . 12137) (TEMPLATE 12127 . 12135) (symbol 12040 . 12049) (punctuation 12038 . 12039) (symbol 12037 . 12038) (TYPENAME 12028 . 12036) (punctuation 12027 . 12028) (TEMPLATE 12018 . 12026) (symbol 11933 . 11942) (punctuation 11931 . 11932) (symbol 11930 . 11931) (TYPENAME 11921 . 11929) (punctuation 11920 . 11921) (TEMPLATE 11911 . 11919) (symbol 11826 . 11835) (punctuation 11824 . 11825) (symbol 11823 . 11824) (TYPENAME 11814 . 11822) (punctuation 11813 . 11814) (TEMPLATE 11804 . 11812) (symbol 11716 . 11725) (punctuation 11714 . 11715) (symbol 11713 . 11714) (TYPENAME 11704 . 11712) (punctuation 11703 . 11704) (TEMPLATE 11694 . 11702) (symbol 11606 . 11615) (punctuation 11604 . 11605) (symbol 11603 . 11604) (TYPENAME 11594 . 11602) (punctuation 11593 . 11594) (TEMPLATE 11584 . 11592) (symbol 11501 . 11510) (punctuation 11499 . 11500) (symbol 11498 . 11499) (TYPENAME 11489 . 11497) (punctuation 11488 . 11489) (TEMPLATE 11479 . 11487) (symbol 11396 . 11405) (punctuation 11394 . 11395) (symbol 11393 . 11394) (TYPENAME 11384 . 11392) (punctuation 11383 . 11384) (TEMPLATE 11374 . 11382) (symbol 11293 . 11302) (punctuation 11291 . 11292) (symbol 11290 . 11291) (TYPENAME 11281 . 11289) (punctuation 11280 . 11281) (TEMPLATE 11271 . 11279) (symbol 11190 . 11199) (punctuation 11188 . 11189) (symbol 11187 . 11188) (TYPENAME 11178 . 11186) (punctuation 11177 . 11178) (TEMPLATE 11168 . 11176) (symbol 11083 . 11092) (punctuation 11081 . 11082) (symbol 11080 . 11081) (TYPENAME 11071 . 11079) (punctuation 11070 . 11071) (TEMPLATE 11061 . 11069) (symbol 10976 . 10985) (punctuation 10974 . 10975) (symbol 10973 . 10974) (TYPENAME 10964 . 10972) (punctuation 10963 . 10964) (TEMPLATE 10954 . 10962) (symbol 10869 . 10878) (punctuation 10867 . 10868) (symbol 10866 . 10867) (TYPENAME 10857 . 10865) (punctuation 10856 . 10857) (TEMPLATE 10847 . 10855) (symbol 10770 . 10779) (punctuation 10768 . 10769) (symbol 10767 . 10768) (TYPENAME 10758 . 10766) (punctuation 10757 . 10758) (TEMPLATE 10748 . 10756) (symbol 10665 . 10674) (punctuation 10663 . 10664) (symbol 10662 . 10663) (TYPENAME 10653 . 10661) (punctuation 10652 . 10653) (TEMPLATE 10643 . 10651) (symbol 10557 . 10566) (punctuation 10555 . 10556) (symbol 10554 . 10555) (TYPENAME 10545 . 10553) (punctuation 10544 . 10545) (TEMPLATE 10535 . 10543) (symbol 10452 . 10461) (punctuation 10450 . 10451) (symbol 10449 . 10450) (TYPENAME 10440 . 10448) (punctuation 10439 . 10440) (TEMPLATE 10430 . 10438) (symbol 10354 . 10363) (punctuation 10352 . 10353) (symbol 10351 . 10352) (TYPENAME 10342 . 10350) (punctuation 10341 . 10342) (TEMPLATE 10332 . 10340) (symbol 10238 . 10247) (punctuation 10236 . 10237) (symbol 10235 . 10236) (TYPENAME 10226 . 10234) (punctuation 10224 . 10225) (symbol 10223 . 10224) (TYPENAME 10214 . 10222) (punctuation 10213 . 10214) (TEMPLATE 10204 . 10212) (symbol 10114 . 10123) (punctuation 10112 . 10113) (symbol 10111 . 10112) (TYPENAME 10102 . 10110) (punctuation 10100 . 10101) (symbol 10099 . 10100) (TYPENAME 10090 . 10098) (punctuation 10089 . 10090) (TEMPLATE 10080 . 10088) (symbol 9986 . 9995) (punctuation 9984 . 9985) (symbol 9983 . 9984) (TYPENAME 9974 . 9982) (punctuation 9972 . 9973) (symbol 9971 . 9972) (TYPENAME 9962 . 9970) (punctuation 9961 . 9962) (TEMPLATE 9952 . 9960) (symbol 9806 . 9815) (punctuation 9804 . 9805) (symbol 9803 . 9804) (TYPENAME 9794 . 9802) (punctuation 9792 . 9793) (symbol 9791 . 9792) (TYPENAME 9782 . 9790) (punctuation 9781 . 9782) (TEMPLATE 9772 . 9780) (symbol 9677 . 9686) (punctuation 9675 . 9676) (symbol 9674 . 9675) (TYPENAME 9665 . 9673) (punctuation 9663 . 9664) (symbol 9662 . 9663) (TYPENAME 9653 . 9661) (punctuation 9652 . 9653) (TEMPLATE 9643 . 9651) (symbol 9494 . 9503) (punctuation 9492 . 9493) (symbol 9491 . 9492) (TYPENAME 9482 . 9490) (punctuation 9480 . 9481) (symbol 9479 . 9480) (TYPENAME 9470 . 9478) (punctuation 9469 . 9470) (TEMPLATE 9460 . 9468) (semantic-list 8696 . 8755) (punctuation 8694 . 8695) (semantic-list 8679 . 8694) (symbol 8671 . 8679) (semantic-list 8681 . 8693) (punctuation 8670 . 8671) (symbol 8662 . 8670) (punctuation 8660 . 8661) (punctuation 8659 . 8660) (symbol 8632 . 8652) (CONST 8626 . 8631) (semantic-list 8606 . 8625) (symbol 8603 . 8606) (symbol 8598 . 8602) (punctuation 8594 . 8595) (symbol 8586 . 8594) (CLASS 8580 . 8585) (punctuation 8579 . 8580) (TEMPLATE 8570 . 8578) (semantic-list 8429 . 8495) (symbol 8408 . 8428) (CONST 8402 . 8407) (semantic-list 8390 . 8401) (symbol 8380 . 8390) (punctuation 8394 . 8395) (symbol 8378 . 8379) (punctuation 8394 . 8395) (symbol 8368 . 8377) (punctuation 8364 . 8365) (symbol 8363 . 8364) (TYPENAME 8354 . 8362) (punctuation 8353 . 8354) (TEMPLATE 8344 . 8352) (semantic-list 8318 . 8340) (symbol 8297 . 8317) (semantic-list 8294 . 8296) (punctuation 8293 . 8294) (OPERATOR 8285 . 8293) (punctuation 8284 . 8285) (symbol 8282 . 8283) (semantic-list 8251 . 8279) (symbol 8230 . 8250) (CONST 8224 . 8229) (semantic-list 8221 . 8223) (punctuation 8220 . 8221) (OPERATOR 8212 . 8220) (punctuation 8211 . 8212) (symbol 8209 . 8210) (CONST 8203 . 8208) (symbol 8193 . 8202) (symbol 8085 . 8094) (symbol 8020 . 8029) (semantic-list 7995 . 8017) (CONST 7989 . 7994) (semantic-list 7986 . 7988) (BOOL 7982 . 7986) (OPERATOR 7973 . 7981) (EXPLICIT 7964 . 7972) (symbol 7954 . 7963) (semantic-list 7920 . 7950) (symbol 7899 . 7919) (semantic-list 7896 . 7898) (symbol 7888 . 7896) (punctuation 7887 . 7888) (symbol 7885 . 7886) (semantic-list 7846 . 7882) (symbol 7825 . 7845) (CONST 7819 . 7824) (semantic-list 7816 . 7818) (symbol 7808 . 7816) (punctuation 7807 . 7808) (symbol 7805 . 7806) (CONST 7799 . 7804) (symbol 7789 . 7798) (symbol 7667 . 7676) (punctuation 7625 . 7626) (DEFAULT 7618 . 7625) (punctuation 7616 . 7617) (semantic-list 7596 . 7615) (punctuation 7595 . 7596) (OPERATOR 7587 . 7595) (punctuation 7586 . 7587) (symbol 7577 . 7585) (symbol 7413 . 7422) (STATIC 7406 . 7412) (punctuation 7335 . 7336) (punctuation 7334 . 7335) (punctuation 7333 . 7334) (punctuation 7332 . 7333) (punctuation 7307 . 7308) (symbol 7299 . 7307) (punctuation 7297 . 7298) (punctuation 7296 . 7297) (punctuation 7295 . 7296) (TYPENAME 7287 . 7295) (punctuation 7286 . 7287) (TEMPLATE 7277 . 7285) (punctuation 7192 . 7193) (DEFAULT 7185 . 7192) (punctuation 7183 . 7184) (semantic-list 7168 . 7182) (punctuation 7167 . 7168) (OPERATOR 7159 . 7167) (punctuation 7179 . 7180) (punctuation 7158 . 7159) (symbol 7149 . 7157) (punctuation 7179 . 7180) (punctuation 7091 . 7092) (punctuation 6996 . 6997) (punctuation 6995 . 6996) (punctuation 6994 . 6995) (punctuation 6993 . 6994) (punctuation 6948 . 6949) (symbol 6940 . 6948) (punctuation 6938 . 6939) (punctuation 6937 . 6938) (punctuation 6936 . 6937) (TYPENAME 6928 . 6936) (punctuation 6927 . 6928) (TEMPLATE 6918 . 6926) (punctuation 6913 . 6914) (DEFAULT 6906 . 6913) (punctuation 6904 . 6905) (semantic-list 6889 . 6903) (symbol 6881 . 6889) (punctuation 6900 . 6901) (symbol 6871 . 6880) (punctuation 6900 . 6901) (punctuation 6828 . 6829) (punctuation 6801 . 6802) (DEFAULT 6794 . 6801) (punctuation 6792 . 6793) (semantic-list 6772 . 6791) (symbol 6764 . 6772) (symbol 6754 . 6763) (punctuation 6656 . 6657) (DEFAULT 6649 . 6656) (punctuation 6647 . 6648) (semantic-list 6644 . 6646) (symbol 6636 . 6644) (symbol 6626 . 6635) (USING 6601 . 6606) (punctuation 6289 . 6290) (punctuation 5942 . 5943) (punctuation 5941 . 5942) (punctuation 5940 . 5941) (punctuation 5939 . 5940) (punctuation 5918 . 5919) (symbol 5914 . 5918) (punctuation 5912 . 5913) (punctuation 5911 . 5912) (punctuation 5910 . 5911) (CLASS 5905 . 5910) (punctuation 5904 . 5905) (TEMPLATE 5895 . 5903) (semantic-list 5722 . 5765) (symbol 5713 . 5721) (symbol 5692 . 5712) (CONST 5686 . 5691) (semantic-list 5683 . 5685) (symbol 5675 . 5683) (punctuation 5674 . 5675) (CONST 5668 . 5673) (symbol 5666 . 5667) (symbol 5656 . 5665) (semantic-list 5610 . 5653) (symbol 5601 . 5609) (symbol 5580 . 5600) (semantic-list 5577 . 5579) (symbol 5569 . 5577) (punctuation 5568 . 5569) (symbol 5566 . 5567) (semantic-list 5544 . 5562) (symbol 5535 . 5543) (CONST 5529 . 5534) (semantic-list 5526 . 5528) (symbol 5518 . 5526) (BOOL 5513 . 5517) (symbol 5503 . 5512) (semantic-list 5430 . 5499) (symbol 5421 . 5429) (semantic-list 5418 . 5420) (symbol 5413 . 5418) (VOID 5408 . 5412) (punctuation 5337 . 5338) (punctuation 5336 . 5337) (punctuation 5335 . 5336) (punctuation 5334 . 5335) (EXPLICIT 5291 . 5299) (symbol 5281 . 5290) (punctuation 5277 . 5278) (symbol 5273 . 5277) (punctuation 5271 . 5272) (punctuation 5270 . 5271) (punctuation 5269 . 5270) (CLASS 5264 . 5269) (punctuation 5263 . 5264) (TEMPLATE 5254 . 5262) (punctuation 5249 . 5250) (DEFAULT 5242 . 5249) (punctuation 5240 . 5241) (semantic-list 5214 . 5239) (punctuation 5213 . 5214) (OPERATOR 5205 . 5213) (punctuation 5232 . 5233) (punctuation 5204 . 5205) (symbol 5188 . 5203) (punctuation 5232 . 5233) (punctuation 5184 . 5185) (DEFAULT 5177 . 5184) (punctuation 5175 . 5176) (semantic-list 5144 . 5174) (punctuation 5143 . 5144) (OPERATOR 5135 . 5143) (punctuation 5134 . 5135) (symbol 5118 . 5133) (punctuation 5113 . 5114) (DEFAULT 5106 . 5113) (punctuation 5104 . 5105) (semantic-list 5078 . 5103) (symbol 5063 . 5078) (punctuation 5096 . 5097) (symbol 5053 . 5062) (punctuation 5096 . 5097) (punctuation 5049 . 5050) (DEFAULT 5042 . 5049) (punctuation 5040 . 5041) (semantic-list 5009 . 5039) (symbol 4994 . 5009) (symbol 4984 . 4993) (semantic-list 4978 . 4980) (semantic-list 4975 . 4977) (symbol 4970 . 4975) (punctuation 4968 . 4969) (symbol 4959 . 4967) (semantic-list 4956 . 4958) (symbol 4941 . 4956) (symbol 4931 . 4940) (punctuation 4926 . 4927) (DEFAULT 4919 . 4926) (punctuation 4917 . 4918) (semantic-list 4914 . 4916) (symbol 4899 . 4914) (punctuation 4898 . 4899) (punctuation 4484 . 4485) (punctuation 3951 . 3952) (punctuation 3604 . 3605) (punctuation 3603 . 3604) (punctuation 3602 . 3603) (punctuation 3601 . 3602) (punctuation 3580 . 3581) (symbol 3576 . 3580) (punctuation 3574 . 3575) (punctuation 3573 . 3574) (punctuation 3572 . 3573) (CLASS 3567 . 3572) (punctuation 3566 . 3567) (TEMPLATE 3557 . 3565) (semantic-list 3384 . 3427) (symbol 3375 . 3383) (symbol 3354 . 3374) (CONST 3348 . 3353) (semantic-list 3345 . 3347) (symbol 3337 . 3345) (punctuation 3336 . 3337) (CONST 3330 . 3335) (symbol 3328 . 3329) (symbol 3318 . 3327) (semantic-list 3272 . 3315) (symbol 3263 . 3271) (symbol 3242 . 3262) (semantic-list 3239 . 3241) (symbol 3231 . 3239) (punctuation 3230 . 3231) (symbol 3228 . 3229) (semantic-list 3206 . 3224) (symbol 3197 . 3205) (CONST 3191 . 3196) (semantic-list 3188 . 3190) (symbol 3180 . 3188) (BOOL 3175 . 3179) (symbol 3165 . 3174) (semantic-list 3092 . 3161) (symbol 3083 . 3091) (semantic-list 3080 . 3082) (symbol 3075 . 3080) (VOID 3070 . 3074) (punctuation 2999 . 3000) (punctuation 2998 . 2999) (punctuation 2997 . 2998) (punctuation 2996 . 2997) (EXPLICIT 2953 . 2961) (symbol 2943 . 2952) (punctuation 2939 . 2940) (symbol 2935 . 2939) (punctuation 2933 . 2934) (punctuation 2932 . 2933) (punctuation 2931 . 2932) (CLASS 2926 . 2931) (punctuation 2925 . 2926) (TEMPLATE 2916 . 2924) (punctuation 2806 . 2807) (punctuation 2586 . 2587) (symbol 2577 . 2585) (semantic-list 2574 . 2576) (symbol 2559 . 2574) (symbol 2549 . 2558) (punctuation 2418 . 2419) (semantic-list 2049 . 2418) (punctuation 2047 . 2048) (BOOL 2042 . 2046) (punctuation 2030 . 2031) (symbol 2029 . 2030) (TYPENAME 2020 . 2028) (punctuation 2019 . 2020) (TEMPLATE 2010 . 2018))
      :lexical-table 
        '(("LLVM_ADT_OPTIONAL_H")
          )
)
    (semanticdb-table "semanticdb-table-155561e95438"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_STLARRAYEXTRAS_H" variable (:constant-flag t) nil [653 678])
            ("cstddef" include (:system-flag t) nil [680 698])
            ("llvm" type
               (:members 
                  ( ("array_lengthof" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1021 1026]))                          
                        :type ("size_t" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [992 1046]))                  
                :type "namespace")
                nil [700 1049]))          
      :file "STLArrayExtras.h"
      :pointmax 1109
      :fsize 1108
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((semantic-list 1026 . 1029) (semantic-list 1023 . 1026) (symbol 982 . 991) (punctuation 980 . 981) (symbol 979 . 980) (symbol 972 . 978) (punctuation 971 . 972) (punctuation 970 . 971) (symbol 967 . 970) (punctuation 965 . 966) (symbol 964 . 965) (CLASS 958 . 963) (punctuation 957 . 958) (TEMPLATE 948 . 956))
      :lexical-table 
        '(("LLVM_ADT_STLARRAYEXTRAS_H")
          )
)
    (semanticdb-table "semanticdb-table-155561e95498"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_STLFORWARDCOMPAT_H" variable (:constant-flag t) nil [709 736])
            ("type_traits" include (:system-flag t) nil [738 760])
            ("llvm" type
               (:members 
                  ( ("conjunction" type
                       (:superclasses 
                          ( ("std::true_type" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [1129 1213])
                    ("conjunction" type
                       (:template 
                          ( ("B1" type (:type "class") nil nil))                          
                        :type "struct"
                        :superclasses 
                          ( ("B1" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :template-specifier 
                          ( ("B1" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [1214 1268])
                    ("type" variable (:type "int") (reparse-symbol namespacesubparts) [1403 1411])
                    ("disjunction" type
                       (:superclasses 
                          ( ("std::false_type" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [1436 1521])
                    ("disjunction" type
                       (:template 
                          ( ("B1" type (:type "class") nil nil))                          
                        :type "struct"
                        :superclasses 
                          ( ("B1" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :template-specifier 
                          ( ("B1" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [1522 1576])
                    ("type" variable (:type "int") (reparse-symbol namespacesubparts) [1711 1719])
                    ("in_place_t" type (:type "struct") (reparse-symbol namespacesubparts) [1721 1819])
                    ("in_place" variable (:type ("in_place_t" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [1911 1931])
                    ("in_place_type_t" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [1974 2104])
                    ("in_place_index_t" type
                       (:template 
                          ( ("std::size_t" type (:typevar "I") nil nil))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [2106 2241])
                    ("remove_cvref" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("std::remove_cv_t" variable (:type "int") (reparse-symbol classsubparts) [2533 2578]))                          )
                        (reparse-symbol namespacesubparts) [2433 2581])
                    ("llvm::remove_cvref::type" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol namespacesubparts) [2673 2710]))                  
                :type "namespace")
                nil [762 2713]))          
      :file "STLForwardCompat.h"
      :pointmax 2771
      :fsize 2770
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 2671 . 2672) (symbol 2611 . 2625) (USING 2605 . 2610) (punctuation 2603 . 2604) (symbol 2602 . 2603) (TYPENAME 2593 . 2601) (punctuation 2592 . 2593) (TEMPLATE 2583 . 2591) (punctuation 2531 . 2532) (symbol 2526 . 2530) (USING 2520 . 2525) (punctuation 2237 . 2238) (DEFAULT 2230 . 2237) (punctuation 2228 . 2229) (semantic-list 2225 . 2227) (symbol 2209 . 2225) (EXPLICIT 2200 . 2208) (punctuation 2100 . 2101) (DEFAULT 2093 . 2100) (punctuation 2091 . 2092) (semantic-list 2088 . 2090) (symbol 2073 . 2088) (EXPLICIT 2064 . 2072) (symbol 1901 . 1910) (punctuation 1815 . 1816) (DEFAULT 1808 . 1815) (punctuation 1806 . 1807) (semantic-list 1803 . 1805) (symbol 1793 . 1803) (EXPLICIT 1784 . 1792) (punctuation 1710 . 1711) (punctuation 1709 . 1710) (punctuation 1708 . 1709) (punctuation 1707 . 1708) (punctuation 1706 . 1707) (punctuation 1705 . 1706) (punctuation 1704 . 1705) (symbol 1702 . 1704) (punctuation 1701 . 1702) (symbol 1690 . 1701) (punctuation 1688 . 1689) (symbol 1686 . 1688) (punctuation 1684 . 1685) (semantic-list 1673 . 1684) (BOOL 1669 . 1673) (punctuation 1668 . 1669) (symbol 1657 . 1668) (punctuation 1656 . 1657) (punctuation 1655 . 1656) (symbol 1652 . 1655) (punctuation 1650 . 1651) (punctuation 1644 . 1645) (punctuation 1643 . 1644) (punctuation 1642 . 1643) (punctuation 1641 . 1642) (symbol 1639 . 1641) (punctuation 1637 . 1638) (symbol 1635 . 1637) (punctuation 1634 . 1635) (symbol 1623 . 1634) (STRUCT 1616 . 1622) (punctuation 1614 . 1615) (symbol 1612 . 1614) (punctuation 1610 . 1611) (punctuation 1609 . 1610) (punctuation 1608 . 1609) (TYPENAME 1600 . 1608) (punctuation 1598 . 1599) (symbol 1596 . 1598) (TYPENAME 1587 . 1595) (punctuation 1586 . 1587) (TEMPLATE 1577 . 1585) (punctuation 1434 . 1435) (punctuation 1433 . 1434) (punctuation 1432 . 1433) (punctuation 1431 . 1432) (TYPENAME 1423 . 1431) (punctuation 1422 . 1423) (TEMPLATE 1413 . 1421) (punctuation 1402 . 1403) (punctuation 1401 . 1402) (punctuation 1400 . 1401) (symbol 1398 . 1400) (punctuation 1396 . 1397) (punctuation 1395 . 1396) (punctuation 1394 . 1395) (punctuation 1393 . 1394) (punctuation 1392 . 1393) (symbol 1390 . 1392) (punctuation 1389 . 1390) (symbol 1378 . 1389) (punctuation 1376 . 1377) (semantic-list 1365 . 1376) (BOOL 1361 . 1365) (punctuation 1360 . 1361) (symbol 1349 . 1360) (punctuation 1348 . 1349) (punctuation 1347 . 1348) (symbol 1344 . 1347) (punctuation 1342 . 1343) (punctuation 1336 . 1337) (punctuation 1335 . 1336) (punctuation 1334 . 1335) (punctuation 1333 . 1334) (symbol 1331 . 1333) (punctuation 1329 . 1330) (symbol 1327 . 1329) (punctuation 1326 . 1327) (symbol 1315 . 1326) (STRUCT 1308 . 1314) (punctuation 1306 . 1307) (symbol 1304 . 1306) (punctuation 1302 . 1303) (punctuation 1301 . 1302) (punctuation 1300 . 1301) (TYPENAME 1292 . 1300) (punctuation 1290 . 1291) (symbol 1288 . 1290) (TYPENAME 1279 . 1287) (punctuation 1278 . 1279) (TEMPLATE 1269 . 1277) (punctuation 1127 . 1128) (punctuation 1126 . 1127) (punctuation 1125 . 1126) (punctuation 1124 . 1125) (TYPENAME 1116 . 1124) (punctuation 1115 . 1116) (TEMPLATE 1106 . 1114) (punctuation 1103 . 1104) (semantic-list 1101 . 1103) (punctuation 1099 . 1100) (semantic-list 1089 . 1099) (BOOL 1085 . 1089) (punctuation 1084 . 1085) (punctuation 1082 . 1083) (BOOL 1078 . 1082) (punctuation 1077 . 1078) (symbol 1060 . 1077) (punctuation 1059 . 1060) (punctuation 1058 . 1059) (symbol 1055 . 1058) (punctuation 1053 . 1054) (symbol 999 . 1007) (STRUCT 992 . 998) (punctuation 990 . 991) (symbol 989 . 990) (TYPENAME 980 . 988) (punctuation 979 . 980) (TEMPLATE 970 . 978))
      :lexical-table 
        '(("LLVM_ADT_STLFORWARDCOMPAT_H")
          )
)
    (semanticdb-table "semanticdb-table-155561e954f8"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_STLFUNCTIONALEXTRAS_H" variable (:constant-flag t) nil [616 646])
            ("llvm/ADT/STLForwardCompat.h" include nil nil [648 686])
            ("type_traits" include (:system-flag t) nil [688 710])
            ("utility" include (:system-flag t) nil [711 729])
            ("cstdint" include (:system-flag t) nil [730 748])
            ("llvm" type
               (:members 
                  ( ("function_ref" type
                       (:template 
                          ( ("Fn" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [1268 1309]))                  
                :type "namespace")
                nil [750 2642]))          
      :file "STLFunctionalExtras.h"
      :pointmax 2707
      :fsize 2706
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 2638 . 2639) (semantic-list 1389 . 2638) (punctuation 1387 . 1388) (semantic-list 1376 . 1387) (symbol 1373 . 1376) (punctuation 1372 . 1373) (symbol 1360 . 1372) (CLASS 1354 . 1359) (punctuation 1352 . 1353) (symbol 1346 . 1352) (punctuation 1345 . 1346) (punctuation 1344 . 1345) (punctuation 1343 . 1344) (TYPENAME 1334 . 1342) (punctuation 1332 . 1333) (symbol 1329 . 1332) (TYPENAME 1320 . 1328) (punctuation 1319 . 1320) (TEMPLATE 1311 . 1319))
      :lexical-table 
        '(("LLVM_ADT_STLFUNCTIONALEXTRAS_H")
          )
)
    (semanticdb-table "semanticdb-table-155561e95558"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_IDENTITY_H" variable (:constant-flag t) nil [620 639])
            ("llvm" type
               (:members 
                  ( ("identity" type
                       (:template 
                          ( ("Ty" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("argument_type" variable
                               (:default-value "Ty"
                                :type "int")
                                (reparse-symbol classsubparts) [706 725])
                            ("()" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("self" variable
                                       (:reference 1
                                        :type ("Ty" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [744 753]))                                  
                                :type ("Ty" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [729 782])
                            ("()" function
                               (:methodconst-flag t
                                :operator-flag t
                                :constant-flag t
                                :arguments 
                                  ( ("self" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Ty" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [806 821]))                                  
                                :type ("Ty" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [785 850]))                          )
                        (reparse-symbol namespacesubparts) [660 853]))                  
                :type "namespace")
                nil [642 856]))          
      :file "identity.h"
      :pointmax 910
      :fsize 909
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((USING 700 . 705))
      :lexical-table 
        '(("LLVM_ADT_IDENTITY_H")
          )
)
    (semanticdb-table "semanticdb-table-155561e955b8"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_ITERATOR_H" variable (:constant-flag t) nil [407 426])
            ("llvm/ADT/iterator_range.h" include nil nil [428 464])
            ("cstddef" include (:system-flag t) nil [465 483])
            ("iterator" include (:system-flag t) nil [484 503])
            ("type_traits" include (:system-flag t) nil [504 526])
            ("utility" include (:system-flag t) nil [527 545])
            ("llvm" type
               (:members 
                  ( ("iterator_facade_base" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [3370 3377])
                            ("iterator_category" variable
                               (:default-value "IteratorCategoryT"
                                :type "int")
                                (reparse-symbol classsubparts) [3386 3424])
                            ("value_type" variable
                               (:default-value "T"
                                :type "int")
                                (reparse-symbol classsubparts) [3433 3448])
                            ("difference_type" variable
                               (:default-value "DifferenceTypeT"
                                :type "int")
                                (reparse-symbol classsubparts) [3457 3491])
                            ("pointer" variable
                               (:default-value "PointerT"
                                :type "int")
                                (reparse-symbol classsubparts) [3500 3519])
                            ("reference" variable
                               (:default-value "ReferenceT"
                                :type "int")
                                (reparse-symbol classsubparts) [3528 3551])
                            ("protected" label nil (reparse-symbol classsubparts) [3553 3563])
                            ("" type
                               (:members 
                                  ( ("IsRandomAccess" variable
                                       (:constant-flag t
                                        :default-value (3594 3597)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3577 3597])
                                    ("is_base_of" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3599 3610])
                                    ("std" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3610 3614])
                                    ("random_access_iterator_tag" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3615 3642])
                                    ("IteratorCategoryT" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3680 3698])
                                    ("value" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3700 3706])
                                    ("IsBidirectional" variable
                                       (:constant-flag t
                                        :default-value (3729 3732)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3711 3732])
                                    ("is_base_of" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3734 3745])
                                    ("std" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3745 3749])
                                    ("bidirectional_iterator_tag" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3750 3777])
                                    ("IteratorCategoryT" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3816 3834])
                                    ("value" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3836 3842]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [3566 3847])
                            ("ReferenceProxy" type
                               (:members 
                                  ( ("iterator_facade_base" variable
                                       (:typemodifiers ("friend")
                                        :type "int")
                                        (reparse-symbol classsubparts) [4223 4251])
                                    ("I" variable (:type ("DerivedT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4257 4268])
                                    ("ReferenceProxy" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("I" variable (:type ("DerivedT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4289 4300]))                                          
                                        :type ("ReferenceProxy" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [4274 4321])
                                    ("public" label nil (reparse-symbol classsubparts) [4325 4332])
                                    ("ReferenceT" function
                                       (:methodconst-flag t
                                        :type "int")
                                        (reparse-symbol classsubparts) [4346 4379]))                                  
                                :type "class")
                                (reparse-symbol classsubparts) [4196 4384])
                            ("PointerProxy" type
                               (:members 
                                  ( ("iterator_facade_base" variable
                                       (:typemodifiers ("friend")
                                        :type "int")
                                        (reparse-symbol classsubparts) [4709 4737])
                                    ("R" variable (:type ("ReferenceT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4743 4756])
                                    ("PointerProxy" function
                                       (:template 
                                          ( ("RefT" type (:type "class") nil nil))                                          
                                        :type ("PointerProxy" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("RefT" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4804 4811])
                                            ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4811 4813]))                                          
                                        :constructor-flag t)
                                        (reparse-symbol classsubparts) [4762 4843])
                                    ("public" label nil (reparse-symbol classsubparts) [4847 4854])
                                    ("->" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :type ("PointerT" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [4859 4901]))                                  
                                :type "class")
                                (reparse-symbol classsubparts) [4684 4906])
                            ("public" label nil (reparse-symbol classsubparts) [4908 4915])
                            ("+" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("n" variable (:type ("DifferenceTypeT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4937 4955]))                                  
                                :type ("DerivedT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4918 5312])
                            ("+" function
                               (:operator-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("n" variable (:type ("DifferenceTypeT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5341 5359])
                                    ("i" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DerivedT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5360 5378]))                                  
                                :type ("DerivedT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5315 5519])
                            ("-" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("n" variable (:type ("DifferenceTypeT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5541 5559]))                                  
                                :type ("DerivedT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5522 5775])
                            ("++" function
                               (:operator-flag t
                                :type ("DerivedT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5779 6005])
                            ("++" function
                               (:operator-flag t
                                :arguments 
                                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [6028 6032]))                                  
                                :type ("DerivedT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6008 6143])
                            ("--" function
                               (:operator-flag t
                                :type ("DerivedT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6146 6355])
                            ("--" function
                               (:operator-flag t
                                :arguments 
                                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [6378 6382]))                                  
                                :type ("DerivedT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6358 6617])
                            ("!=" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DerivedT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6677 6697]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [6661 6768])
                            (">" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DerivedT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6794 6814]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [6779 7067])
                            ("<=" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DerivedT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7086 7106]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [7070 7298])
                            (">=" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DerivedT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7317 7337]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [7301 7529])
                            ("->" function
                               (:methodconst-flag t
                                :operator-flag t
                                :type ("PointerProxy" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7533 7631])
                            ("[]" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("n" variable (:type ("DifferenceTypeT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7660 7678]))                                  
                                :type ("ReferenceProxy" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7634 7866]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [3341 7869])
                    ("iterator_adaptor_base" type
                       (:superclasses 
                          ( ("iterator_facade_base" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("iterator_adaptor_base::iterator_facade_base" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [9184 9237])
                            ("protected" label nil (reparse-symbol classsubparts) [9239 9249])
                            ("I" variable (:type ("WrappedIteratorT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9252 9271])
                            ("iterator_adaptor_base" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("u" variable (:type ("WrappedIteratorT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9344 9363]))                                  
                                :type ("iterator_adaptor_base" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9322 9529])
                            ("wrapped" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("WrappedIteratorT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9533 9586])
                            ("public" label nil (reparse-symbol classsubparts) [9588 9595])
                            ("difference_type" variable
                               (:default-value "DifferenceTypeT"
                                :type "int")
                                (reparse-symbol classsubparts) [9604 9638])
                            ("+=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("n" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9663 9681]))                                  
                                :type ("DerivedT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9642 9867])
                            ("-=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("n" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9891 9909]))                                  
                                :type ("DerivedT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9870 10095])
                            ("-" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DerivedT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10150 10170]))                                  
                                :type ("difference_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10124 10328])
                            ("++" function
                               (:operator-flag t
                                :type ("DerivedT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10501 10581])
                            ("--" function
                               (:operator-flag t
                                :type ("DerivedT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10611 10822])
                            ("==" function
                               (:operator-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("iterator_adaptor_base" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10849 10882])
                                    ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("iterator_adaptor_base" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10908 10941]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [10826 10974])
                            ("<" function
                               (:operator-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("iterator_adaptor_base" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10999 11032])
                                    ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("iterator_adaptor_base" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11057 11090]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [10977 11251])
                            ("" function
                               (:methodconst-flag t
                                :operator-flag t
                                :function-pointer t
                                :type ("ReferenceT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11255 11298]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [8999 11301])
                    ("make_pointee_range" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("RangeT" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12395 12404])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12404 12410]))                          
                        :type ("iterator_range" type
                             (:template-specifier 
                                ( ("pointee_iterator" type (:template-specifier 
                                    ( ("WrappedIteratorT" type nil nil nil))                                    ) nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [12325 12634])
                    ("make_pointer_range" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("RangeT" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13391 13400])
                            ("" variable (:type ("Range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13400 13406]))                          
                        :type ("iterator_range" type
                             (:template-specifier 
                                ( ("pointer_iterator" type (:template-specifier 
                                    ( ("WrappedIteratorT" type nil nil nil))                                    ) nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [13321 13630])
                    ("pointer_iterator" variable (:type "int") (reparse-symbol namespacesubparts) [13860 13921]))                  
                :type "namespace")
                nil [547 13924]))          
      :file "iterator.h"
      :pointmax 13978
      :fsize 13977
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 13854 . 13855) (symbol 13833 . 13853) (USING 13827 . 13832) (punctuation 13825 . 13826) (punctuation 13824 . 13825) (symbol 13822 . 13824) (punctuation 13821 . 13822) (symbol 13808 . 13821) (punctuation 13807 . 13808) (punctuation 13806 . 13807) (symbol 13803 . 13806) (punctuation 13801 . 13802) (symbol 13798 . 13800) (TYPENAME 13789 . 13797) (punctuation 13777 . 13778) (punctuation 13776 . 13777) (semantic-list 13725 . 13776) (symbol 13717 . 13725) (semantic-list 13773 . 13775) (punctuation 13742 . 13743) (punctuation 13741 . 13742) (punctuation 13716 . 13717) (symbol 13698 . 13716) (punctuation 13697 . 13698) (punctuation 13696 . 13697) (symbol 13693 . 13696) (punctuation 13691 . 13692) (symbol 13688 . 13690) (TYPENAME 13679 . 13687) (punctuation 13667 . 13668) (symbol 13651 . 13667) (TYPENAME 13642 . 13650) (punctuation 13641 . 13642) (TEMPLATE 13632 . 13640) (punctuation 13399 . 13400) (punctuation 13319 . 13320) (semantic-list 13283 . 13319) (symbol 13275 . 13283) (semantic-list 13294 . 13318) (punctuation 13242 . 13243) (symbol 13225 . 13241) (TYPENAME 13216 . 13224) (punctuation 13214 . 13215) (symbol 13208 . 13214) (TYPENAME 13199 . 13207) (punctuation 13198 . 13199) (TEMPLATE 13189 . 13197) (punctuation 13186 . 13187) (semantic-list 12959 . 13186) (punctuation 12957 . 12958) (symbol 12956 . 12957) (punctuation 12944 . 12945) (symbol 12927 . 12944) (punctuation 12926 . 12927) (punctuation 12925 . 12926) (punctuation 12924 . 12925) (symbol 12908 . 12924) (punctuation 12907 . 12908) (symbol 12892 . 12907) (punctuation 12891 . 12892) (punctuation 12890 . 12891) (symbol 12887 . 12890) (TYPENAME 12878 . 12886) (punctuation 12866 . 12867) (symbol 12850 . 12866) (punctuation 12848 . 12849) (punctuation 12847 . 12848) (symbol 12846 . 12847) (punctuation 12844 . 12845) (symbol 12828 . 12844) (punctuation 12827 . 12828) (symbol 12811 . 12827) (punctuation 12799 . 12800) (symbol 12778 . 12799) (PUBLIC 12771 . 12777) (punctuation 12769 . 12770) (symbol 12748 . 12764) (CLASS 12742 . 12747) (punctuation 12740 . 12741) (semantic-list 12704 . 12740) (symbol 12696 . 12704) (semantic-list 12737 . 12739) (punctuation 12706 . 12707) (punctuation 12705 . 12706) (punctuation 12694 . 12695) (symbol 12692 . 12693) (TYPENAME 12683 . 12691) (punctuation 12671 . 12672) (symbol 12655 . 12671) (TYPENAME 12646 . 12654) (punctuation 12645 . 12646) (TEMPLATE 12636 . 12644) (punctuation 12403 . 12404) (punctuation 12323 . 12324) (semantic-list 12287 . 12323) (symbol 12279 . 12287) (semantic-list 12298 . 12322) (punctuation 12246 . 12247) (symbol 12229 . 12245) (TYPENAME 12220 . 12228) (punctuation 12218 . 12219) (symbol 12212 . 12218) (TYPENAME 12203 . 12211) (punctuation 12202 . 12203) (TEMPLATE 12193 . 12201) (punctuation 12190 . 12191) (semantic-list 11985 . 12190) (punctuation 11983 . 11984) (symbol 11982 . 11983) (punctuation 11970 . 11971) (symbol 11953 . 11970) (punctuation 11952 . 11953) (punctuation 11951 . 11952) (punctuation 11950 . 11951) (symbol 11934 . 11950) (punctuation 11933 . 11934) (symbol 11918 . 11933) (punctuation 11917 . 11918) (punctuation 11916 . 11917) (symbol 11913 . 11916) (TYPENAME 11904 . 11912) (punctuation 11892 . 11893) (symbol 11876 . 11892) (punctuation 11874 . 11875) (punctuation 11873 . 11874) (symbol 11872 . 11873) (punctuation 11870 . 11871) (symbol 11854 . 11870) (punctuation 11853 . 11854) (symbol 11837 . 11853) (punctuation 11825 . 11826) (symbol 11804 . 11825) (punctuation 11802 . 11803) (symbol 11781 . 11797) (STRUCT 11774 . 11780) (punctuation 11772 . 11773) (punctuation 11771 . 11772) (semantic-list 11720 . 11771) (symbol 11712 . 11720) (semantic-list 11768 . 11770) (punctuation 11737 . 11738) (punctuation 11736 . 11737) (punctuation 11711 . 11712) (symbol 11693 . 11711) (punctuation 11692 . 11693) (punctuation 11691 . 11692) (symbol 11688 . 11691) (punctuation 11686 . 11687) (symbol 11684 . 11685) (TYPENAME 11675 . 11683) (punctuation 11663 . 11664) (symbol 11647 . 11663) (TYPENAME 11638 . 11646) (punctuation 11637 . 11638) (TEMPLATE 11628 . 11636) (punctuation 10607 . 10608) (punctuation 10606 . 10607) (punctuation 10605 . 10606) (OPERATOR 10597 . 10605) (punctuation 10596 . 10597) (punctuation 10595 . 10596) (symbol 10590 . 10595) (USING 10584 . 10589) (punctuation 10497 . 10498) (punctuation 10496 . 10497) (punctuation 10495 . 10496) (OPERATOR 10487 . 10495) (punctuation 10486 . 10487) (punctuation 10485 . 10486) (symbol 10480 . 10485) (USING 10474 . 10479) (punctuation 10120 . 10121) (punctuation 10119 . 10120) (OPERATOR 10111 . 10119) (punctuation 10110 . 10111) (punctuation 10109 . 10110) (symbol 10104 . 10109) (USING 10098 . 10103) (USING 9598 . 9603) (EXPLICIT 9313 . 9321) (punctuation 9308 . 9309) (DEFAULT 9301 . 9308) (punctuation 9299 . 9300) (semantic-list 9296 . 9298) (symbol 9275 . 9296) (punctuation 9182 . 9183) (symbol 9176 . 9181) (USING 9170 . 9175) (punctuation 8997 . 8998) (punctuation 8996 . 8997) (punctuation 8995 . 8996) (symbol 8993 . 8994) (punctuation 8991 . 8992) (symbol 8982 . 8991) (punctuation 8981 . 8982) (punctuation 8980 . 8981) (punctuation 8979 . 8980) (symbol 8963 . 8979) (punctuation 8962 . 8963) (symbol 8947 . 8962) (punctuation 8946 . 8947) (punctuation 8945 . 8946) (symbol 8942 . 8945) (TYPENAME 8933 . 8941) (punctuation 8923 . 8924) (symbol 8918 . 8923) (punctuation 8917 . 8918) (punctuation 8916 . 8917) (punctuation 8915 . 8916) (symbol 8905 . 8915) (punctuation 8904 . 8905) (punctuation 8903 . 8904) (punctuation 8902 . 8903) (symbol 8886 . 8902) (punctuation 8856 . 8857) (symbol 8841 . 8856) (punctuation 8840 . 8841) (punctuation 8839 . 8840) (symbol 8836 . 8839) (TYPENAME 8827 . 8835) (punctuation 8825 . 8826) (symbol 8824 . 8825) (punctuation 8823 . 8824) (symbol 8816 . 8823) (punctuation 8815 . 8816) (punctuation 8814 . 8815) (symbol 8811 . 8814) (punctuation 8801 . 8802) (symbol 8788 . 8801) (punctuation 8787 . 8788) (punctuation 8786 . 8787) (symbol 8783 . 8786) (punctuation 8781 . 8782) (symbol 8770 . 8780) (TYPENAME 8761 . 8769) (punctuation 8755 . 8756) (punctuation 8754 . 8755) (punctuation 8753 . 8754) (symbol 8751 . 8752) (punctuation 8749 . 8750) (symbol 8742 . 8749) (punctuation 8741 . 8742) (punctuation 8740 . 8741) (punctuation 8739 . 8740) (symbol 8723 . 8739) (punctuation 8722 . 8723) (symbol 8707 . 8722) (punctuation 8706 . 8707) (punctuation 8705 . 8706) (symbol 8702 . 8705) (TYPENAME 8693 . 8701) (punctuation 8683 . 8684) (symbol 8678 . 8683) (punctuation 8677 . 8678) (punctuation 8676 . 8677) (punctuation 8675 . 8676) (symbol 8665 . 8675) (punctuation 8664 . 8665) (punctuation 8663 . 8664) (punctuation 8662 . 8663) (symbol 8646 . 8662) (punctuation 8616 . 8617) (symbol 8601 . 8616) (punctuation 8600 . 8601) (punctuation 8599 . 8600) (symbol 8596 . 8599) (TYPENAME 8587 . 8595) (punctuation 8585 . 8586) (symbol 8584 . 8585) (punctuation 8583 . 8584) (symbol 8576 . 8583) (punctuation 8575 . 8576) (punctuation 8574 . 8575) (symbol 8571 . 8574) (punctuation 8561 . 8562) (symbol 8548 . 8561) (punctuation 8547 . 8548) (punctuation 8546 . 8547) (symbol 8543 . 8546) (punctuation 8541 . 8542) (symbol 8532 . 8540) (TYPENAME 8523 . 8531) (punctuation 8517 . 8518) (symbol 8502 . 8517) (punctuation 8501 . 8502) (punctuation 8500 . 8501) (punctuation 8499 . 8500) (symbol 8483 . 8499) (punctuation 8482 . 8483) (symbol 8467 . 8482) (punctuation 8466 . 8467) (punctuation 8465 . 8466) (symbol 8462 . 8465) (TYPENAME 8453 . 8461) (punctuation 8443 . 8444) (symbol 8427 . 8442) (TYPENAME 8418 . 8426) (punctuation 8412 . 8413) (symbol 8402 . 8412) (punctuation 8401 . 8402) (punctuation 8400 . 8401) (punctuation 8399 . 8400) (symbol 8383 . 8399) (punctuation 8382 . 8383) (symbol 8367 . 8382) (punctuation 8366 . 8367) (punctuation 8365 . 8366) (symbol 8362 . 8365) (TYPENAME 8353 . 8361) (punctuation 8351 . 8352) (symbol 8349 . 8350) (TYPENAME 8340 . 8348) (punctuation 8334 . 8335) (symbol 8317 . 8334) (punctuation 8316 . 8317) (punctuation 8315 . 8316) (punctuation 8314 . 8315) (symbol 8298 . 8314) (punctuation 8297 . 8298) (symbol 8282 . 8297) (punctuation 8281 . 8282) (punctuation 8280 . 8281) (symbol 8277 . 8280) (TYPENAME 8268 . 8276) (punctuation 8258 . 8259) (symbol 8240 . 8257) (TYPENAME 8231 . 8239) (punctuation 8225 . 8226) (symbol 8209 . 8225) (TYPENAME 8200 . 8208) (punctuation 8198 . 8199) (symbol 8190 . 8198) (TYPENAME 8181 . 8189) (punctuation 8175 . 8176) (TEMPLATE 8166 . 8174) (punctuation 4810 . 4811) (punctuation 4810 . 4811) (OPERATOR 4337 . 4345) (OPERATOR 4337 . 4345) (punctuation 3835 . 3836) (punctuation 3834 . 3835) (punctuation 3833 . 3834) (punctuation 3749 . 3750) (punctuation 3748 . 3749) (punctuation 3744 . 3745) (punctuation 3733 . 3734) (punctuation 3732 . 3733) (punctuation 3699 . 3700) (punctuation 3698 . 3699) (punctuation 3697 . 3698) (punctuation 3614 . 3615) (punctuation 3613 . 3614) (punctuation 3609 . 3610) (punctuation 3598 . 3599) (punctuation 3597 . 3598) (punctuation 3835 . 3836) (punctuation 3834 . 3835) (punctuation 3833 . 3834) (punctuation 3749 . 3750) (punctuation 3748 . 3749) (punctuation 3744 . 3745) (punctuation 3733 . 3734) (punctuation 3732 . 3733) (punctuation 3699 . 3700) (punctuation 3698 . 3699) (punctuation 3697 . 3698) (punctuation 3614 . 3615) (punctuation 3613 . 3614) (punctuation 3609 . 3610) (punctuation 3598 . 3599) (punctuation 3597 . 3598) (USING 3522 . 3527) (USING 3494 . 3499) (USING 3451 . 3456) (USING 3427 . 3432) (USING 3380 . 3385) (punctuation 3339 . 3340) (punctuation 3338 . 3339) (symbol 3336 . 3337) (punctuation 3334 . 3335) (symbol 3323 . 3333) (TYPENAME 3314 . 3322) (punctuation 3302 . 3303) (punctuation 3301 . 3302) (symbol 3299 . 3300) (punctuation 3297 . 3298) (symbol 3288 . 3296) (TYPENAME 3279 . 3287) (punctuation 3277 . 3278) (symbol 3268 . 3277) (punctuation 3267 . 3268) (punctuation 3266 . 3267) (symbol 3263 . 3266) (punctuation 3261 . 3262) (symbol 3245 . 3260) (TYPENAME 3236 . 3244) (punctuation 3224 . 3225) (symbol 3223 . 3224) (TYPENAME 3214 . 3222) (punctuation 3212 . 3213) (symbol 3195 . 3212) (TYPENAME 3186 . 3194) (punctuation 3184 . 3185) (symbol 3176 . 3184) (TYPENAME 3167 . 3175) (punctuation 3166 . 3167) (TEMPLATE 3157 . 3165))
      :lexical-table 
        '(("LLVM_ADT_ITERATOR_H")
          )
)
    (semanticdb-table "semanticdb-table-155561e95618"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_ITERATOR_RANGE_H" variable (:constant-flag t) nil [865 890])
            ("utility" include (:system-flag t) nil [892 910])
            ("llvm" type
               (:members 
                  ( ("iterator_range" type
                       (:template 
                          ( ("IteratorT" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("begin_iterator" variable (:type ("IteratorT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1129 1168])
                            ("end_iterator" variable (:type ("IteratorT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1129 1168])
                            ("public" label nil (reparse-symbol classsubparts) [1170 1177])
                            ("iterator_range" function
                               (:template 
                                  ( ("Container" type (:type "class") nil nil))                                  
                                :type ("iterator_range" type (:type "class") nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Container" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1326 1338])
                                    ("" variable (:type ("c" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1338 1340]))                                  
                                :constructor-flag t)
                                (reparse-symbol classsubparts) [1279 1451])
                            ("iterator_range" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("begin_iterator" variable (:type ("IteratorT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1469 1494])
                                    ("end_iterator" variable (:type ("IteratorT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1495 1518]))                                  
                                :type ("iterator_range" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1454 1618])
                            ("begin" function
                               (:methodconst-flag t
                                :type ("IteratorT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1622 1672])
                            ("end" function
                               (:methodconst-flag t
                                :type ("IteratorT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1675 1721])
                            ("empty" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [1724 1785]))                          )
                        (reparse-symbol namespacesubparts) [1074 1788])
                    ("make_range" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("iterator_range" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("x" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2028 2032])
                            ("y" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2033 2037]))                          )
                        (reparse-symbol namespacesubparts) [1980 2097])
                    ("make_range" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("iterator_range" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("p" variable (:type ("std::pair" type
                                 (:template-specifier 
                                    ( ("T" type nil nil nil)
                                      ("T" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [2150 2168]))                          )
                        (reparse-symbol namespacesubparts) [2099 2241]))                  
                :type "namespace")
                nil [912 2244]))          
      :file "iterator_range.h"
      :pointmax 2253
      :fsize 2252
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 1337 . 1338))
      :lexical-table 
        '(("LLVM_ADT_ITERATOR_RANGE_H")
          )
)
    (semanticdb-table "semanticdb-table-155561f231ea"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_SMALLPTRSET_H" variable (:constant-flag t) nil [646 668])
            ("llvm/ADT/EpochTracker.h" include nil nil [670 704])
            ("llvm/Support/Compiler.h" include nil nil [705 739])
            ("llvm/Support/ReverseIteration.h" include nil nil [740 782])
            ("llvm/Support/type_traits.h" include nil nil [783 820])
            ("cassert" include (:system-flag t) nil [821 839])
            ("cstddef" include (:system-flag t) nil [840 858])
            ("cstdlib" include (:system-flag t) nil [859 877])
            ("cstring" include (:system-flag t) nil [878 896])
            ("initializer_list" include (:system-flag t) nil [897 924])
            ("iterator" include (:system-flag t) nil [925 944])
            ("utility" include (:system-flag t) nil [945 963])
            ("llvm" type
               (:members 
                  ( ("SmallPtrSetImplBase" type
                       (:superclasses 
                          ( ("DebugEpochBase" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("SmallPtrSetIteratorImpl" friend nil (reparse-symbol classsubparts) [2149 2185])
                            ("protected" label nil (reparse-symbol classsubparts) [2188 2198])
                            ("SmallArray" variable
                               (:pointer 2
                                :constant-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [2281 2305])
                            ("CurArray" variable
                               (:pointer 2
                                :constant-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [2425 2447])
                            ("CurArraySize" variable (:type "unsigned int") (reparse-symbol classsubparts) [2526 2548])
                            ("NumNonEmpty" variable (:type "unsigned int") (reparse-symbol classsubparts) [2735 2756])
                            ("NumTombstones" variable (:type "unsigned int") (reparse-symbol classsubparts) [2799 2822])
                            ("SmallPtrSetImplBase" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("SmallStorage" variable
                                       (:pointer 2
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [2901 2927])
                                    ("that" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SmallPtrSetImplBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2950 2982]))                                  
                                :type ("SmallPtrSetImplBase" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2881 2983])
                            ("SmallPtrSetImplBase" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("SmallStorage" variable
                                       (:pointer 2
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [3006 3032])
                                    ("SmallSize" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [3033 3052])
                                    ("" variable
                                       (:reference 1
                                        :type ("SmallPtrSetImplBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3075 3097])
                                    ("" variable (:type ("that" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3097 3102]))                                  
                                :type ("SmallPtrSetImplBase" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2986 3103])
                            ("SmallPtrSetImplBase" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("SmallStorage" variable
                                       (:pointer 2
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [3136 3162])
                                    ("SmallSize" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [3163 3182]))                                  
                                :type ("SmallPtrSetImplBase" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3116 3424])
                            ("SmallPtrSetImplBase" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [3428 3498])
                            ("public" label nil (reparse-symbol classsubparts) [3500 3507])
                            ("empty" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [3629 3671])
                            ("size" function
                               (:methodconst-flag t
                                :type ("size_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3674 3736])
                            ("clear" function (:type "void") (reparse-symbol classsubparts) [3740 4153])
                            ("protected" label nil (reparse-symbol classsubparts) [4155 4165])
                            ("getTombstoneMarker" function
                               (:pointer 1
                                :typemodifiers ("static")
                                :type "void")
                                (reparse-symbol classsubparts) [4168 4241])
                            ("getEmptyMarker" function
                               (:pointer 1
                                :typemodifiers ("static")
                                :type "void")
                                (reparse-symbol classsubparts) [4245 4455])
                            ("EndPointer" function
                               (:methodconst-flag t
                                :pointer 2
                                :constant-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [4459 4569])
                            ("insert_imp" function
                               (:arguments 
                                  ( ("Ptr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [4854 4870]))                                  
                                :type ("std::pair" type
                                     (:template-specifier 
                                        ( ("void" type
                                             (:pointer 2
                                              :constant-flag t)
                                              nil nil)
                                          ("bool" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [4806 5867])
                            ("erase_imp" function
                               (:arguments 
                                  ( ("Ptr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [6129 6146]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [6114 6409])
                            ("find_imp" function
                               (:methodconst-flag t
                                :pointer 2
                                :constant-flag t
                                :arguments 
                                  ( ("Ptr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [6628 6645]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [6599 7056])
                            ("private" label nil (reparse-symbol classsubparts) [7058 7066])
                            ("isSmall" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [7069 7124])
                            ("insert_imp_big" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Ptr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [7180 7196]))                                  
                                :type ("std::pair" type
                                     (:template-specifier 
                                        ( ("void" type
                                             (:pointer 2
                                              :constant-flag t)
                                              nil nil)
                                          ("bool" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [7128 7197])
                            ("FindBucketFor" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :pointer 2
                                :constant-flag t
                                :arguments 
                                  ( ("Ptr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [7235 7251]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [7201 7258])
                            ("shrink_and_clear" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [7261 7285])
                            ("Grow" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("NewSize" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [7378 7395]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [7368 7396])
                            ("protected" label nil (reparse-symbol classsubparts) [7398 7408])
                            ("swap" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :type ("SmallPtrSetImplBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7539 7564]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [7529 7565])
                            ("CopyFrom" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SmallPtrSetImplBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7583 7614]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [7569 7615])
                            ("MoveFrom" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("SmallSize" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [7632 7651])
                                    ("" variable
                                       (:reference 1
                                        :type ("SmallPtrSetImplBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7652 7674])
                                    ("" variable (:type ("RHS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7674 7678]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [7618 7679])
                            ("private" label nil (reparse-symbol classsubparts) [7681 7689])
                            ("MoveHelper" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("SmallSize" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [7762 7781])
                                    ("" variable
                                       (:reference 1
                                        :type ("SmallPtrSetImplBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7782 7804])
                                    ("" variable (:type ("RHS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7804 7808]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [7746 7809])
                            ("CopyHelper" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SmallPtrSetImplBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7882 7913]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [7866 7914]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [2095 7917])
                    ("SmallPtrSetIteratorImpl" type
                       (:members 
                          ( ("protected" label nil (reparse-symbol classsubparts) [8068 8078])
                            ("Bucket" variable
                               (:pointer 2
                                :constant-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [8081 8107])
                            ("End" variable
                               (:pointer 2
                                :constant-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [8110 8133])
                            ("public" label nil (reparse-symbol classsubparts) [8135 8142])
                            ("SmallPtrSetIteratorImpl" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("BP" variable
                                       (:pointer 2
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [8178 8200])
                                    ("E" variable
                                       (:pointer 2
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [8201 8221]))                                  
                                :type ("SmallPtrSetIteratorImpl" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8154 8358])
                            ("==" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SmallPtrSetIteratorImpl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8378 8413]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [8362 8458])
                            ("!=" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SmallPtrSetIteratorImpl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8477 8512]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [8461 8557])
                            ("protected" label nil (reparse-symbol classsubparts) [8559 8569])
                            ("AdvanceIfNotValid" function (:type "void") (reparse-symbol classsubparts) [8745 8977])
                            ("RetreatIfNotValid" function (:type "void") (reparse-symbol classsubparts) [8980 9226]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [8036 9229])
                    ("SmallPtrSetIterator" type
                       (:template 
                          ( ("PtrTy" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("PointerLikeTypeTraits" variable (:type "int") (reparse-symbol classsubparts) [9470 9499])
                            ("public" label nil (reparse-symbol classsubparts) [9501 9508])
                            ("value_type" variable
                               (:default-value "PtrTy"
                                :type "int")
                                (reparse-symbol classsubparts) [9517 9536])
                            ("reference" variable
                               (:default-value "PtrTy"
                                :type "int")
                                (reparse-symbol classsubparts) [9545 9563])
                            ("pointer" variable
                               (:default-value "PtrTy"
                                :type "int")
                                (reparse-symbol classsubparts) [9572 9588])
                            ("std::ptrdiff_t" variable (:type "int") (reparse-symbol classsubparts) [9615 9630])
                            ("std::forward_iterator_tag" variable (:type "int") (reparse-symbol classsubparts) [9659 9685])
                            ("SmallPtrSetIterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("BP" variable
                                       (:pointer 2
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [9718 9740])
                                    ("E" variable
                                       (:pointer 2
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [9741 9762])
                                    ("Epoch" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DebugEpochBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9794 9822]))                                  
                                :type ("SmallPtrSetIterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9698 9900])
                            ("" function
                               (:methodconst-flag t
                                :operator-flag t
                                :function-pointer t
                                :constant-flag t
                                :type ("PtrTy" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9955 10290])
                            ("++" function
                               (:operator-flag t
                                :typemodifiers ("inline")
                                :type ("SmallPtrSetIterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10294 10585])
                            ("++" function
                               (:operator-flag t
                                :arguments 
                                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [10620 10624]))                                  
                                :type ("SmallPtrSetIterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10589 10720]))                          
                        :superclasses 
                          ( ("SmallPtrSetIteratorImpl" type
                               (:protection "public"
                                :type "class")
                                nil nil)
                            ("DebugEpochBase::HandleBase" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [9307 10723])
                    ("RoundUpToPowerOfTwo" type
                       (:template 
                          ( ("unsigned int" type (:typevar "N") nil nil))                          
                        :type "struct"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [10878 10926])
                    ("RoundUpToPowerOfTwoH" type
                       (:template 
                          ( ("unsigned int" type (:typevar "N") nil nil)
                            ("bool" type (:typevar "isPowerTwo") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("" type
                               (:members 
                                  ( ("Val" variable
                                       (:constant-flag t
                                        :default-value (11149 11150)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [11143 11150]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [11136 11153]))                          )
                        (reparse-symbol namespacesubparts) [11066 11156])
                    ("RoundUpToPowerOfTwoH" type
                       (:template 
                          ( ("unsigned int" type (:typevar "N") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("" type
                               (:members 
                                  ( ("Val" variable
                                       (:constant-flag t
                                        :default-value (11399 11418)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [11393 11418])
                                    ("Val" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [11435 11442]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [11220 11443]))                          
                        :template-specifier 
                          ( ("N" type nil nil nil)
                            ("false" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [11157 11446])
                    ("RoundUpToPowerOfTwo" type
                       (:template 
                          ( ("unsigned int" type (:typevar "N") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("" type
                               (:members 
                                  ( ("Val" variable
                                       (:constant-flag t
                                        :default-value (11513 11533)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [11507 11533])
                                    ("N" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [11534 11536])
                                    ("Val" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [11554 11559]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [11500 11560]))                          )
                        (reparse-symbol namespacesubparts) [11448 11563])
                    ("SmallPtrSetImpl" type
                       (:template 
                          ( ("PtrType" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("add_const_past_pointer::type" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [11953 12000])
                            ("PointerLikeTypeTraits" variable (:type "int") (reparse-symbol classsubparts) [12021 12052])
                            ("PointerLikeTypeTraits" variable (:type "int") (reparse-symbol classsubparts) [12078 12114])
                            ("protected" label nil (reparse-symbol classsubparts) [12116 12126])
                            ("SmallPtrSetImplBase::SmallPtrSetImplBase" variable (:type "int") (reparse-symbol classsubparts) [12174 12215])
                            ("public" label nil (reparse-symbol classsubparts) [12217 12224])
                            ("SmallPtrSetIterator" variable (:type "int") (reparse-symbol classsubparts) [12244 12273])
                            ("SmallPtrSetIterator" variable (:type "int") (reparse-symbol classsubparts) [12299 12328])
                            ("key_type" variable
                               (:default-value "ConstPtrType"
                                :type "int")
                                (reparse-symbol classsubparts) [12337 12361])
                            ("value_type" variable
                               (:default-value "PtrType"
                                :type "int")
                                (reparse-symbol classsubparts) [12370 12391])
                            ("insert" function
                               (:arguments 
                                  ( ("Ptr" variable (:type ("PtrType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12749 12761]))                                  
                                :type ("std::pair" type
                                     (:template-specifier 
                                        ( ("iterator" type nil nil nil)
                                          ("bool" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [12716 12886])
                            ("insert" function
                               (:arguments 
                                  ( ("" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13109 13118])
                                    ("Ptr" variable (:type ("PtrType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13119 13131]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13093 13167])
                            ("erase" function
                               (:arguments 
                                  ( ("Ptr" variable (:type ("PtrType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13296 13308]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [13285 13370])
                            ("count" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Ptr" variable (:type ("ConstPtrType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13465 13482]))                                  
                                :type ("size_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13449 13570])
                            ("find" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Ptr" variable (:type ("ConstPtrType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13587 13604]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13573 13690])
                            ("contains" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Ptr" variable (:type ("ConstPtrType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13707 13724]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [13693 13812])
                            ("insert" function
                               (:template 
                                  ( ("IterT" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("I" variable (:type ("IterT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13856 13864])
                                    ("E" variable (:type ("IterT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13865 13873]))                                  )
                                (reparse-symbol classsubparts) [13816 13921])
                            ("insert" function
                               (:arguments 
                                  ( ("IL" variable (:type ("std::initializer_list" type
                                         (:template-specifier 
                                            ( ("PtrType" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [13937 13971]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [13925 14011])
                            ("begin" function
                               (:methodconst-flag t
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14015 14155])
                            ("end" function
                               (:methodconst-flag t
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14158 14217])
                            ("private" label nil (reparse-symbol classsubparts) [14219 14227])
                            ("makeIterator" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("P" variable
                                       (:pointer 2
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [14331 14352]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14309 14519]))                          
                        :superclasses 
                          ( ("SmallPtrSetImplBase" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [11849 14522])
                    ("==" function
                       (:template 
                          ( ("PtrType" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("LHS" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SmallPtrSetImpl" type
                                     (:template-specifier 
                                        ( ("PtrType" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [14745 14781])
                            ("RHS" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SmallPtrSetImpl" type
                                     (:template-specifier 
                                        ( ("PtrType" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [14798 14834]))                          
                        :operator-flag t)
                        (reparse-symbol namespacesubparts) [14701 14978])
                    ("!=" function
                       (:template 
                          ( ("PtrType" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("LHS" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SmallPtrSetImpl" type
                                     (:template-specifier 
                                        ( ("PtrType" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [15104 15140])
                            ("RHS" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SmallPtrSetImpl" type
                                     (:template-specifier 
                                        ( ("PtrType" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [15157 15193]))                          
                        :operator-flag t)
                        (reparse-symbol namespacesubparts) [15060 15221])
                    ("SmallPtrSet" type
                       (:template 
                          ( ("PtrType" type (:type "class") nil nil)
                            ("unsigned int" type (:typevar "SmallSize") nil nil))                          
                        :type "class"
                        :members 
                          ( ("static_assert" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("SmallSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15845 15856]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [15831 15891])
                            ("SmallPtrSetImpl" variable (:type "int") (reparse-symbol classsubparts) [15909 15934])
                            ("" type
                               (:members 
                                  ( ("SmallSizePowTwo" variable
                                       (:constant-flag t
                                        :default-value (16029 16048)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [16011 16048])
                                    ("SmallSize" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [16049 16059])
                                    ("Val" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [16061 16066]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [16004 16067])
                            ("SmallStorage" variable
                               (:pointer 1
                                :dereference 1
                                :constant-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [16132 16174])
                            ("public" label nil (reparse-symbol classsubparts) [16176 16183])
                            ("SmallPtrSet" function
                               (:constructor-flag t
                                :type ("SmallPtrSet" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16186 16241])
                            ("SmallPtrSet" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("that" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SmallPtrSet" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16256 16280]))                                  
                                :type ("SmallPtrSet" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16244 16311])
                            ("SmallPtrSet" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("SmallPtrSet" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16326 16340])
                                    ("" variable (:type ("that" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16340 16345]))                                  
                                :type ("SmallPtrSet" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16314 16410])
                            ("SmallPtrSet" function
                               (:template 
                                  ( ("It" type (:type "class") nil nil))                                  
                                :type ("SmallPtrSet" type (:type "class") nil nil)
                                :arguments 
                                  ( ("I" variable (:type ("It" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16450 16455])
                                    ("E" variable (:type ("It" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16456 16461]))                                  
                                :constructor-flag t)
                                (reparse-symbol classsubparts) [16414 16530])
                            ("SmallPtrSet" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("IL" variable (:type ("std::initializer_list" type
                                         (:template-specifier 
                                            ( ("PtrType" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [16546 16580]))                                  
                                :type ("SmallPtrSet" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16534 16671])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SmallPtrSet" type
                                             (:template-specifier 
                                                ( ("PtrType" type nil nil nil)
                                                  ("SmallSize" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [16721 16764]))                                  
                                :type ("SmallPtrSet" type
                                     (:template-specifier 
                                        ( ("PtrType" type nil nil nil)
                                          ("SmallSize" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [16675 16837])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("SmallPtrSet" type
                                             (:template-specifier 
                                                ( ("PtrType" type nil nil nil)
                                                  ("SmallSize" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [16887 16921])
                                    ("" variable (:type ("RHS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16921 16925]))                                  
                                :type ("SmallPtrSet" type
                                     (:template-specifier 
                                        ( ("PtrType" type nil nil nil)
                                          ("SmallSize" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [16841 17026])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("IL" variable (:type ("std::initializer_list" type
                                         (:template-specifier 
                                            ( ("PtrType" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [17076 17110]))                                  
                                :type ("SmallPtrSet" type
                                     (:template-specifier 
                                        ( ("PtrType" type nil nil nil)
                                          ("SmallSize" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [17030 17193])
                            ("swap" function
                               (:arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :type ("SmallPtrSet" type
                                             (:template-specifier 
                                                ( ("PtrType" type nil nil nil)
                                                  ("SmallSize" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [17252 17289]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [17242 17331]))                          
                        :superclasses 
                          ( ("SmallPtrSetImpl" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [15513 17334]))                  
                :type "namespace")
                nil [965 17337])
            ("std" type
               (:members 
                  ( ("swap" function
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("unsigned int" type (:typevar "N") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("LHS" variable
                               (:reference 1
                                :type ("llvm::SmallPtrSet" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("N" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [17485 17514])
                            ("RHS" variable
                               (:reference 1
                                :type ("llvm::SmallPtrSet" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("N" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [17515 17544]))                          
                        :typemodifiers ("inline"))
                        (reparse-symbol namespacesubparts) [17436 17569]))                  
                :type "namespace")
                nil [17361 17572]))          
      :file "SmallPtrSet.h"
      :pointmax 17628
      :fsize 17627
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 16920 . 16921) (punctuation 16339 . 16340) (punctuation 16060 . 16061) (punctuation 16059 . 16060) (punctuation 16058 . 16059) (punctuation 16048 . 16049) (punctuation 16060 . 16061) (punctuation 16059 . 16060) (punctuation 16058 . 16059) (punctuation 16048 . 16049) (punctuation 15907 . 15908) (symbol 15901 . 15906) (USING 15895 . 15900) (string 15862 . 15889) (number 15858 . 15860) (punctuation 15856 . 15857) (punctuation 15855 . 15856) (punctuation 12444 . 12445) (DELETE 12438 . 12444) (punctuation 12436 . 12437) (semantic-list 12410 . 12435) (symbol 12395 . 12410) (USING 12364 . 12369) (USING 12331 . 12336) (punctuation 12297 . 12298) (symbol 12282 . 12296) (USING 12276 . 12281) (punctuation 12242 . 12243) (symbol 12233 . 12241) (USING 12227 . 12232) (USING 12168 . 12173) (punctuation 12076 . 12077) (symbol 12061 . 12075) (USING 12055 . 12060) (punctuation 12019 . 12020) (symbol 12009 . 12018) (USING 12003 . 12008) (punctuation 11951 . 11952) (symbol 11938 . 11950) (USING 11932 . 11937) (punctuation 11553 . 11554) (punctuation 11552 . 11553) (punctuation 11551 . 11552) (number 11550 . 11551) (punctuation 11548 . 11549) (punctuation 11547 . 11548) (semantic-list 11537 . 11546) (punctuation 11533 . 11534) (punctuation 11553 . 11554) (punctuation 11552 . 11553) (punctuation 11551 . 11552) (number 11550 . 11551) (punctuation 11548 . 11549) (punctuation 11547 . 11548) (semantic-list 11537 . 11546) (punctuation 11533 . 11534) (punctuation 11434 . 11435) (punctuation 11433 . 11434) (punctuation 11432 . 11433) (number 11431 . 11432) (punctuation 11429 . 11430) (semantic-list 11419 . 11428) (punctuation 11418 . 11419) (punctuation 11434 . 11435) (punctuation 11433 . 11434) (punctuation 11432 . 11433) (number 11431 . 11432) (punctuation 11429 . 11430) (semantic-list 11419 . 11428) (punctuation 11418 . 11419) (EXPLICIT 9689 . 9697) (punctuation 9657 . 9658) (symbol 9639 . 9656) (USING 9633 . 9638) (punctuation 9613 . 9614) (symbol 9597 . 9612) (USING 9591 . 9596) (USING 9566 . 9571) (USING 9539 . 9544) (USING 9511 . 9516) (punctuation 9468 . 9469) (symbol 9458 . 9467) (USING 9452 . 9457) (EXPLICIT 8145 . 8153) (punctuation 7803 . 7804) (punctuation 7673 . 7674) (symbol 3614 . 3628) (punctuation 3609 . 3610) (DELETE 3603 . 3609) (punctuation 3601 . 3602) (semantic-list 3571 . 3600) (punctuation 3570 . 3571) (OPERATOR 3562 . 3570) (punctuation 3561 . 3562) (symbol 3541 . 3560) (punctuation 3536 . 3537) (UNSIGNED 3528 . 3536) (punctuation 3526 . 3527) (symbol 3516 . 3525) (USING 3510 . 3515) (EXPLICIT 3107 . 3115) (punctuation 3096 . 3097) (punctuation 2185 . 2186))
      :lexical-table 
        '(("LLVM_ADT_SMALLPTRSET_H")
          )
)
    (semanticdb-table "semanticdb-table-155561043a3a"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_DENSEMAP_H" variable (:constant-flag t) nil [548 567])
            ("llvm/ADT/DenseMapInfo.h" include nil nil [569 603])
            ("llvm/ADT/EpochTracker.h" include nil nil [604 638])
            ("llvm/Support/AlignOf.h" include nil nil [639 672])
            ("llvm/Support/Compiler.h" include nil nil [673 707])
            ("llvm/Support/MathExtras.h" include nil nil [708 744])
            ("llvm/Support/MemAlloc.h" include nil nil [745 779])
            ("llvm/Support/ReverseIteration.h" include nil nil [780 822])
            ("llvm/Support/type_traits.h" include nil nil [823 860])
            ("algorithm" include (:system-flag t) nil [861 881])
            ("cassert" include (:system-flag t) nil [882 900])
            ("cstddef" include (:system-flag t) nil [901 919])
            ("cstring" include (:system-flag t) nil [920 938])
            ("initializer_list" include (:system-flag t) nil [939 966])
            ("iterator" include (:system-flag t) nil [967 986])
            ("new" include (:system-flag t) nil [987 1001])
            ("type_traits" include (:system-flag t) nil [1002 1024])
            ("utility" include (:system-flag t) nil [1025 1043])
            ("llvm" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("DenseMapPair" type
                               (:template 
                                  ( ("KeyT" type (:type "class") nil nil)
                                    ("ValueT" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("std::pair::pair" variable (:type "int") (reparse-symbol classsubparts) [1315 1345])
                                    ("getFirst" function (:type ("KeyT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1349 1408])
                                    ("getFirst" function
                                       (:methodconst-flag t
                                        :constant-flag t
                                        :type ("KeyT" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1411 1482])
                                    ("getSecond" function (:type ("ValueT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1485 1548])
                                    ("getSecond" function
                                       (:methodconst-flag t
                                        :constant-flag t
                                        :type ("ValueT" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1551 1626]))                                  
                                :superclasses 
                                  ( ("std::pair" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [1210 1629]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1063 1632])
                    ("DenseMapIterator" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1852 1875])
                    ("DenseMapBase" type
                       (:template 
                          ( ("DerivedT" type (:type "class") nil nil)
                            ("KeyT" type (:type "class") nil nil)
                            ("ValueT" type (:type "class") nil nil)
                            ("KeyInfoT" type (:type "class") nil nil)
                            ("BucketT" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("const_pointer_or_const_ref::type" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [2081 2126])
                            ("public" label nil (reparse-symbol classsubparts) [2128 2135])
                            ("key_type" variable
                               (:default-value "KeyT"
                                :type "int")
                                (reparse-symbol classsubparts) [2174 2190])
                            ("mapped_type" variable
                               (:default-value "ValueT"
                                :type "int")
                                (reparse-symbol classsubparts) [2199 2220])
                            ("value_type" variable
                               (:default-value "BucketT"
                                :type "int")
                                (reparse-symbol classsubparts) [2229 2250])
                            ("DenseMapIterator" variable (:type "int") (reparse-symbol classsubparts) [2271 2321])
                            ("DenseMapIterator" variable (:type "int") (reparse-symbol classsubparts) [2353 2409])
                            ("begin" function
                               (:typemodifiers ("inline")
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2413 2749])
                            ("end" function
                               (:typemodifiers ("inline")
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2752 2851])
                            ("begin" function
                               (:methodconst-flag t
                                :typemodifiers ("inline")
                                :type ("const_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2854 3112])
                            ("end" function
                               (:methodconst-flag t
                                :typemodifiers ("inline")
                                :type ("const_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3115 3231])
                            ("empty" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [3250 3307])
                            ("size" function
                               (:methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [3310 3359])
                            ("reserve" function
                               (:arguments 
                                  ( ("NumEntries" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3481 3502]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [3468 3659])
                            ("clear" function (:type "void") (reparse-symbol classsubparts) [3663 4794])
                            ("count" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Val" variable (:type ("const_arg_type_t" type
                                         (:template-specifier 
                                            ( ("KeyT" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [4878 4905]))                                  
                                :type ("size_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4862 4999])
                            ("find" function
                               (:arguments 
                                  ( ("Val" variable (:type ("const_arg_type_t" type
                                         (:template-specifier 
                                            ( ("KeyT" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [5017 5044]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5003 5354])
                            ("find" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Val" variable (:type ("const_arg_type_t" type
                                         (:template-specifier 
                                            ( ("KeyT" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [5377 5404]))                                  
                                :type ("const_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5357 5746])
                            ("find_as" function
                               (:template 
                                  ( ("LookupKeyT" type (:type "class") nil nil))                                  
                                :type ("iterator" type (:type "class") nil nil)
                                :arguments 
                                  ( ("Val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("LookupKeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6052 6074]))                                  )
                                (reparse-symbol classsubparts) [6006 6384])
                            ("find_as" function
                               (:template 
                                  ( ("LookupKeyT" type (:type "class") nil nil))                                  
                                :type ("const_iterator" type (:type "class") nil nil)
                                :arguments 
                                  ( ("Val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("LookupKeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6439 6461]))                                  
                                :methodconst-flag t)
                                (reparse-symbol classsubparts) [6387 6803])
                            ("lookup" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Val" variable (:type ("const_arg_type_t" type
                                         (:template-specifier 
                                            ( ("KeyT" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [6938 6965]))                                  
                                :type ("ValueT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6924 7106])
                            ("insert" function
                               (:arguments 
                                  ( ("KV" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::pair" type
                                             (:template-specifier 
                                                ( ("KeyT" type nil nil nil)
                                                  ("ValueT" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [7312 7346]))                                  
                                :type ("std::pair" type
                                     (:template-specifier 
                                        ( ("iterator" type nil nil nil)
                                          ("bool" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [7279 7397])
                            ("insert" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("std::pair" type
                                             (:template-specifier 
                                                ( ("KeyT" type nil nil nil)
                                                  ("ValueT" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [7603 7629])
                                    ("" variable (:type ("KV" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7629 7632]))                                  
                                :type ("std::pair" type
                                     (:template-specifier 
                                        ( ("iterator" type nil nil nil)
                                          ("bool" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [7570 7705])
                            ("try_emplace" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("KeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7954 7961])
                                    ("" variable (:type ("Key" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7961 7965])
                                    ("" variable
                                       (:reference 1
                                        :type ("Ts" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7966 7971])
                                    ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7975 7980]))                                  
                                :type ("std::pair" type
                                     (:template-specifier 
                                        ( ("iterator" type nil nil nil)
                                          ("bool" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [7916 8870])
                            ("try_emplace" function
                               (:arguments 
                                  ( ("Key" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("KeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9119 9135])
                                    ("" variable
                                       (:reference 1
                                        :type ("Ts" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9136 9141])
                                    ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9145 9150]))                                  
                                :type ("std::pair" type
                                     (:template-specifier 
                                        ( ("iterator" type nil nil nil)
                                          ("bool" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [9081 10021])
                            ("insert_as" function
                               (:template 
                                  ( ("LookupKeyT" type (:type "class") nil nil))                                  
                                :type ("std::pair" type
                                     (:template-specifier 
                                        ( ("iterator" type nil nil nil)
                                          ("bool" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("std::pair" type
                                             (:template-specifier 
                                                ( ("KeyT" type nil nil nil)
                                                  ("ValueT" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [10352 10378])
                                    ("" variable (:type ("KV" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10378 10381])
                                    ("Val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("LookupKeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10420 10442]))                                  )
                                (reparse-symbol classsubparts) [10283 11382])
                            ("insert" function
                               (:template 
                                  ( ("InputIt" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("I" variable (:type ("InputIt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11468 11478])
                                    ("E" variable (:type ("InputIt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11479 11489]))                                  )
                                (reparse-symbol classsubparts) [11427 11537])
                            ("erase" function
                               (:arguments 
                                  ( ("Val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("KeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11552 11568]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [11541 11835])
                            ("erase" function
                               (:arguments 
                                  ( ("I" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11849 11860]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [11838 12038])
                            ("FindAndConstruct" function
                               (:arguments 
                                  ( ("Key" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("KeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12071 12087]))                                  
                                :type ("value_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12042 12230])
                            ("[]" function
                               (:operator-flag t
                                :arguments 
                                  ( ("Key" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("KeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12253 12269]))                                  
                                :type ("ValueT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12234 12316])
                            ("FindAndConstruct" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("KeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12349 12356])
                                    ("" variable (:type ("Key" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12356 12360]))                                  
                                :type ("value_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12320 12514])
                            ("[]" function
                               (:operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("KeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12537 12544])
                                    ("" variable (:type ("Key" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12544 12548]))                                  
                                :type ("ValueT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12518 12606])
                            ("isPointerIntoBucketsArray" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Ptr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [12827 12843]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [12796 12912])
                            ("getPointerIntoBucketsArray" function
                               (:methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [13142 13213])
                            ("protected" label nil (reparse-symbol classsubparts) [13215 13225])
                            ("destroyAll" function (:type "void") (reparse-symbol classsubparts) [13257 13676])
                            ("initEmpty" function (:type "void") (reparse-symbol classsubparts) [13680 14023])
                            ("getMinBucketToReserveForEntries" function
                               (:arguments 
                                  ( ("NumEntries" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [14204 14224]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [14163 14490])
                            ("moveFromOldBuckets" function
                               (:arguments 
                                  ( ("OldBucketsBegin" variable
                                       (:pointer 1
                                        :type ("BucketT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14518 14543])
                                    ("OldBucketsEnd" variable
                                       (:pointer 1
                                        :type ("BucketT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14544 14567]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [14494 15429])
                            ("copyFrom" function
                               (:template 
                                  ( ("OtherBaseT" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DenseMapBase" type
                                             (:template-specifier 
                                                ( ("OtherBaseT" type nil nil nil)
                                                  ("KeyT" type nil nil nil)
                                                  ("ValueT" type nil nil nil)
                                                  ("KeyInfoT" type nil nil nil)
                                                  ("BucketT" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [15487 15558]))                                  )
                                (reparse-symbol classsubparts) [15433 16388])
                            ("getHashValue" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("KeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16421 16437]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [16392 16483])
                            ("getHashValue" function
                               (:template 
                                  ( ("LookupKeyT" type (:type "class") nil nil))                                  
                                :type "unsigned int"
                                :arguments 
                                  ( ("Val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("LookupKeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16548 16570]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [16487 16616])
                            ("getEmptyKey" function
                               (:typemodifiers ("static")
                                :constant-flag t
                                :type ("KeyT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16620 16826])
                            ("getTombstoneKey" function
                               (:typemodifiers ("static")
                                :constant-flag t
                                :type ("KeyT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16830 16911])
                            ("private" label nil (reparse-symbol classsubparts) [16913 16921])
                            ("makeIterator" function
                               (:arguments 
                                  ( ("P" variable
                                       (:pointer 1
                                        :type ("BucketT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16946 16957])
                                    ("E" variable
                                       (:pointer 1
                                        :type ("BucketT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16958 16969])
                                    ("Epoch" variable
                                       (:reference 1
                                        :type ("DebugEpochBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16994 17016])
                                    ("NoAdvance" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [17041 17061]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16924 17270])
                            ("makeConstIterator" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("P" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("BucketT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17307 17324])
                                    ("E" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("BucketT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17325 17342])
                                    ("Epoch" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DebugEpochBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17378 17406])
                                    ("NoAdvance" variable
                                       (:constant-flag t
                                        :default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [17442 17468]))                                  
                                :type ("const_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [17274 17701])
                            ("getNumEntries" function
                               (:methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [17705 17806])
                            ("setNumEntries" function
                               (:arguments 
                                  ( ("Num" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [17829 17842]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [17810 17903])
                            ("incrementNumEntries" function (:type "void") (reparse-symbol classsubparts) [17907 17979])
                            ("decrementNumEntries" function (:type "void") (reparse-symbol classsubparts) [17983 18055])
                            ("getNumTombstones" function
                               (:methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [18059 18166])
                            ("setNumTombstones" function
                               (:arguments 
                                  ( ("Num" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [18192 18205]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [18170 18269])
                            ("incrementNumTombstones" function (:type "void") (reparse-symbol classsubparts) [18273 18354])
                            ("decrementNumTombstones" function (:type "void") (reparse-symbol classsubparts) [18358 18439])
                            ("getBuckets" function
                               (:methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :type ("BucketT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18443 18544])
                            ("getBuckets" function
                               (:pointer 1
                                :type ("BucketT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18548 18631])
                            ("getNumBuckets" function
                               (:methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [18635 18736])
                            ("getBucketsEnd" function
                               (:pointer 1
                                :type ("BucketT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18740 18813])
                            ("getBucketsEnd" function
                               (:methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :type ("BucketT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18817 18902])
                            ("grow" function
                               (:arguments 
                                  ( ("AtLeast" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [18916 18933]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [18906 18989])
                            ("shrink_and_clear" function (:type "void") (reparse-symbol classsubparts) [18993 19077])
                            ("InsertIntoBucket" function
                               (:pointer 1
                                :arguments 
                                  ( ("TheBucket" variable
                                       (:pointer 1
                                        :type ("BucketT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19159 19178])
                                    ("" variable
                                       (:reference 1
                                        :type ("KeyArg" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19179 19188])
                                    ("" variable (:type ("Key" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19188 19192])
                                    ("" variable
                                       (:reference 1
                                        :type ("ValueArgs" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19221 19233])
                                    ("" variable (:type ("Values" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19237 19244]))                                  
                                :type ("BucketT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [19133 19467])
                            ("InsertIntoBucketWithLookup" function
                               (:template 
                                  ( ("LookupKeyT" type (:type "class") nil nil))                                  
                                :type ("BucketT" type (:type "class") nil nil)
                                :arguments 
                                  ( ("TheBucket" variable
                                       (:pointer 1
                                        :type ("BucketT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19540 19559])
                                    ("" variable
                                       (:reference 1
                                        :type ("KeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19560 19567])
                                    ("" variable (:type ("Key" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19567 19571])
                                    ("" variable
                                       (:reference 1
                                        :type ("ValueT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19610 19619])
                                    ("" variable (:type ("Value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19619 19625])
                                    ("Lookup" variable
                                       (:reference 1
                                        :type ("LookupKeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19626 19645]))                                  
                                :pointer 1)
                                (reparse-symbol classsubparts) [19471 19842])
                            ("InsertIntoBucketImpl" function
                               (:template 
                                  ( ("LookupKeyT" type (:type "class") nil nil))                                  
                                :type ("BucketT" type (:type "class") nil nil)
                                :arguments 
                                  ( ("Key" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("KeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19909 19925])
                                    ("Lookup" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("LookupKeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19926 19951])
                                    ("TheBucket" variable
                                       (:pointer 1
                                        :type ("BucketT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19984 20003]))                                  
                                :pointer 1)
                                (reparse-symbol classsubparts) [19846 21459])
                            ("LookupBucketFor" function
                               (:template 
                                  ( ("LookupKeyT" type (:type "class") nil nil))                                  
                                :type "bool"
                                :arguments 
                                  ( ("Val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("LookupKeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [21773 21795])
                                    ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("BucketT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [21819 21835])
                                    ("" variable (:type ("FoundBucket" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21835 21847]))                                  
                                :methodconst-flag t)
                                (reparse-symbol classsubparts) [21720 23702])
                            ("LookupBucketFor" function
                               (:template 
                                  ( ("LookupKeyT" type (:type "class") nil nil))                                  
                                :type "bool"
                                :arguments 
                                  ( ("Val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("LookupKeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23760 23782])
                                    ("" variable
                                       (:pointer 1
                                        :type ("BucketT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23783 23793])
                                    ("" variable (:type ("FoundBucket" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23793 23805]))                                  )
                                (reparse-symbol classsubparts) [23706 24031])
                            ("public" label nil (reparse-symbol classsubparts) [24033 24040])
                            ("getMemorySize" function
                               (:methodconst-flag t
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [24260 24340]))                          
                        :superclasses 
                          ( ("DebugEpochBase" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [1877 24343])
                    ("==" function
                       (:template 
                          ( ("DerivedT" type (:type "class") nil nil)
                            ("KeyT" type (:type "class") nil nil)
                            ("ValueT" type (:type "class") nil nil)
                            ("KeyInfoT" type (:type "class") nil nil)
                            ("BucketT" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("LHS" variable
                               (:reference 1
                                :constant-flag t
                                :type ("DenseMapBase" type
                                     (:template-specifier 
                                        ( ("DerivedT" type nil nil nil)
                                          ("KeyT" type nil nil nil)
                                          ("ValueT" type nil nil nil)
                                          ("KeyInfoT" type nil nil nil)
                                          ("BucketT" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [24803 24870])
                            ("RHS" variable
                               (:reference 1
                                :constant-flag t
                                :type ("DenseMapBase" type
                                     (:template-specifier 
                                        ( ("DerivedT" type nil nil nil)
                                          ("KeyT" type nil nil nil)
                                          ("ValueT" type nil nil nil)
                                          ("KeyInfoT" type nil nil nil)
                                          ("BucketT" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [24875 24942]))                          
                        :operator-flag t)
                        (reparse-symbol namespacesubparts) [24674 25145])
                    ("!=" function
                       (:template 
                          ( ("DerivedT" type (:type "class") nil nil)
                            ("KeyT" type (:type "class") nil nil)
                            ("ValueT" type (:type "class") nil nil)
                            ("KeyInfoT" type (:type "class") nil nil)
                            ("BucketT" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("LHS" variable
                               (:reference 1
                                :constant-flag t
                                :type ("DenseMapBase" type
                                     (:template-specifier 
                                        ( ("DerivedT" type nil nil nil)
                                          ("KeyT" type nil nil nil)
                                          ("ValueT" type nil nil nil)
                                          ("KeyInfoT" type nil nil nil)
                                          ("BucketT" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [25391 25458])
                            ("RHS" variable
                               (:reference 1
                                :constant-flag t
                                :type ("DenseMapBase" type
                                     (:template-specifier 
                                        ( ("DerivedT" type nil nil nil)
                                          ("KeyT" type nil nil nil)
                                          ("ValueT" type nil nil nil)
                                          ("KeyInfoT" type nil nil nil)
                                          ("BucketT" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [25463 25530]))                          
                        :operator-flag t)
                        (reparse-symbol namespacesubparts) [25262 25558])
                    ("DenseMap" type
                       (:superclasses 
                          ( ("DenseMapBase" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("DenseMapBase" friend nil (reparse-symbol classsubparts) [25877 25902])
                            ("DenseMapBase" variable (:type "int") (reparse-symbol classsubparts) [26073 26129])
                            ("Buckets" variable
                               (:pointer 1
                                :type ("BucketT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [26133 26150])
                            ("NumEntries" variable (:type "unsigned int") (reparse-symbol classsubparts) [26153 26173])
                            ("NumTombstones" variable (:type "unsigned int") (reparse-symbol classsubparts) [26176 26199])
                            ("NumBuckets" variable (:type "unsigned int") (reparse-symbol classsubparts) [26202 26222])
                            ("public" label nil (reparse-symbol classsubparts) [26224 26231])
                            ("DenseMap" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("InitialReserve" variable
                                       (:default-value "0"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [26403 26430]))                                  
                                :type ("DenseMap" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [26394 26457])
                            ("DenseMap" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DenseMap" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26470 26492]))                                  
                                :type ("DenseMap" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [26461 26542])
                            ("DenseMap" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("DenseMap" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26555 26566])
                                    ("" variable (:type ("other" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26566 26572]))                                  
                                :type ("DenseMap" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [26546 26618])
                            ("DenseMap" function
                               (:template 
                                  ( ("InputIt" type (:type "class") nil nil))                                  
                                :type ("DenseMap" type (:type "class") nil nil)
                                :arguments 
                                  ( ("I" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("InputIt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26660 26677])
                                    ("E" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("InputIt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26678 26695]))                                  
                                :constructor-flag t)
                                (reparse-symbol classsubparts) [26622 26756])
                            ("DenseMap" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable (:type ("std::initializer_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26769 26791])
                                    ("" variable
                                       (:typemodifiers ("typename")
                                        :type ("BaseT::value_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26791 26818])
                                    ("" variable (:type ("Vals" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26819 26824]))                                  
                                :type ("DenseMap" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [26760 26897])
                            ("DenseMap" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [26901 27022])
                            ("swap" function
                               (:arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :type ("DenseMap" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27036 27050]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [27026 27282])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DenseMap" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27306 27328]))                                  
                                :type ("DenseMap" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [27286 27399])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("DenseMap" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27423 27434])
                                    ("" variable (:type ("other" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27434 27440]))                                  
                                :type ("DenseMap" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [27403 27598])
                            ("copyFrom" function
                               (:arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DenseMap" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27616 27638]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [27602 27895])
                            ("init" function
                               (:arguments 
                                  ( ("InitNumEntries" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [27909 27933]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [27899 28156])
                            ("grow" function
                               (:arguments 
                                  ( ("AtLeast" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [28170 28187]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [28160 28664])
                            ("shrink_and_clear" function (:type "void") (reparse-symbol classsubparts) [28668 29194])
                            ("private" label nil (reparse-symbol classsubparts) [29196 29204])
                            ("getNumEntries" function
                               (:methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [29207 29266])
                            ("setNumEntries" function
                               (:arguments 
                                  ( ("Num" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [29289 29302]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [29270 29330])
                            ("getNumTombstones" function
                               (:methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [29334 29399])
                            ("setNumTombstones" function
                               (:arguments 
                                  ( ("Num" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [29425 29438]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [29403 29469])
                            ("getBuckets" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("BucketT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [29473 29526])
                            ("getNumBuckets" function
                               (:methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [29530 29589])
                            ("allocateBuckets" function
                               (:arguments 
                                  ( ("Num" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [29614 29627]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [29593 29863]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [25723 29866])
                    ("SmallDenseMap" type
                       (:superclasses 
                          ( ("DenseMapBase" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("DenseMapBase" friend nil (reparse-symbol classsubparts) [30226 30251])
                            ("DenseMapBase" variable (:type "int") (reparse-symbol classsubparts) [30427 30488])
                            ("static_assert" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("isPowerOf2_64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30506 30534]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [30492 30591])
                            ("Small" variable
                               (:suffix ":1"
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [30595 30614])
                            ("NumEntries" variable
                               (:suffix ":31"
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [30617 30642])
                            ("NumTombstones" variable (:type "unsigned int") (reparse-symbol classsubparts) [30645 30668])
                            ("LargeRep" type
                               (:members 
                                  ( ("Buckets" variable
                                       (:pointer 1
                                        :type ("BucketT" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [30694 30711])
                                    ("NumBuckets" variable (:type "unsigned int") (reparse-symbol classsubparts) [30716 30736]))                                  
                                :type "struct")
                                (reparse-symbol classsubparts) [30672 30741])
                            ("storage" variable (:type "int") (reparse-symbol classsubparts) [30946 30954])
                            ("public" label nil (reparse-symbol classsubparts) [30956 30963])
                            ("SmallDenseMap" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("NumInitBuckets" variable
                                       (:default-value "0"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [30989 31016]))                                  
                                :type ("SmallDenseMap" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [30975 31049])
                            ("SmallDenseMap" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SmallDenseMap" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31067 31094]))                                  
                                :type ("SmallDenseMap" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [31053 31144])
                            ("SmallDenseMap" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("SmallDenseMap" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31162 31178])
                                    ("" variable (:type ("other" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31178 31184]))                                  
                                :type ("SmallDenseMap" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [31148 31230])
                            ("SmallDenseMap" function
                               (:template 
                                  ( ("InputIt" type (:type "class") nil nil))                                  
                                :type ("SmallDenseMap" type (:type "class") nil nil)
                                :arguments 
                                  ( ("I" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("InputIt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31277 31294])
                                    ("E" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("InputIt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31295 31312]))                                  
                                :constructor-flag t)
                                (reparse-symbol classsubparts) [31234 31387])
                            ("SmallDenseMap" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable (:type ("std::initializer_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31405 31427])
                                    ("" variable
                                       (:typemodifiers ("typename")
                                        :type ("BaseT::value_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31427 31454])
                                    ("" variable (:type ("Vals" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31455 31460]))                                  
                                :type ("SmallDenseMap" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [31391 31511])
                            ("SmallDenseMap" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [31515 31586])
                            ("swap" function
                               (:arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :type ("SmallDenseMap" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31600 31619]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [31590 34738])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SmallDenseMap" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34767 34794]))                                  
                                :type ("SmallDenseMap" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [34742 34865])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("SmallDenseMap" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34894 34910])
                                    ("" variable (:type ("other" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34910 34916]))                                  
                                :type ("SmallDenseMap" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [34869 35019])
                            ("copyFrom" function
                               (:arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SmallDenseMap" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35037 35064]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [35023 35323])
                            ("init" function
                               (:arguments 
                                  ( ("InitBuckets" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [35337 35358]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [35327 35544])
                            ("grow" function
                               (:arguments 
                                  ( ("AtLeast" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [35558 35575]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [35548 37566])
                            ("shrink_and_clear" function (:type "void") (reparse-symbol classsubparts) [37570 38125])
                            ("private" label nil (reparse-symbol classsubparts) [38127 38135])
                            ("getNumEntries" function
                               (:methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [38138 38197])
                            ("setNumEntries" function
                               (:arguments 
                                  ( ("Num" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [38220 38233]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [38201 38386])
                            ("getNumTombstones" function
                               (:methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [38390 38455])
                            ("setNumTombstones" function
                               (:arguments 
                                  ( ("Num" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [38481 38494]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [38459 38525])
                            ("getInlineBuckets" function
                               (:methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :type ("BucketT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [38529 38855])
                            ("getInlineBuckets" function
                               (:pointer 1
                                :type ("BucketT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [38859 38994])
                            ("getLargeRep" function
                               (:methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :type ("LargeRep" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [38998 39180])
                            ("getLargeRep" function
                               (:pointer 1
                                :type ("LargeRep" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [39184 39311])
                            ("getBuckets" function
                               (:methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :type ("BucketT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [39315 39418])
                            ("getBuckets" function
                               (:pointer 1
                                :type ("BucketT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [39422 39545])
                            ("getNumBuckets" function
                               (:methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [39549 39647])
                            ("deallocateBuckets" function (:type "void") (reparse-symbol classsubparts) [39651 39897])
                            ("allocateBuckets" function
                               (:arguments 
                                  ( ("Num" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [39926 39939]))                                  
                                :type ("LargeRep" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [39901 40195]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [30059 40198])
                    ("DenseMapIterator" type
                       (:template 
                          ( ("KeyT" type (:type "class") nil nil)
                            ("ValueT" type (:type "class") nil nil)
                            ("KeyInfoT" type (:type "class") nil nil)
                            ("Bucket" type (:type "class") nil nil)
                            ("bool" type (:typevar "IsConst") nil nil))                          
                        :type "class"
                        :members 
                          ( ("DenseMapIterator" friend nil (reparse-symbol classsubparts) [40358 40387])
                            ("DenseMapIterator" friend nil (reparse-symbol classsubparts) [40429 40458])
                            ("public" label nil (reparse-symbol classsubparts) [40500 40507])
                            ("difference_type" variable
                               (:default-value "ptrdiff_t"
                                :type "int")
                                (reparse-symbol classsubparts) [40516 40544])
                            ("std::conditional::type" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [40572 40635])
                            ("std::forward_iterator_tag" variable (:type "int") (reparse-symbol classsubparts) [40730 40756])
                            ("private" label nil (reparse-symbol classsubparts) [40758 40766])
                            ("Ptr" variable
                               (:default-value "nullptr"
                                :type ("pointer" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [40769 40791])
                            ("End" variable
                               (:default-value "nullptr"
                                :type ("pointer" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [40794 40816])
                            ("public" label nil (reparse-symbol classsubparts) [40818 40825])
                            ("DenseMapIterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Pos" variable (:type ("pointer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40878 40890])
                                    ("E" variable (:type ("pointer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40891 40901])
                                    ("Epoch" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DebugEpochBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [40902 40930])
                                    ("NoAdvance" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [40950 40972]))                                  
                                :type ("DenseMapIterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [40861 41249])
                            ("DenseMapIterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("I" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DenseMapIterator" type
                                             (:template-specifier 
                                                ( ("KeyT" type nil nil nil)
                                                  ("ValueT" type nil nil nil)
                                                  ("KeyInfoT" type nil nil nil)
                                                  ("Bucket" type nil nil nil)
                                                  ("IsConstSrc" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [41549 41619]))                                  
                                :type ("DenseMapIterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [41525 41684])
                            ("" function
                               (:methodconst-flag t
                                :operator-flag t
                                :function-pointer t
                                :type ("reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [41688 41916])
                            ("->" function
                               (:methodconst-flag t
                                :operator-flag t
                                :type ("pointer" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [41919 42148])
                            ("==" function
                               (:operator-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DenseMapIterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [42175 42203])
                                    ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DenseMapIterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [42229 42257]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [42152 42550])
                            ("!=" function
                               (:operator-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DenseMapIterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [42577 42605])
                                    ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DenseMapIterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [42631 42659]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [42554 42691])
                            ("++" function
                               (:operator-flag t
                                :typemodifiers ("inline")
                                :type ("DenseMapIterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [42695 43044])
                            ("++" function
                               (:operator-flag t
                                :arguments 
                                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [43075 43079]))                                  
                                :type ("DenseMapIterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [43047 43218])
                            ("private" label nil (reparse-symbol classsubparts) [43220 43228])
                            ("AdvancePastEmptyBuckets" function (:type "void") (reparse-symbol classsubparts) [43231 43554])
                            ("RetreatPastEmptyBuckets" function (:type "void") (reparse-symbol classsubparts) [43558 43887]))                          
                        :superclasses 
                          ( ("DebugEpochBase::HandleBase" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [40200 43890])
                    ("capacity_in_bytes" function
                       (:template 
                          ( ("KeyT" type (:type "class") nil nil)
                            ("ValueT" type (:type "class") nil nil)
                            ("KeyInfoT" type (:type "class") nil nil))                          
                        :type ("size_t" type (:type "class") nil nil)
                        :arguments 
                          ( ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("DenseMap" type
                                     (:template-specifier 
                                        ( ("KeyT" type nil nil nil)
                                          ("ValueT" type nil nil nil)
                                          ("KeyInfoT" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [43985 44027]))                          
                        :typemodifiers ("inline"))
                        (reparse-symbol namespacesubparts) [43892 44059]))                  
                :type "namespace")
                nil [1045 44062]))          
      :file "DenseMap.h"
      :pointmax 44116
      :fsize 44115
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 41521 . 41522) (punctuation 41520 . 41521) (symbol 41513 . 41520) (punctuation 41511 . 41512) (punctuation 41510 . 41511) (symbol 41499 . 41509) (punctuation 41498 . 41499) (punctuation 41497 . 41498) (symbol 41486 . 41497) (punctuation 41485 . 41486) (punctuation 41484 . 41485) (symbol 41481 . 41484) (punctuation 41479 . 41480) (TYPENAME 41470 . 41478) (punctuation 41456 . 41457) (symbol 41446 . 41456) (BOOL 41441 . 41445) (punctuation 41440 . 41441) (TEMPLATE 41431 . 41439) (punctuation 40856 . 40857) (DEFAULT 40849 . 40856) (punctuation 40847 . 40848) (semantic-list 40844 . 40846) (symbol 40828 . 40844) (punctuation 40728 . 40729) (symbol 40710 . 40727) (USING 40704 . 40709) (punctuation 40700 . 40701) (punctuation 40699 . 40700) (symbol 40688 . 40698) (punctuation 40686 . 40687) (symbol 40676 . 40685) (USING 40670 . 40675) (punctuation 40666 . 40667) (punctuation 40665 . 40666) (symbol 40654 . 40664) (punctuation 40652 . 40653) (symbol 40644 . 40651) (USING 40638 . 40643) (punctuation 40564 . 40565) (symbol 40553 . 40563) (USING 40547 . 40552) (USING 40510 . 40515) (punctuation 40497 . 40498) (punctuation 40496 . 40497) (symbol 40491 . 40496) (punctuation 40489 . 40490) (symbol 40483 . 40489) (punctuation 40481 . 40482) (symbol 40473 . 40481) (punctuation 40471 . 40472) (symbol 40465 . 40471) (punctuation 40463 . 40464) (symbol 40459 . 40463) (punctuation 40458 . 40459) (punctuation 40425 . 40426) (punctuation 40424 . 40425) (symbol 40420 . 40424) (punctuation 40418 . 40419) (symbol 40412 . 40418) (punctuation 40410 . 40411) (symbol 40402 . 40410) (punctuation 40400 . 40401) (symbol 40394 . 40400) (punctuation 40392 . 40393) (symbol 40388 . 40392) (punctuation 40387 . 40388) (punctuation 34909 . 34910) (punctuation 31453 . 31454) (punctuation 31426 . 31427) (punctuation 31177 . 31178) (EXPLICIT 30966 . 30974) (punctuation 30944 . 30945) (symbol 30936 . 30944) (punctuation 30934 . 30935) (semantic-list 30919 . 30934) (symbol 30912 . 30919) (punctuation 30911 . 30912) (symbol 30890 . 30911) (string 30552 . 30589) (semantic-list 30519 . 30534) (punctuation 30425 . 30426) (symbol 30419 . 30424) (USING 30413 . 30418) (punctuation 30299 . 30300) (punctuation 30298 . 30299) (symbol 30291 . 30298) (punctuation 30289 . 30290) (symbol 30281 . 30289) (punctuation 30279 . 30280) (symbol 30273 . 30279) (punctuation 30271 . 30272) (symbol 30267 . 30271) (punctuation 30265 . 30266) (symbol 30252 . 30265) (punctuation 30251 . 30252) (punctuation 30057 . 30058) (punctuation 30056 . 30057) (symbol 30050 . 30056) (punctuation 30048 . 30049) (symbol 30044 . 30048) (punctuation 30043 . 30044) (symbol 30031 . 30043) (punctuation 30030 . 30031) (punctuation 30029 . 30030) (symbol 30023 . 30029) (punctuation 30022 . 30023) (punctuation 30021 . 30022) (symbol 30017 . 30021) (punctuation 30015 . 30016) (symbol 30007 . 30014) (TYPENAME 29998 . 30006) (punctuation 29986 . 29987) (punctuation 29985 . 29986) (symbol 29981 . 29985) (punctuation 29980 . 29981) (symbol 29968 . 29980) (punctuation 29966 . 29967) (symbol 29957 . 29965) (TYPENAME 29948 . 29956) (punctuation 29936 . 29937) (number 29935 . 29936) (punctuation 29933 . 29934) (symbol 29919 . 29932) (UNSIGNED 29910 . 29918) (punctuation 29908 . 29909) (symbol 29902 . 29908) (TYPENAME 29893 . 29901) (punctuation 29891 . 29892) (symbol 29887 . 29891) (TYPENAME 29878 . 29886) (punctuation 29877 . 29878) (TEMPLATE 29868 . 29876) (punctuation 27433 . 27434) (punctuation 26817 . 26818) (punctuation 26790 . 26791) (punctuation 26565 . 26566) (EXPLICIT 26385 . 26393) (punctuation 26071 . 26072) (symbol 26065 . 26070) (USING 26059 . 26064) (punctuation 25945 . 25946) (punctuation 25944 . 25945) (symbol 25937 . 25944) (punctuation 25935 . 25936) (symbol 25927 . 25935) (punctuation 25925 . 25926) (symbol 25919 . 25925) (punctuation 25917 . 25918) (symbol 25913 . 25917) (punctuation 25911 . 25912) (symbol 25903 . 25911) (punctuation 25902 . 25903) (punctuation 25721 . 25722) (punctuation 25720 . 25721) (symbol 25714 . 25720) (punctuation 25712 . 25713) (symbol 25708 . 25712) (punctuation 25707 . 25708) (symbol 25695 . 25707) (punctuation 25694 . 25695) (punctuation 25693 . 25694) (symbol 25687 . 25693) (punctuation 25686 . 25687) (punctuation 25685 . 25686) (symbol 25681 . 25685) (punctuation 25679 . 25680) (symbol 25671 . 25678) (TYPENAME 25662 . 25670) (punctuation 25650 . 25651) (punctuation 25649 . 25650) (symbol 25645 . 25649) (punctuation 25644 . 25645) (symbol 25632 . 25644) (punctuation 25630 . 25631) (symbol 25621 . 25629) (TYPENAME 25612 . 25620) (punctuation 25600 . 25601) (symbol 25594 . 25600) (TYPENAME 25585 . 25593) (punctuation 25583 . 25584) (symbol 25579 . 25583) (TYPENAME 25570 . 25578) (punctuation 25569 . 25570) (TEMPLATE 25560 . 25568) (punctuation 23792 . 23793) (punctuation 21834 . 21835) (punctuation 19618 . 19619) (punctuation 19566 . 19567) (punctuation 19235 . 19236) (punctuation 19234 . 19235) (punctuation 19233 . 19234) (punctuation 19232 . 19233) (punctuation 19187 . 19188) (punctuation 19129 . 19130) (symbol 19120 . 19129) (punctuation 19118 . 19119) (punctuation 19117 . 19118) (punctuation 19116 . 19117) (TYPENAME 19108 . 19116) (punctuation 19106 . 19107) (symbol 19100 . 19106) (TYPENAME 19091 . 19099) (punctuation 19090 . 19091) (TEMPLATE 19081 . 19089) (punctuation 13252 . 13253) (DEFAULT 13245 . 13252) (punctuation 13243 . 13244) (semantic-list 13240 . 13242) (symbol 13228 . 13240) (punctuation 12543 . 12544) (punctuation 12355 . 12356) (punctuation 10377 . 10378) (punctuation 9143 . 9144) (punctuation 9142 . 9143) (punctuation 9141 . 9142) (punctuation 9140 . 9141) (punctuation 9077 . 9078) (symbol 9075 . 9077) (punctuation 9073 . 9074) (punctuation 9072 . 9073) (punctuation 9071 . 9072) (TYPENAME 9063 . 9071) (punctuation 9062 . 9063) (TEMPLATE 9053 . 9061) (punctuation 7973 . 7974) (punctuation 7972 . 7973) (punctuation 7971 . 7972) (punctuation 7970 . 7971) (punctuation 7960 . 7961) (punctuation 7912 . 7913) (symbol 7910 . 7912) (punctuation 7908 . 7909) (punctuation 7907 . 7908) (punctuation 7906 . 7907) (TYPENAME 7898 . 7906) (punctuation 7897 . 7898) (TEMPLATE 7888 . 7896) (punctuation 7628 . 7629) (symbol 3235 . 3249) (punctuation 2345 . 2346) (symbol 2330 . 2344) (USING 2324 . 2329) (punctuation 2269 . 2270) (symbol 2260 . 2268) (USING 2254 . 2259) (USING 2223 . 2228) (USING 2193 . 2198) (USING 2168 . 2173) (punctuation 2164 . 2165) (UNSIGNED 2156 . 2164) (punctuation 2154 . 2155) (symbol 2144 . 2153) (USING 2138 . 2143) (punctuation 2079 . 2080) (symbol 2062 . 2078) (USING 2056 . 2061) (punctuation 2052 . 2053) (symbol 2051 . 2052) (TYPENAME 2042 . 2050) (punctuation 2041 . 2042) (TEMPLATE 2032 . 2040) (punctuation 1850 . 1851) (symbol 1845 . 1850) (punctuation 1843 . 1844) (symbol 1835 . 1842) (BOOL 1830 . 1834) (punctuation 1818 . 1819) (punctuation 1817 . 1818) (symbol 1811 . 1817) (punctuation 1809 . 1810) (symbol 1805 . 1809) (punctuation 1804 . 1805) (symbol 1792 . 1804) (punctuation 1791 . 1792) (punctuation 1790 . 1791) (symbol 1784 . 1790) (punctuation 1783 . 1784) (punctuation 1782 . 1783) (symbol 1778 . 1782) (punctuation 1776 . 1777) (symbol 1769 . 1775) (TYPENAME 1760 . 1768) (punctuation 1748 . 1749) (punctuation 1747 . 1748) (symbol 1743 . 1747) (punctuation 1742 . 1743) (symbol 1730 . 1742) (punctuation 1728 . 1729) (symbol 1719 . 1727) (TYPENAME 1710 . 1718) (punctuation 1698 . 1699) (symbol 1692 . 1698) (TYPENAME 1683 . 1691) (punctuation 1681 . 1682) (symbol 1677 . 1681) (TYPENAME 1668 . 1676) (punctuation 1667 . 1668) (TEMPLATE 1658 . 1666) (USING 1309 . 1314))
      :lexical-table 
        '(("LLVM_ADT_DENSEMAP_H")
          )
)
    (semanticdb-table "semanticdb-table-155561fa9d8e"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_BITVECTOR_H" variable (:constant-flag t) nil [553 573])
            ("llvm/ADT/ArrayRef.h" include nil nil [575 605])
            ("llvm/ADT/DenseMapInfo.h" include nil nil [606 640])
            ("llvm/ADT/iterator_range.h" include nil nil [641 677])
            ("llvm/Support/MathExtras.h" include nil nil [678 714])
            ("algorithm" include (:system-flag t) nil [715 735])
            ("cassert" include (:system-flag t) nil [736 754])
            ("climits" include (:system-flag t) nil [755 773])
            ("cstdint" include (:system-flag t) nil [774 792])
            ("cstdlib" include (:system-flag t) nil [793 811])
            ("cstring" include (:system-flag t) nil [812 830])
            ("utility" include (:system-flag t) nil [831 849])
            ("llvm" type
               (:members 
                  ( ("const_set_bits_iterator_impl" type
                       (:template 
                          ( ("BitVectorT" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("Parent" variable
                               (:constant-flag t
                                :type ("BitVectorT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1049 1074])
                            ("Current" variable
                               (:default-value "0"
                                :type "int")
                                (reparse-symbol classsubparts) [1077 1093])
                            ("advance" function (:type "void") (reparse-symbol classsubparts) [1097 1218])
                            ("public" label nil (reparse-symbol classsubparts) [1220 1227])
                            ("const_set_bits_iterator_impl" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Parent" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BitVectorT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1259 1284])
                                    ("Current" variable (:type "int") (reparse-symbol arg-sub-list) [1285 1297]))                                  
                                :type ("const_set_bits_iterator_impl" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1230 1341])
                            ("const_set_bits_iterator_impl" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Parent" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BitVectorT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1382 1407]))                                  
                                :type ("const_set_bits_iterator_impl" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1353 1476])
                            ("++" function
                               (:operator-flag t
                                :arguments 
                                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [1600 1604]))                                  
                                :type ("const_set_bits_iterator_impl" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1560 1665])
                            ("++" function
                               (:operator-flag t
                                :type ("const_set_bits_iterator_impl" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1669 1750])
                            ("" function
                               (:methodconst-flag t
                                :operator-flag t
                                :function-pointer t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [1754 1800])
                            ("==" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("Other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("const_set_bits_iterator_impl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1820 1862]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [1804 2011])
                            ("!=" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("Other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("const_set_bits_iterator_impl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2031 2073]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [2015 2222]))                          )
                        (reparse-symbol namespacesubparts) [979 2225])
                    ("BitVector" type
                       (:members 
                          ( ("BitWord" type
                               (:typedef ("uintptr_t" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [2247 2273])
                            ("" type
                               (:members 
                                  ( ("BITWORD_SIZE" variable
                                       (:constant-flag t
                                        :default-value (2299 2309)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2284 2309])
                                    ("CHAR_BIT" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2327 2337]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [2277 2338])
                            ("static_assert" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("BITWORD_SIZE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2356 2370])
                                    ("" variable (:type ("BITWORD_SIZE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2378 2392]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [2342 2439])
                            ("SmallVector" variable (:type "int") (reparse-symbol classsubparts) [2459 2480])
                            ("Bits" variable (:type ("Storage" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2484 2497])
                            ("Size" variable (:type "unsigned int") (reparse-symbol classsubparts) [2517 2531])
                            ("public" label nil (reparse-symbol classsubparts) [2563 2570])
                            ("reference" type
                               (:members 
                                  ( ("WordRef" variable
                                       (:pointer 1
                                        :type ("BitWord" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2663 2680])
                                    ("BitPos" variable (:type "unsigned int") (reparse-symbol classsubparts) [2685 2701])
                                    ("public" label nil (reparse-symbol classsubparts) [2705 2712])
                                    ("reference" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("b" variable
                                               (:reference 1
                                                :type ("BitVector" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2727 2740])
                                            ("Idx" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [2741 2754]))                                          
                                        :type ("reference" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2717 2842])
                                    ("=" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("t" variable (:type ("reference" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2939 2951]))                                          
                                        :type ("reference" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2918 3002])
                                    ("=" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("t" variable (:type "bool") (reparse-symbol arg-sub-list) [3029 3036]))                                          
                                        :type ("reference" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [3008 3175]))                                  
                                :type "class")
                                (reparse-symbol classsubparts) [2640 3272])
                            ("const_set_bits_iterator" type
                               (:typedef ("const_set_bits_iterator_impl" type
                                     (:template-specifier 
                                        ( ("BitVector" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [3276 3348])
                            ("set_iterator" type
                               (:typedef ("const_set_bits_iterator" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [3351 3396])
                            ("set_bits_begin" function
                               (:methodconst-flag t
                                :type ("const_set_bits_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3400 3495])
                            ("set_bits_end" function
                               (:methodconst-flag t
                                :type ("const_set_bits_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3498 3595])
                            ("set_bits" function
                               (:methodconst-flag t
                                :type ("iterator_range" type
                                     (:template-specifier 
                                        ( ("const_set_bits_iterator" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [3598 3717])
                            ("BitVector" function
                               (:constructor-flag t
                                :type ("BitVector" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3780 3804])
                            ("BitVector" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("s" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [3954 3965])
                                    ("t" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [3966 3980]))                                  
                                :type ("BitVector" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3944 4079])
                            ("empty" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [4148 4188])
                            ("size" function
                               (:methodconst-flag t
                                :type ("size_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4251 4290])
                            ("count" function
                               (:methodconst-flag t
                                :type ("size_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4350 4490])
                            ("any" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [4538 4623])
                            ("all" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [4673 5029])
                            ("none" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [5088 5130])
                            ("find_first_in" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Begin" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [5335 5350])
                                    ("End" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [5351 5364])
                                    ("Set" variable
                                       (:default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [5365 5380]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [5317 6328])
                            ("find_last_in" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Begin" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [6489 6504])
                                    ("End" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [6505 6518]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [6472 7277])
                            ("find_first_unset_in" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Begin" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [7453 7468])
                                    ("End" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [7469 7482]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [7429 7551])
                            ("find_last_unset_in" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Begin" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [7724 7739])
                                    ("End" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [7740 7753]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [7701 8597])
                            ("find_first" function
                               (:methodconst-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [8698 8755])
                            ("find_last" function
                               (:methodconst-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [8854 8909])
                            ("find_next" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Prev" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [9060 9074]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [9046 9122])
                            ("find_prev" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("PriorTo" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [9288 9305]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [9274 9348])
                            ("find_first_unset" function
                               (:methodconst-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [9456 9525])
                            ("find_next_unset" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Prev" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [9688 9702]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [9668 9762])
                            ("find_last_unset" function
                               (:methodconst-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [9868 9935])
                            ("find_prev_unset" function
                               (:arguments 
                                  ( ("PriorTo" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [10109 10126]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [10089 10175])
                            ("clear" function (:type "void") (reparse-symbol classsubparts) [10230 10280])
                            ("resize" function
                               (:arguments 
                                  ( ("N" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [10341 10352])
                                    ("t" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [10353 10367]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [10329 10486])
                            ("reserve" function
                               (:arguments 
                                  ( ("N" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [10503 10514]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [10490 10548])
                            ("set" function (:type ("BitVector" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10574 10661])
                            ("set" function
                               (:arguments 
                                  ( ("Idx" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [10680 10693]))                                  
                                :type ("BitVector" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10665 10830])
                            ("set" function
                               (:arguments 
                                  ( ("I" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [10903 10914])
                                    ("E" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [10915 10926]))                                  
                                :type ("BitVector" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10888 11732])
                            ("reset" function (:type ("BitVector" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11736 11801])
                            ("reset" function
                               (:arguments 
                                  ( ("Idx" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [11822 11835]))                                  
                                :type ("BitVector" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11805 11930])
                            ("reset" function
                               (:arguments 
                                  ( ("I" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [12009 12020])
                                    ("E" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [12021 12032]))                                  
                                :type ("BitVector" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11992 12844])
                            ("flip" function (:type ("BitVector" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12848 12959])
                            ("flip" function
                               (:arguments 
                                  ( ("Idx" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [12979 12992]))                                  
                                :type ("BitVector" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12963 13084])
                            ("[]" function
                               (:operator-flag t
                                :arguments 
                                  ( ("Idx" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [13124 13137]))                                  
                                :type ("reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13103 13233])
                            ("[]" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("Idx" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [13253 13266]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [13237 13440])
                            ("back" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [13489 13609])
                            ("test" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Idx" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [13623 13636]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [13613 13673])
                            ("push_back" function
                               (:arguments 
                                  ( ("Val" variable (:type "bool") (reparse-symbol arg-sub-list) [13731 13740]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [13716 14080])
                            ("pop_back" function (:type "void") (reparse-symbol classsubparts) [14130 14238])
                            ("anyCommon" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BitVector" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14296 14317]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [14281 14553])
                            ("==" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BitVector" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14600 14621]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [14584 14800])
                            ("!=" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BitVector" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14820 14841]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [14804 14875])
                            ("&=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BitVector" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14944 14965]))                                  
                                :type ("BitVector" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14922 15419])
                            ("reset" function
                               (:arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BitVector" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15509 15530]))                                  
                                :type ("BitVector" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15492 15730])
                            ("test" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BitVector" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15836 15857]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [15826 16181])
                            ("apply" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("F" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16247 16251])
                                    ("" variable (:type ("f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16251 16253])
                                    ("Out" variable
                                       (:reference 1
                                        :type ("BitVector" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16254 16269])
                                    ("Arg" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BitVector" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16270 16291])
                                    ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("ArgTys" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16318 16333])
                                    ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16335 16340]))                                  
                                :type ("BitVector" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16223 16724])
                            ("|=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BitVector" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16750 16771]))                                  
                                :type ("BitVector" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16728 16940])
                            ("^=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BitVector" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16966 16987]))                                  
                                :type ("BitVector" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16944 17156])
                            (">>=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("N" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [17183 17194]))                                  
                                :type ("BitVector" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [17160 18965])
                            ("<<=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("N" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [18992 19003]))                                  
                                :type ("BitVector" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18969 20858])
                            ("swap" function
                               (:arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :type ("BitVector" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20872 20887]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [20862 20955])
                            ("invalid" function (:type "void") (reparse-symbol classsubparts) [20959 21039])
                            ("isInvalid" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [21042 21097])
                            ("getData" function
                               (:methodconst-flag t
                                :type ("ArrayRef" type
                                     (:template-specifier 
                                        ( ("BitWord" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [21101 21170])
                            ("setBitsInMask" function
                               (:arguments 
                                  ( ("Mask" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("uint32_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [21917 21938])
                                    ("MaskWords" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [21939 21959])
                                    ("" variable (:type ("0u" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21961 21964]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [21898 22015])
                            ("clearBitsInMask" function
                               (:arguments 
                                  ( ("Mask" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("uint32_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [22168 22189])
                                    ("MaskWords" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [22190 22210])
                                    ("" variable (:type ("0u" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22212 22215]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [22147 22267])
                            ("setBitsNotInMask" function
                               (:arguments 
                                  ( ("Mask" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("uint32_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [22423 22444])
                                    ("MaskWords" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [22445 22465])
                                    ("" variable (:type ("0u" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22467 22470]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [22401 22520])
                            ("clearBitsNotInMask" function
                               (:arguments 
                                  ( ("Mask" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("uint32_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [22681 22702])
                                    ("MaskWords" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [22703 22723])
                                    ("" variable (:type ("0u" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22725 22728]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [22657 22779])
                            ("private" label nil (reparse-symbol classsubparts) [22781 22789])
                            ("wordShl" function
                               (:arguments 
                                  ( ("Count" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23662 23677]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [23649 24098])
                            ("wordShr" function
                               (:arguments 
                                  ( ("Count" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24261 24276]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [24248 24507])
                            ("next_unset_in_word" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("WordIndex" variable (:type "int") (reparse-symbol arg-sub-list) [24534 24548])
                                    ("Word" variable (:type ("BitWord" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24549 24562]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [24511 24690])
                            ("NumBitWords" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("S" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [24715 24726]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [24694 24786])
                            ("set_unused_bits" function
                               (:arguments 
                                  ( ("t" variable
                                       (:default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [24855 24868]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [24834 25147])
                            ("clear_unused_bits" function (:type "void") (reparse-symbol classsubparts) [25197 25255])
                            ("init_words" function
                               (:arguments 
                                  ( ("t" variable (:type "bool") (reparse-symbol arg-sub-list) [25275 25282]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [25259 25345])
                            ("applyMask" function
                               (:template 
                                  ( ("bool" type (:typevar "AddBits") nil nil)
                                    ("bool" type (:typevar "InvertMask") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("Mask" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("uint32_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25406 25427])
                                    ("MaskWords" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [25428 25447]))                                  )
                                (reparse-symbol classsubparts) [25349 26322])
                            ("public" label nil (reparse-symbol classsubparts) [26324 26331])
                            ("getMemorySize" function
                               (:methodconst-flag t
                                :type ("size_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [26386 26459])
                            ("getBitCapacity" function
                               (:methodconst-flag t
                                :type ("size_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [26462 26533]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [2227 26536])
                    ("capacity_in_bytes" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("BitVector" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [26584 26603]))                          
                        :type ("BitVector::size_type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [26538 26635])
                    ("DenseMapInfo" type
                       (:type "struct"
                        :members 
                          ( ("getEmptyKey" function
                               (:typemodifiers ("static" "inline")
                                :type ("BitVector" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [26684 26736])
                            ("getTombstoneKey" function
                               (:typemodifiers ("static" "inline")
                                :type ("BitVector" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [26739 26834])
                            ("getHashValue" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("V" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BitVector" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26866 26885]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [26837 27032])
                            ("isEqual" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BitVector" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27055 27076])
                                    ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BitVector" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27077 27098]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [27035 27220]))                          
                        :template-specifier 
                          ( ("BitVector" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [26637 27223]))                  
                :type "namespace")
                nil [851 27225])
            ("std" type
               (:members 
                  ( ("swap" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("LHS" variable
                               (:reference 1
                                :type ("llvm::BitVector" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [27336 27357])
                            ("RHS" variable
                               (:reference 1
                                :type ("llvm::BitVector" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [27358 27379]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [27319 27398]))                  
                :type "namespace")
                nil [27249 27400]))          
      :file "BitVector.h"
      :pointmax 27454
      :fsize 27453
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 22724 . 22725) (punctuation 22722 . 22723) (punctuation 22466 . 22467) (punctuation 22464 . 22465) (punctuation 22211 . 22212) (punctuation 22209 . 22210) (punctuation 21960 . 21961) (punctuation 21958 . 21959) (punctuation 16334 . 16335) (punctuation 16333 . 16334) (punctuation 16332 . 16333) (punctuation 16250 . 16251) (punctuation 16219 . 16220) (symbol 16213 . 16219) (punctuation 16211 . 16212) (punctuation 16210 . 16211) (punctuation 16209 . 16210) (CLASS 16204 . 16209) (punctuation 16202 . 16203) (symbol 16201 . 16202) (CLASS 16195 . 16200) (punctuation 16194 . 16195) (TEMPLATE 16185 . 16193) (EXPLICIT 3935 . 3943) (semantic-list 3203 . 3267) (CONST 3197 . 3202) (semantic-list 3194 . 3196) (BOOL 3190 . 3194) (OPERATOR 3181 . 3189) (punctuation 2911 . 2912) (DEFAULT 2904 . 2911) (punctuation 2902 . 2903) (semantic-list 2883 . 2901) (symbol 2874 . 2883) (punctuation 2868 . 2869) (DELETE 2862 . 2868) (punctuation 2860 . 2861) (semantic-list 2857 . 2859) (symbol 2848 . 2857) (semantic-list 3203 . 3267) (CONST 3197 . 3202) (semantic-list 3194 . 3196) (BOOL 3190 . 3194) (OPERATOR 3181 . 3189) (punctuation 2911 . 2912) (DEFAULT 2904 . 2911) (punctuation 2902 . 2903) (semantic-list 2883 . 2901) (symbol 2874 . 2883) (punctuation 2868 . 2869) (DELETE 2862 . 2868) (punctuation 2860 . 2861) (semantic-list 2857 . 2859) (symbol 2848 . 2857) (punctuation 2599 . 2600) (UNSIGNED 2591 . 2599) (punctuation 2589 . 2590) (symbol 2579 . 2588) (USING 2573 . 2578) (punctuation 2457 . 2458) (symbol 2449 . 2456) (USING 2443 . 2448) (string 2414 . 2437) (number 2394 . 2396) (punctuation 2392 . 2393) (punctuation 2391 . 2392) (punctuation 2376 . 2377) (punctuation 2375 . 2376) (number 2372 . 2374) (punctuation 2370 . 2371) (punctuation 2369 . 2370) (punctuation 2325 . 2326) (semantic-list 2315 . 2324) (SIZEOF 2309 . 2315) (punctuation 2325 . 2326) (semantic-list 2315 . 2324) (SIZEOF 2309 . 2315) (punctuation 1555 . 1556) (DEFAULT 1548 . 1555) (punctuation 1546 . 1547) (semantic-list 1507 . 1545) (symbol 1479 . 1507) (EXPLICIT 1344 . 1352))
      :lexical-table 
        '(("LLVM_ADT_BITVECTOR_H")
          )
)
    (semanticdb-table "semanticdb-table-155561f8bbe4"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_APINT_H" variable (:constant-flag t) nil [622 638])
            ("llvm/Support/Compiler.h" include nil nil [640 674])
            ("llvm/Support/MathExtras.h" include nil nil [675 711])
            ("cassert" include (:system-flag t) nil [712 730])
            ("climits" include (:system-flag t) nil [731 749])
            ("cstring" include (:system-flag t) nil [750 768])
            ("utility" include (:system-flag t) nil [769 787])
            ("llvm" type
               (:members 
                  ( ("FoldingSetNodeID" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [806 829])
                    ("StringRef" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [830 846])
                    ("hash_code" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [847 863])
                    ("raw_ostream" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [864 882])
                    ("SmallVectorImpl" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [884 928])
                    ("ArrayRef" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [929 966])
                    ("Optional" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [967 1004])
                    ("DenseMapInfo" type
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("Enable" type (:type "class") nil nil))                          
                        :type "struct"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [1005 1064])
                    ("APInt" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1066 1078])
                    ("-" function
                       (:prototype-flag t
                        :operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("" variable (:type ("APInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1103 1109]))                          
                        :type ("APInt" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1080 1110])
                    ("APInt" variable (:type ("LLVM_NODISCARD" type
                         (:prototype t
                          :type "class")
                          nil nil)) (reparse-symbol namespacesubparts) [3241 68940])
                    ("==" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("V1" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68965 68977])
                            ("V2" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [68978 68994]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [68942 69015])
                    ("!=" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("V1" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69040 69052])
                            ("V2" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [69053 69069]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [69017 69090])
                    ("~" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("v" variable (:type ("APInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69220 69228]))                          
                        :type ("APInt" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [69197 69263])
                    ("&" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("a" variable (:type ("APInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69288 69296])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [69297 69312]))                          
                        :type ("APInt" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [69265 69338])
                    ("&" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [69363 69378])
                            ("" variable
                               (:reference 1
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [69379 69387])
                            ("" variable (:type ("b" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69387 69389]))                          
                        :type ("APInt" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [69340 69426])
                    ("&" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("a" variable (:type ("APInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69451 69459])
                            ("RHS" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69460 69473]))                          
                        :type ("APInt" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [69428 69501])
                    ("&" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("LHS" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69526 69539])
                            ("b" variable (:type ("APInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69540 69548]))                          
                        :type ("APInt" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [69503 69576])
                    ("|" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("a" variable (:type ("APInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69601 69609])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [69610 69625]))                          
                        :type ("APInt" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [69578 69651])
                    ("|" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [69676 69691])
                            ("" variable
                               (:reference 1
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [69692 69700])
                            ("" variable (:type ("b" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69700 69702]))                          
                        :type ("APInt" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [69653 69739])
                    ("|" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("a" variable (:type ("APInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69764 69772])
                            ("RHS" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69773 69786]))                          
                        :type ("APInt" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [69741 69814])
                    ("|" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("LHS" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69839 69852])
                            ("b" variable (:type ("APInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69853 69861]))                          
                        :type ("APInt" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [69816 69889])
                    ("^" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("a" variable (:type ("APInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69914 69922])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [69923 69938]))                          
                        :type ("APInt" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [69891 69964])
                    ("^" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [69989 70004])
                            ("" variable
                               (:reference 1
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [70005 70013])
                            ("" variable (:type ("b" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70013 70015]))                          
                        :type ("APInt" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [69966 70052])
                    ("^" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("a" variable (:type ("APInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70077 70085])
                            ("RHS" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70086 70099]))                          
                        :type ("APInt" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [70054 70127])
                    ("^" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("LHS" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70152 70165])
                            ("b" variable (:type ("APInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70166 70174]))                          
                        :type ("APInt" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [70129 70202])
                    ("<<" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("OS" variable
                               (:reference 1
                                :type ("raw_ostream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [70235 70251])
                            ("I" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [70252 70267]))                          
                        :type ("raw_ostream" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [70204 70305])
                    ("-" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("v" variable (:type ("APInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70330 70338]))                          
                        :type ("APInt" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [70307 70368])
                    ("+" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("a" variable (:type ("APInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70393 70401])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [70402 70417]))                          
                        :type ("APInt" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [70370 70443])
                    ("+" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [70468 70483])
                            ("" variable
                               (:reference 1
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [70484 70492])
                            ("" variable (:type ("b" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70492 70494]))                          
                        :type ("APInt" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [70445 70531])
                    ("+" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("a" variable (:type ("APInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70556 70564])
                            ("RHS" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70565 70578]))                          
                        :type ("APInt" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [70533 70606])
                    ("+" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("LHS" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70631 70644])
                            ("b" variable (:type ("APInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70645 70653]))                          
                        :type ("APInt" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [70608 70681])
                    ("-" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("a" variable (:type ("APInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70706 70714])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [70715 70730]))                          
                        :type ("APInt" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [70683 70756])
                    ("-" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [70781 70796])
                            ("" variable
                               (:reference 1
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [70797 70805])
                            ("" variable (:type ("b" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70805 70807]))                          
                        :type ("APInt" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [70758 70858])
                    ("-" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("a" variable (:type ("APInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70883 70891])
                            ("RHS" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70892 70905]))                          
                        :type ("APInt" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [70860 70933])
                    ("-" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("LHS" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70958 70971])
                            ("b" variable (:type ("APInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70972 70980]))                          
                        :type ("APInt" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [70935 71022])
                    ("" function
                       (:operator-flag t
                        :function-pointer t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("a" variable (:type ("APInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71047 71055])
                            ("RHS" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71056 71069]))                          
                        :type ("APInt" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [71024 71097])
                    ("" function
                       (:operator-flag t
                        :function-pointer t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("LHS" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71122 71135])
                            ("b" variable (:type ("APInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71136 71144]))                          
                        :type ("APInt" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [71099 71172])
                    ("APIntOps" type
                       (:members 
                          ( ("smin" function
                               (:typemodifiers ("inline")
                                :constant-flag t
                                :arguments 
                                  ( ("A" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [71286 71301])
                                    ("B" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [71302 71317]))                                  
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [71261 71348])
                            ("smax" function
                               (:typemodifiers ("inline")
                                :constant-flag t
                                :arguments 
                                  ( ("A" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [71439 71454])
                                    ("B" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [71455 71470]))                                  
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [71414 71501])
                            ("umin" function
                               (:typemodifiers ("inline")
                                :constant-flag t
                                :arguments 
                                  ( ("A" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [71595 71610])
                                    ("B" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [71611 71626]))                                  
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [71570 71657])
                            ("umax" function
                               (:typemodifiers ("inline")
                                :constant-flag t
                                :arguments 
                                  ( ("A" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [71750 71765])
                                    ("B" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [71766 71781]))                                  
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [71725 71812])
                            ("GreatestCommonDivisor" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("A" variable (:type ("APInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72056 72064])
                                    ("B" variable (:type ("APInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72065 72073]))                                  
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [72028 72074])
                            ("RoundAPIntToDouble" function
                               (:typemodifiers ("inline")
                                :arguments 
                                  ( ("APIVal" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [72228 72248]))                                  
                                :type "double")
                                (reparse-symbol namespacesubparts) [72195 72285])
                            ("RoundSignedAPIntToDouble" function
                               (:typemodifiers ("inline")
                                :arguments 
                                  ( ("APIVal" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [72442 72462]))                                  
                                :type "double")
                                (reparse-symbol namespacesubparts) [72403 72505])
                            ("RoundAPIntToFloat" function
                               (:typemodifiers ("inline")
                                :arguments 
                                  ( ("APIVal" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [72585 72605]))                                  
                                :type "float")
                                (reparse-symbol namespacesubparts) [72554 72653])
                            ("RoundSignedAPIntToFloat" function
                               (:typemodifiers ("inline")
                                :arguments 
                                  ( ("APIVal" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [72807 72827]))                                  
                                :type "float")
                                (reparse-symbol namespacesubparts) [72770 72877])
                            ("RoundDoubleToAPInt" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Double" variable (:type "double") (reparse-symbol arg-sub-list) [73018 73032])
                                    ("width" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [73033 73048]))                                  
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [72993 73049])
                            ("RoundFloatToAPInt" function
                               (:typemodifiers ("inline")
                                :arguments 
                                  ( ("Float" variable (:type "float") (reparse-symbol arg-sub-list) [73175 73187])
                                    ("width" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [73188 73203]))                                  
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [73144 73258])
                            ("RoundingUDiv" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("A" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [73349 73364])
                                    ("B" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [73365 73380])
                                    ("RM" variable (:type ("APInt::Rounding" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73381 73400]))                                  
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [73330 73401])
                            ("RoundingSDiv" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("A" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [73490 73505])
                                    ("B" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [73506 73521])
                                    ("RM" variable (:type ("APInt::Rounding" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73522 73541]))                                  
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [73471 73542])
                            ("SolveQuadraticEquationWrap" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("A" variable (:type ("APInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75438 75446])
                                    ("B" variable (:type ("APInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75447 75455])
                                    ("C" variable (:type ("APInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75456 75464])
                                    ("RangeWidth" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [75508 75528]))                                  
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("APInt" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol namespacesubparts) [75395 75529])
                            ("GetMostSignificantDifferentBit" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("A" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [75717 75732])
                                    ("B" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [75783 75798]))                                  
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("unsigned int" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol namespacesubparts) [75667 75799])
                            ("ScaleBitMask" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("A" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [76188 76203])
                                    ("NewBitWidth" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [76204 76225]))                                  
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [76169 76226]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [71174 76228])
                    ("hash_value" function
                       (:prototype-flag t
                        :arguments 
                          ( ("Arg" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [76397 76414]))                          
                        :type ("hash_code" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [76376 76415])
                    ("StoreIntToMemory" function
                       (:prototype-flag t
                        :arguments 
                          ( ("IntVal" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [76554 76574])
                            ("Dst" variable
                               (:pointer 1
                                :type ("uint8_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [76575 76588])
                            ("StoreBytes" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [76589 76609]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [76532 76610])
                    ("LoadIntFromMemory" function
                       (:prototype-flag t
                        :arguments 
                          ( ("IntVal" variable
                               (:reference 1
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [76795 76809])
                            ("Src" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("uint8_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [76810 76829])
                            ("LoadBytes" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [76830 76849]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [76772 76850])
                    ("DenseMapInfo" type
                       (:type "struct"
                        :members 
                          ( ("getEmptyKey" function
                               (:typemodifiers ("static" "inline")
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [76937 77032])
                            ("getTombstoneKey" function
                               (:typemodifiers ("static" "inline")
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [77036 77135])
                            ("getHashValue" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("Key" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [77168 77185]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [77139 77186])
                            ("isEqual" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [77210 77227])
                                    ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [77228 77245]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [77190 77316]))                          
                        :template-specifier 
                          ( ("APInt" type nil nil nil)
                            ("void" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [76888 77319]))                  
                :type "namespace")
                nil [789 77322]))          
      :file "APInt.h"
      :pointmax 77349
      :fsize 77348
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 70804 . 70805) (punctuation 70491 . 70492) (punctuation 70012 . 70013) (punctuation 69699 . 69700) (punctuation 69386 . 69387))
      :lexical-table 
        '(("LLVM_ADT_APINT_H")
          )
)
    (semanticdb-table "semanticdb-table-155561f8bc44"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_ARRAYREF_H" variable (:constant-flag t) nil [407 426])
            ("llvm/ADT/Hashing.h" include nil nil [428 457])
            ("llvm/ADT/None.h" include nil nil [458 484])
            ("llvm/ADT/SmallVector.h" include nil nil [485 518])
            ("llvm/ADT/STLExtras.h" include nil nil [519 550])
            ("llvm/Support/Compiler.h" include nil nil [551 585])
            ("algorithm" include (:system-flag t) nil [586 606])
            ("array" include (:system-flag t) nil [607 623])
            ("cassert" include (:system-flag t) nil [624 642])
            ("cstddef" include (:system-flag t) nil [643 661])
            ("initializer_list" include (:system-flag t) nil [662 689])
            ("iterator" include (:system-flag t) nil [690 709])
            ("memory" include (:system-flag t) nil [710 727])
            ("type_traits" include (:system-flag t) nil [728 750])
            ("vector" include (:system-flag t) nil [751 768])
            ("llvm" type
               (:members 
                  ( ("ArrayRef" variable (:type ("LLVM_NODISCARD" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [1436 10007])
                    ("ArrayRef" variable (:type "int") (reparse-symbol namespacesubparts) [10716 15539])
                    ("OwningArrayRef" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [15671 15678])
                            ("OwningArrayRef" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15730 15742]))                                  
                                :type ("OwningArrayRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15715 15785])
                            ("OwningArrayRef" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Data" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("T" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [15806 15823]))                                  
                                :type ("OwningArrayRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15791 15951])
                            ("OwningArrayRef" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("OwningArrayRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15972 15989])
                                    ("" variable (:type ("Other" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15989 15995]))                                  
                                :type ("OwningArrayRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15957 16025])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("OwningArrayRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16057 16074])
                                    ("" variable (:type ("Other" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16074 16080]))                                  
                                :type ("OwningArrayRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16031 16252])
                            ("OwningArrayRef" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [16258 16302]))                          
                        :superclasses 
                          ( ("MutableArrayRef" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [15596 16307])
                    ("makeArrayRef" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("ArrayRef" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("OneElt" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [16466 16482]))                          )
                        (reparse-symbol namespacesubparts) [16418 16507])
                    ("makeArrayRef" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("ArrayRef" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("data" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [16614 16628])
                            ("length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16629 16643]))                          )
                        (reparse-symbol namespacesubparts) [16566 16687])
                    ("makeArrayRef" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("ArrayRef" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("begin" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [16781 16796])
                            ("end" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [16797 16810]))                          )
                        (reparse-symbol namespacesubparts) [16733 16852])
                    ("makeArrayRef" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("ArrayRef" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("Vec" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SmallVectorImpl" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [16953 16983]))                          )
                        (reparse-symbol namespacesubparts) [16904 17005])
                    ("makeArrayRef" function
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("unsigned int" type (:typevar "N") nil nil))                          
                        :type ("ArrayRef" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("Vec" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SmallVector" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("N" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [17118 17147]))                          )
                        (reparse-symbol namespacesubparts) [17057 17169])
                    ("makeArrayRef" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("ArrayRef" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("Vec" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [17269 17295]))                          )
                        (reparse-symbol namespacesubparts) [17221 17317])
                    ("makeArrayRef" function
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("std::size_t" type (:typevar "N") nil nil))                          
                        :type ("ArrayRef" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("Arr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::array" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("N" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [17432 17460]))                          )
                        (reparse-symbol namespacesubparts) [17368 17482])
                    ("makeArrayRef" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("ArrayRef" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("Vec" variable
                               (:reference 1
                                :constant-flag t
                                :type ("ArrayRef" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [17594 17617]))                          )
                        (reparse-symbol namespacesubparts) [17547 17639])
                    ("makeArrayRef" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("ArrayRef" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("Vec" variable
                               (:reference 1
                                :type ("ArrayRef" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [17744 17761]))                          )
                        (reparse-symbol namespacesubparts) [17696 17783])
                    ("makeArrayRef" function
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("size_t" type (:typevar "N") nil nil))                          
                        :type ("ArrayRef" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("" variable
                               (:constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [17889 17903]))                          )
                        (reparse-symbol namespacesubparts) [17831 17942])
                    ("makeMutableArrayRef" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("MutableArrayRef" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("OneElt" variable
                               (:reference 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [18065 18075]))                          )
                        (reparse-symbol namespacesubparts) [18003 18100])
                    ("makeMutableArrayRef" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("MutableArrayRef" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("data" variable
                               (:pointer 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [18227 18235])
                            ("length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18236 18250]))                          )
                        (reparse-symbol namespacesubparts) [18165 18301])
                    ("==" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("LHS" variable (:type ("ArrayRef" type
                                 (:template-specifier 
                                    ( ("T" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [18412 18428])
                            ("RHS" variable (:type ("ArrayRef" type
                                 (:template-specifier 
                                    ( ("T" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [18429 18445]))                          
                        :typemodifiers ("inline")
                        :operator-flag t)
                        (reparse-symbol namespacesubparts) [18366 18479])
                    ("==" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("LHS" variable
                               (:reference 1
                                :type ("SmallVectorImpl" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [18530 18554])
                            ("RHS" variable (:type ("ArrayRef" type
                                 (:template-specifier 
                                    ( ("T" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [18555 18571]))                          
                        :typemodifiers ("inline")
                        :operator-flag t)
                        (reparse-symbol namespacesubparts) [18483 18618])
                    ("!=" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("LHS" variable (:type ("ArrayRef" type
                                 (:template-specifier 
                                    ( ("T" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [18669 18685])
                            ("RHS" variable (:type ("ArrayRef" type
                                 (:template-specifier 
                                    ( ("T" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [18686 18702]))                          
                        :typemodifiers ("inline")
                        :operator-flag t)
                        (reparse-symbol namespacesubparts) [18622 18734])
                    ("!=" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("LHS" variable
                               (:reference 1
                                :type ("SmallVectorImpl" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [18785 18809])
                            ("RHS" variable (:type ("ArrayRef" type
                                 (:template-specifier 
                                    ( ("T" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [18810 18826]))                          
                        :typemodifiers ("inline")
                        :operator-flag t)
                        (reparse-symbol namespacesubparts) [18738 18858])
                    ("hash_value" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("hash_code" type (:type "class") nil nil)
                        :arguments 
                          ( ("S" variable (:type ("ArrayRef" type
                                 (:template-specifier 
                                    ( ("T" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [18915 18929]))                          )
                        (reparse-symbol namespacesubparts) [18872 18986])
                    ("DenseMapInfo" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("getEmptyKey" function
                               (:typemodifiers ("static" "inline")
                                :type ("ArrayRef" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [19098 19250])
                            ("getTombstoneKey" function
                               (:typemodifiers ("static" "inline")
                                :type ("ArrayRef" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [19256 19412])
                            ("getHashValue" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Val" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("T" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [19447 19463]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [19418 19711])
                            ("isEqual" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("LHS" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("T" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [19737 19753])
                                    ("RHS" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("T" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [19754 19770]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [19717 20005]))                          
                        :template-specifier 
                          ( ("ArrayRef" type (:template-specifier 
                              ( ("T" type nil nil nil))                              ) nil nil)
                            ("void" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [19031 20010]))                  
                :type "namespace")
                nil [770 20013]))          
      :file "ArrayRef.h"
      :pointmax 20067
      :fsize 20066
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((semantic-list 17903 . 17906) (semantic-list 17897 . 17903) (punctuation 16073 . 16074) (punctuation 15988 . 15989) (punctuation 15709 . 15710) (DEFAULT 15702 . 15709) (punctuation 15700 . 15701) (semantic-list 15697 . 15699) (symbol 15683 . 15697) (PUBLIC 10709 . 10715) (punctuation 10707 . 10708) (symbol 10691 . 10706) (symbol 10676 . 10690) (CLASS 10670 . 10675) (punctuation 10666 . 10667) (symbol 10665 . 10666) (TYPENAME 10656 . 10664) (punctuation 10655 . 10656) (TEMPLATE 10647 . 10655) (symbol 1419 . 1435) (CLASS 1413 . 1418) (punctuation 1409 . 1410) (symbol 1408 . 1409) (TYPENAME 1399 . 1407) (punctuation 1398 . 1399) (TEMPLATE 1390 . 1398))
      :lexical-table 
        '(("LLVM_ADT_ARRAYREF_H")
          )
)
    (semanticdb-table "semanticdb-table-155561f8bcd4"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_STRINGREF_H" variable (:constant-flag t) nil [408 428])
            ("llvm/ADT/DenseMapInfo.h" include nil nil [430 464])
            ("llvm/ADT/STLFunctionalExtras.h" include nil nil [465 506])
            ("llvm/ADT/iterator_range.h" include nil nil [507 543])
            ("llvm/Support/Compiler.h" include nil nil [544 578])
            ("algorithm" include (:system-flag t) nil [579 599])
            ("cassert" include (:system-flag t) nil [600 618])
            ("cstddef" include (:system-flag t) nil [619 637])
            ("cstring" include (:system-flag t) nil [638 656])
            ("limits" include (:system-flag t) nil [657 674])
            ("string" include (:system-flag t) nil [675 692])
            ("string_view" include (:system-flag t) nil [719 741])
            ("type_traits" include (:system-flag t) nil [749 771])
            ("utility" include (:system-flag t) nil [772 790])
            ("llvm" type
               (:members 
                  ( ("APInt" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [986 998])
                    ("hash_code" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1001 1017])
                    ("SmallVectorImpl" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [1020 1064])
                    ("StringRef" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1067 1083])
                    ("getAsUnsignedInteger" function
                       (:prototype-flag t
                        :arguments 
                          ( ("Str" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1165 1179])
                            ("Radix" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [1180 1195])
                            ("Result" variable
                               (:reference 1
                                :type "unsigned long long")
                                (reparse-symbol arg-sub-list) [1224 1251]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [1139 1252])
                    ("getAsSignedInteger" function
                       (:prototype-flag t
                        :arguments 
                          ( ("Str" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1280 1294])
                            ("Radix" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [1295 1310])
                            ("Result" variable
                               (:reference 1
                                :type "long long")
                                (reparse-symbol arg-sub-list) [1311 1329]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [1256 1330])
                    ("consumeUnsignedInteger" function
                       (:prototype-flag t
                        :arguments 
                          ( ("Str" variable
                               (:reference 1
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1362 1377])
                            ("Radix" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [1378 1393])
                            ("Result" variable
                               (:reference 1
                                :type "unsigned long long")
                                (reparse-symbol arg-sub-list) [1424 1451]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [1334 1452])
                    ("consumeSignedInteger" function
                       (:prototype-flag t
                        :arguments 
                          ( ("Str" variable
                               (:reference 1
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1481 1496])
                            ("Radix" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [1497 1512])
                            ("Result" variable
                               (:reference 1
                                :type "long long")
                                (reparse-symbol arg-sub-list) [1513 1531]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [1455 1532])
                    ("StringRef" variable (:type ("LLVM_GSL_POINTER" type
                         (:prototype t
                          :type "class")
                          nil nil)) (reparse-symbol namespacesubparts) [1958 31716])
                    ("StringLiteral" type
                       (:superclasses 
                          ( ("StringRef" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("private" label nil (reparse-symbol classsubparts) [32111 32119])
                            ("StringLiteral" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Str" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [32148 32164])
                                    ("N" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32165 32174]))                                  
                                :type ("constexpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32124 32202])
                            ("public" label nil (reparse-symbol classsubparts) [32206 32213])
                            ("StringLiteral" function
                               (:template 
                                  ( ("size_t" type (:typevar "N") nil nil))                                  
                                :type ("constexpr" type (:type "class") nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [32266 32283]))                                  
                                :constructor-flag t)
                                (reparse-symbol classsubparts) [32218 32616])
                            ("withInnerNUL" function
                               (:arguments 
                                  ( ("" variable
                                       (:constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [32748 32765]))                                  
                                :type ("StringLiteral" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32721 32817]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [32068 32822])
                    ("==" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("LHS" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32902 32916])
                            ("RHS" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32917 32931]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [32879 32965])
                    ("!=" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("LHS" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32992 33006])
                            ("RHS" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33007 33021]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [32969 33047])
                    ("<" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("LHS" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33073 33087])
                            ("RHS" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33088 33102]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [33051 33143])
                    ("<=" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("LHS" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33170 33184])
                            ("RHS" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33185 33199]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [33147 33239])
                    (">" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("LHS" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33265 33279])
                            ("RHS" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33280 33294]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [33243 33334])
                    (">=" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("LHS" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33361 33375])
                            ("RHS" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33376 33390]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [33338 33431])
                    ("+=" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("buffer" variable
                               (:reference 1
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [33466 33486])
                            ("string" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33487 33504]))                          
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [33435 33566])
                    ("hash_value" function
                       (:prototype-flag t
                        :arguments 
                          ( ("S" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33661 33673]))                          
                        :type ("hash_code" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [33640 33674])
                    ("DenseMapInfo" type
                       (:type "struct"
                        :members 
                          ( ("getEmptyKey" function
                               (:typemodifiers ("static" "inline")
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [33775 33918])
                            ("getTombstoneKey" function
                               (:typemodifiers ("static" "inline")
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [33924 34071])
                            ("getHashValue" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("Val" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34106 34120]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [34077 34121])
                            ("isEqual" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("LHS" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34147 34161])
                                    ("RHS" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34162 34176]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [34127 34411]))                          
                        :template-specifier 
                          ( ("StringRef" type nil nil nil)
                            ("void" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [33720 34416]))                  
                :type "namespace")
                nil [966 34419]))          
      :file "StringRef.h"
      :pointmax 34474
      :fsize 34473
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((symbol 33623 . 33637) (semantic-list 32765 . 32768) (semantic-list 32759 . 32765) (symbol 32711 . 32720) (STATIC 32704 . 32710) (punctuation 32698 . 32699) (symbol 32697 . 32698) (symbol 32690 . 32696) (punctuation 32689 . 32690) (TEMPLATE 32680 . 32688) (semantic-list 32283 . 32286) (semantic-list 32277 . 32283))
      :lexical-table 
        '(("LLVM_ADT_STRINGREF_H")
          )
)
    (semanticdb-table "semanticdb-table-155561fa893c"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_NONE_H" variable (:constant-flag t) nil [664 679])
            ("llvm" type
               (:members 
                  ( ("NoneType" type (:type "class") (reparse-symbol namespacesubparts) [922 950])
                    ("NoneType::None" variable (:type "int") (reparse-symbol namespacesubparts) [973 988]))                  
                :type "namespace")
                nil [681 990]))          
      :file "None.h"
      :pointmax 999
      :fsize 998
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 971 . 972) (symbol 966 . 970) (symbol 957 . 965) (CONST 951 . 956) (number 946 . 947) (punctuation 944 . 945) (symbol 939 . 943) (ENUM 917 . 921))
      :lexical-table 
        '(("LLVM_ADT_NONE_H")
          )
)
    (semanticdb-table "semanticdb-table-155561fa89fc"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_STRINGMAP_H" variable (:constant-flag t) nil [550 570])
            ("llvm/ADT/StringMapEntry.h" include nil nil [572 608])
            ("llvm/ADT/iterator.h" include nil nil [609 639])
            ("llvm/Support/AllocatorBase.h" include nil nil [640 679])
            ("llvm/Support/PointerLikeTypeTraits.h" include nil nil [680 727])
            ("initializer_list" include (:system-flag t) nil [728 755])
            ("iterator" include (:system-flag t) nil [756 775])
            ("llvm" type
               (:members 
                  ( ("StringMapConstIterator" type
                       (:template 
                          ( ("ValueTy" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [795 852])
                    ("StringMapIterator" type
                       (:template 
                          ( ("ValueTy" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [853 905])
                    ("StringMapKeyIterator" type
                       (:template 
                          ( ("ValueTy" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [906 961])
                    ("StringMapImpl" type
                       (:members 
                          ( ("protected" label nil (reparse-symbol classsubparts) [1093 1103])
                            ("TheTable" variable
                               (:pointer 2
                                :default-value "nullptr"
                                :type ("StringMapEntryBase" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1323 1363])
                            ("NumBuckets" variable
                               (:default-value "0"
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [1366 1390])
                            ("NumItems" variable
                               (:default-value "0"
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [1393 1415])
                            ("NumTombstones" variable
                               (:default-value "0"
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [1418 1445])
                            ("ItemSize" variable (:type "unsigned int") (reparse-symbol classsubparts) [1448 1466])
                            ("protected" label nil (reparse-symbol classsubparts) [1468 1478])
                            ("StringMapImpl" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("itemSize" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [1504 1522]))                                  
                                :type ("StringMapImpl" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1490 1546])
                            ("StringMapImpl" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("StringMapImpl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1563 1579])
                                    ("" variable (:type ("RHS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1579 1583]))                                  
                                :type ("StringMapImpl" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1549 1847])
                            ("StringMapImpl" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("InitSize" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [1865 1883])
                                    ("ItemSize" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [1884 1902]))                                  
                                :type ("StringMapImpl" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1851 1903])
                            ("RehashTable" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("BucketNo" variable
                                       (:default-value "0"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [1927 1948]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [1906 1950])
                            ("LookupBucketFor" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Key" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2322 2336]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [2297 2337])
                            ("FindKey" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Key" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2547 2561]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [2535 2568])
                            ("RemoveKey" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :type ("StringMapEntryBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2731 2753]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [2716 2754])
                            ("RemoveKey" function
                               (:prototype-flag t
                                :pointer 1
                                :arguments 
                                  ( ("Key" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2942 2956]))                                  
                                :type ("StringMapEntryBase" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2912 2957])
                            ("init" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Size" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [3077 3091]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [3067 3092])
                            ("public" label nil (reparse-symbol classsubparts) [3094 3101])
                            ("PointerLikeTypeTraits::NumLowBitsAvailable" variable (:type "int") (reparse-symbol classsubparts) [3191 3256])
                            ("getTombstoneVal" function
                               (:pointer 1
                                :typemodifiers ("static")
                                :type ("StringMapEntryBase" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3260 3378])
                            ("getNumBuckets" function
                               (:methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [3382 3435])
                            ("getNumItems" function
                               (:methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [3438 3487])
                            ("empty" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [3491 3535])
                            ("size" function
                               (:methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [3538 3580])
                            ("swap" function
                               (:arguments 
                                  ( ("Other" variable
                                       (:reference 1
                                        :type ("StringMapImpl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3594 3615]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [3584 3799]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1071 3802])
                    ("StringMap" type
                       (:template 
                          ( ("ValueTy" type (:type "class") nil nil)
                            ("AllocatorTy" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("Allocator" variable (:type ("AllocatorTy" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4212 4234])
                            ("public" label nil (reparse-symbol classsubparts) [4236 4243])
                            ("StringMapEntry" variable (:type "int") (reparse-symbol classsubparts) [4265 4289])
                            ("StringMap" function
                               (:constructor-flag t
                                :type ("StringMap" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4293 4366])
                            ("StringMap" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("InitialSize" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [4389 4410]))                                  
                                :type ("StringMap" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4379 4491])
                            ("StringMap" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("A" variable (:type ("AllocatorTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4514 4528]))                                  
                                :type ("StringMap" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4504 4613])
                            ("StringMap" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("InitialSize" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [4627 4648])
                                    ("A" variable (:type ("AllocatorTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4649 4663]))                                  
                                :type ("StringMap" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4617 4766])
                            ("StringMap" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("List" variable (:type ("std::initializer_list" type
                                         (:template-specifier 
                                            ( ("std::pair" type (:template-specifier 
                                                ( ("StringRef" type nil nil nil)
                                                  ("ValueTy" type nil nil nil))                                                ) nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [4780 4838]))                                  
                                :type ("StringMap" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4770 4940])
                            ("StringMap" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("StringMap" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4954 4966])
                                    ("" variable (:type ("RHS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4966 4970]))                                  
                                :type ("StringMap" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4944 5048])
                            ("StringMap" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("StringMap" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5062 5083]))                                  
                                :type ("StringMap" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5052 6412])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("RHS" variable (:type ("StringMap" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6437 6451]))                                  
                                :type ("StringMap" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6416 6546])
                            ("StringMap" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [6550 7051])
                            ("getAllocator" function (:type ("AllocatorTy" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7055 7104])
                            ("getAllocator" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("AllocatorTy" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7107 7168])
                            ("mapped_type" variable
                               (:default-value "ValueTy"
                                :type "int")
                                (reparse-symbol classsubparts) [7211 7233])
                            ("StringMapEntry" variable (:type "int") (reparse-symbol classsubparts) [7255 7279])
                            ("size_type" variable
                               (:default-value "size_t"
                                :type "int")
                                (reparse-symbol classsubparts) [7288 7307])
                            ("StringMapConstIterator" variable (:type "int") (reparse-symbol classsubparts) [7334 7366])
                            ("StringMapIterator" variable (:type "int") (reparse-symbol classsubparts) [7386 7413])
                            ("begin" function (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7417 7481])
                            ("end" function (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7484 7548])
                            ("begin" function
                               (:methodconst-flag t
                                :type ("const_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7551 7639])
                            ("end" function
                               (:methodconst-flag t
                                :type ("const_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7642 7730])
                            ("keys" function
                               (:methodconst-flag t
                                :type ("iterator_range" type
                                     (:template-specifier 
                                        ( ("StringMapKeyIterator" type (:template-specifier 
                                            ( ("ValueTy" type nil nil nil))                                            ) nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [7734 7921])
                            ("find" function
                               (:arguments 
                                  ( ("Key" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7939 7953]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7925 8078])
                            ("find" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Key" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8102 8116]))                                  
                                :type ("const_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8082 8253])
                            ("lookup" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Key" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8389 8403]))                                  
                                :type ("ValueTy" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8374 8518])
                            ("[]" function
                               (:operator-flag t
                                :arguments 
                                  ( ("Key" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8657 8671]))                                  
                                :type ("ValueTy" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8637 8714])
                            ("count" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Key" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8800 8814]))                                  
                                :type ("size_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8784 8859])
                            ("count" function
                               (:template 
                                  ( ("InputTy" type (:type "class") nil nil))                                  
                                :type ("size_type" type (:type "class") nil nil)
                                :arguments 
                                  ( ("MapEntry" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("StringMapEntry" type
                                             (:template-specifier 
                                                ( ("InputTy" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [8909 8949]))                                  
                                :methodconst-flag t)
                                (reparse-symbol classsubparts) [8863 8998])
                            ("==" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("StringMap" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9080 9101]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [9064 9420])
                            ("!=" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("StringMap" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9440 9461]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [9424 9495])
                            ("insert" function
                               (:arguments 
                                  ( ("KeyValue" variable
                                       (:pointer 1
                                        :type ("MapEntryTy" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9701 9722]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [9689 10125])
                            ("insert" function
                               (:arguments 
                                  ( ("KV" variable (:type ("std::pair" type
                                         (:template-specifier 
                                            ( ("StringRef" type nil nil nil)
                                              ("ValueTy" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [10477 10510]))                                  
                                :type ("std::pair" type
                                     (:template-specifier 
                                        ( ("iterator" type nil nil nil)
                                          ("bool" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [10444 10572])
                            ("insert" function
                               (:template 
                                  ( ("InputIt" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("First" variable (:type ("InputIt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10792 10806])
                                    ("Last" variable (:type ("InputIt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10807 10820]))                                  )
                                (reparse-symbol classsubparts) [10752 10892])
                            ("insert" function
                               (:arguments 
                                  ( ("List" variable (:type ("std::initializer_list" type
                                         (:template-specifier 
                                            ( ("std::pair" type (:template-specifier 
                                                ( ("StringRef" type nil nil nil)
                                                  ("ValueTy" type nil nil nil))                                                ) nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [11086 11144]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [11074 11188])
                            ("insert_or_assign" function
                               (:template 
                                  ( ("V" type (:type "class") nil nil))                                  
                                :type ("std::pair" type
                                     (:template-specifier 
                                        ( ("iterator" type nil nil nil)
                                          ("bool" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("Key" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11395 11409])
                                    ("" variable
                                       (:reference 1
                                        :type ("V" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11410 11414])
                                    ("" variable (:type ("Val" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11414 11418]))                                  )
                                (reparse-symbol classsubparts) [11328 11564])
                            ("try_emplace" function
                               (:arguments 
                                  ( ("Key" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11951 11965])
                                    ("" variable
                                       (:reference 1
                                        :type ("ArgsTy" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11966 11975])
                                    ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11979 11984]))                                  
                                :type ("std::pair" type
                                     (:template-specifier 
                                        ( ("iterator" type nil nil nil)
                                          ("bool" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [11913 12584])
                            ("clear" function (:type "void") (reparse-symbol classsubparts) [12627 13113])
                            ("remove" function
                               (:arguments 
                                  ( ("KeyValue" variable
                                       (:pointer 1
                                        :type ("MapEntryTy" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13264 13285]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [13252 13310])
                            ("erase" function
                               (:arguments 
                                  ( ("I" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13325 13336]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [13314 13408])
                            ("erase" function
                               (:arguments 
                                  ( ("Key" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13423 13437]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [13412 13542]))                          
                        :superclasses 
                          ( ("StringMapImpl" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [4101 13545])
                    ("StringMapIterBase" type
                       (:template 
                          ( ("DerivedTy" type (:type "class") nil nil)
                            ("ValueTy" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("protected" label nil (reparse-symbol classsubparts) [13736 13746])
                            ("Ptr" variable
                               (:pointer 2
                                :default-value "nullptr"
                                :type ("StringMapEntryBase" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13749 13784])
                            ("public" label nil (reparse-symbol classsubparts) [13786 13793])
                            ("StringMapIterBase" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Bucket" variable
                                       (:pointer 2
                                        :type ("StringMapEntryBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13857 13885])
                                    ("NoAdvance" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [13915 13937]))                                  
                                :type ("StringMapIterBase" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13839 14017])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("Other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DerivedTy" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14042 14065]))                                  
                                :type ("DerivedTy" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14021 14136])
                            ("==" function
                               (:operator-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DerivedTy" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14163 14184])
                                    ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DerivedTy" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14185 14206]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [14140 14243])
                            ("++" function
                               (:operator-flag t
                                :type ("DerivedTy" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14247 14378])
                            ("++" function
                               (:operator-flag t
                                :arguments 
                                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [14403 14407]))                                  
                                :type ("DerivedTy" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14382 14484])
                            ("private" label nil (reparse-symbol classsubparts) [14486 14494])
                            ("AdvancePastEmptyBuckets" function (:type "void") (reparse-symbol classsubparts) [14497 14618]))                          
                        :superclasses 
                          ( ("iterator_facade_base" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [13547 14621])
                    ("StringMapConstIterator" type
                       (:template 
                          ( ("ValueTy" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("StringMapIterBase" variable (:type "int") (reparse-symbol classsubparts) [14823 14938])
                            ("public" label nil (reparse-symbol classsubparts) [14940 14947])
                            ("StringMapConstIterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Bucket" variable
                                       (:pointer 2
                                        :type ("StringMapEntryBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15020 15048])
                                    ("NoAdvance" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [15083 15105]))                                  
                                :type ("StringMapConstIterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14997 15141])
                            ("" function
                               (:methodconst-flag t
                                :operator-flag t
                                :function-pointer t
                                :constant-flag t
                                :type ("StringMapEntry" type
                                     (:template-specifier 
                                        ( ("ValueTy" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [15145 15269]))                          
                        :superclasses 
                          ( ("StringMapIterBase" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [14623 15272])
                    ("StringMapIterator" type
                       (:template 
                          ( ("ValueTy" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("StringMapIterBase" variable (:type "int") (reparse-symbol classsubparts) [15480 15551])
                            ("public" label nil (reparse-symbol classsubparts) [15553 15560])
                            ("StringMapIterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Bucket" variable
                                       (:pointer 2
                                        :type ("StringMapEntryBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15623 15651])
                                    ("NoAdvance" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [15681 15703]))                                  
                                :type ("StringMapIterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15605 15739])
                            ("" function
                               (:methodconst-flag t
                                :operator-flag t
                                :function-pointer t
                                :type ("StringMapEntry" type
                                     (:template-specifier 
                                        ( ("ValueTy" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [15743 15855])
                            ("StringMapConstIterator" function
                               (:template-specifier 
                                  ( ("ValueTy" type nil nil nil))                                  
                                :methodconst-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [15868 15974]))                          
                        :superclasses 
                          ( ("StringMapIterBase" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [15274 15977])
                    ("StringMapKeyIterator" type
                       (:template 
                          ( ("ValueTy" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("iterator_adaptor_base" variable (:type "int") (reparse-symbol classsubparts) [16258 16456])
                            ("public" label nil (reparse-symbol classsubparts) [16458 16465])
                            ("StringMapKeyIterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Iter" variable (:type ("StringMapConstIterator" type
                                         (:template-specifier 
                                            ( ("ValueTy" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [16534 16571]))                                  
                                :type ("StringMapKeyIterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16513 16604])
                            ("" function
                               (:methodconst-flag t
                                :operator-flag t
                                :function-pointer t
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16608 16673]))                          
                        :superclasses 
                          ( ("iterator_adaptor_base" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [15979 16676]))                  
                :type "namespace")
                nil [777 16679]))          
      :file "StringMap.h"
      :pointmax 16734
      :fsize 16733
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((EXPLICIT 16504 . 16512) (punctuation 16500 . 16501) (DEFAULT 16493 . 16500) (punctuation 16491 . 16492) (semantic-list 16488 . 16490) (symbol 16468 . 16488) (punctuation 16256 . 16257) (symbol 16251 . 16255) (USING 16245 . 16250) (OPERATOR 15859 . 15867) (EXPLICIT 15596 . 15604) (punctuation 15592 . 15593) (DEFAULT 15585 . 15592) (punctuation 15583 . 15584) (semantic-list 15580 . 15582) (symbol 15563 . 15580) (punctuation 15472 . 15473) (symbol 15467 . 15471) (USING 15461 . 15466) (EXPLICIT 14988 . 14996) (punctuation 14984 . 14985) (DEFAULT 14977 . 14984) (punctuation 14975 . 14976) (semantic-list 14972 . 14974) (symbol 14950 . 14972) (punctuation 14821 . 14822) (symbol 14816 . 14820) (USING 14810 . 14815) (EXPLICIT 13830 . 13838) (punctuation 13825 . 13826) (DEFAULT 13818 . 13825) (punctuation 13816 . 13817) (semantic-list 13813 . 13815) (symbol 13796 . 13813) (punctuation 11977 . 11978) (punctuation 11976 . 11977) (punctuation 11975 . 11976) (punctuation 11974 . 11975) (punctuation 11909 . 11910) (symbol 11903 . 11909) (punctuation 11901 . 11902) (punctuation 11900 . 11901) (punctuation 11899 . 11900) (TYPENAME 11891 . 11899) (punctuation 11890 . 11891) (TEMPLATE 11881 . 11889) (punctuation 11413 . 11414) (punctuation 7384 . 7385) (symbol 7375 . 7383) (USING 7369 . 7374) (punctuation 7332 . 7333) (symbol 7317 . 7331) (USING 7311 . 7316) (USING 7282 . 7287) (punctuation 7253 . 7254) (symbol 7242 . 7252) (USING 7236 . 7241) (USING 7205 . 7210) (punctuation 7201 . 7202) (punctuation 7200 . 7201) (CHAR 7195 . 7199) (CONST 7189 . 7194) (punctuation 7187 . 7188) (symbol 7178 . 7186) (USING 7172 . 7177) (punctuation 4965 . 4966) (EXPLICIT 4495 . 4503) (EXPLICIT 4370 . 4378) (punctuation 4263 . 4264) (symbol 4252 . 4262) (USING 4246 . 4251) (punctuation 3189 . 3190) (punctuation 3188 . 3189) (semantic-list 3177 . 3181) (punctuation 3176 . 3177) (symbol 3167 . 3176) (punctuation 3166 . 3167) (symbol 3155 . 3166) (number 3179 . 3180) (punctuation 3178 . 3179) (punctuation 3147 . 3148) (symbol 3131 . 3146) (symbol 3121 . 3130) (symbol 3111 . 3120) (STATIC 3104 . 3110) (punctuation 1578 . 1579) (EXPLICIT 1481 . 1489))
      :lexical-table 
        '(("LLVM_ADT_STRINGMAP_H")
          )
)
    (semanticdb-table "semanticdb-table-155561fa8a74"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_TWINE_H" variable (:constant-flag t) nil [404 420])
            ("llvm/ADT/SmallVector.h" include nil nil [422 455])
            ("llvm/ADT/StringRef.h" include nil nil [456 487])
            ("llvm/Support/ErrorHandling.h" include nil nil [488 527])
            ("cassert" include (:system-flag t) nil [528 546])
            ("cstdint" include (:system-flag t) nil [547 565])
            ("string" include (:system-flag t) nil [566 583])
            ("string_view" include (:system-flag t) nil [610 632])
            ("llvm" type
               (:members 
                  ( ("formatv_object_base" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [661 687])
                    ("raw_ostream" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [690 708])
                    ("Twine" type
                       (:members 
                          ( ("Child" type
                               (:members 
                                  ( ("twine" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Twine" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [5406 5425])
                                    ("cString" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol classsubparts) [5432 5452])
                                    ("stdString" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [5459 5488])
                                    ("ptrAndLength" variable (:type ("" type
                                         (:members 
                                            ( ("ptr" variable
                                                 (:pointer 1
                                                  :constant-flag t
                                                  :type "char")
                                                  (reparse-symbol classsubparts) [5512 5528])
                                              ("length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5537 5551]))                                            
                                          :type "struct")
                                          nil nil)) (reparse-symbol classsubparts) [5495 5573])
                                    ("formatvObject" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("formatv_object_base" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [5580 5621])
                                    ("character" variable (:type "char") (reparse-symbol classsubparts) [5628 5643])
                                    ("decUI" variable (:type "unsigned int") (reparse-symbol classsubparts) [5650 5669])
                                    ("decI" variable (:type "int") (reparse-symbol classsubparts) [5676 5685])
                                    ("decUL" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "unsigned long")
                                        (reparse-symbol classsubparts) [5692 5719])
                                    ("decL" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "long")
                                        (reparse-symbol classsubparts) [5726 5743])
                                    ("decULL" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "unsigned long long")
                                        (reparse-symbol classsubparts) [5750 5783])
                                    ("decLL" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "long long")
                                        (reparse-symbol classsubparts) [5790 5813])
                                    ("uHex" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("uint64_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [5820 5841]))                                  
                                :type "union")
                                (reparse-symbol classsubparts) [5382 5848])
                            ("LHS" variable (:type ("Child" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5961 5971])
                            ("RHS" variable (:type ("Child" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6084 6094])
                            ("LHSKind" variable
                               (:default-value "EmptyKind"
                                :type ("NodeKind" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6173 6202])
                            ("RHSKind" variable
                               (:default-value "EmptyKind"
                                :type ("NodeKind" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6282 6311])
                            ("Twine" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Kind" variable (:type ("NodeKind" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6407 6421]))                                  
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6401 6491])
                            ("Twine" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Twine" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6546 6563])
                                    ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Twine" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6564 6581]))                                  
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6540 6743])
                            ("Twine" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("LHS" variable (:type ("Child" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6812 6822])
                                    ("LHSKind" variable (:type ("NodeKind" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6823 6840])
                                    ("RHS" variable (:type ("Child" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6841 6851])
                                    ("RHSKind" variable (:type ("NodeKind" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6852 6869]))                                  
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6806 6987])
                            ("isNull" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [7027 7093])
                            ("isEmpty" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [7134 7202])
                            ("isNullary" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [7266 7332])
                            ("isUnary" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [7378 7462])
                            ("isBinary" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [7509 7606])
                            ("isValid" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [7721 8388])
                            ("getLHSKind" function
                               (:methodconst-flag t
                                :type ("NodeKind" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8442 8489])
                            ("getRHSKind" function
                               (:methodconst-flag t
                                :type ("NodeKind" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8544 8591])
                            ("printOneChild" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("OS" variable
                                       (:reference 1
                                        :type ("raw_ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8654 8670])
                                    ("Ptr" variable (:type ("Child" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8671 8681])
                                    ("Kind" variable (:type ("NodeKind" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8682 8696]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [8635 8703])
                            ("printOneChildRepr" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("OS" variable
                                       (:reference 1
                                        :type ("raw_ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8792 8808])
                                    ("Ptr" variable (:type ("Child" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8809 8819])
                                    ("Kind" variable (:type ("NodeKind" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8847 8861]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [8769 8868])
                            ("public" label nil (reparse-symbol classsubparts) [8872 8879])
                            ("Twine" function
                               (:constructor-flag t
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8976 9036])
                            ("Twine" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Str" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [9373 9389]))                                  
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9367 9571])
                            ("Twine" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Str" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9788 9811]))                                  
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9782 9917])
                            ("Twine" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Str" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string_view" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10263 10291]))                                  
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10257 10467])
                            ("Twine" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Str" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("StringRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10535 10556]))                                  
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10529 10722])
                            ("Twine" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Str" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("char" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [10785 10818]))                                  
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10779 10992])
                            ("Twine" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Fmt" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("formatv_object_base" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11063 11094]))                                  
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11057 11216])
                            ("Twine" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Val" variable (:type "char") (reparse-symbol arg-sub-list) [11268 11277]))                                  
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11262 11332])
                            ("Twine" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Val" variable (:type "signed char") (reparse-symbol arg-sub-list) [11391 11407]))                                  
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11385 11481])
                            ("Twine" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Val" variable (:type "unsigned char") (reparse-symbol arg-sub-list) [11543 11561]))                                  
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11537 11635])
                            ("Twine" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Val" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [11730 11743]))                                  
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11724 11795])
                            ("Twine" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Val" variable (:type "int") (reparse-symbol arg-sub-list) [11887 11895]))                                  
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11881 11945])
                            ("Twine" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "unsigned long")
                                        (reparse-symbol arg-sub-list) [12040 12065]))                                  
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12034 12118])
                            ("Twine" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "long")
                                        (reparse-symbol arg-sub-list) [12210 12226]))                                  
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12204 12277])
                            ("Twine" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "unsigned long long")
                                        (reparse-symbol arg-sub-list) [12372 12402]))                                  
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12366 12457])
                            ("Twine" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "long long")
                                        (reparse-symbol arg-sub-list) [12549 12570]))                                  
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12543 12623])
                            ("Twine" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [12980 12996])
                                    ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("StringRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12997 13018]))                                  
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12974 13257])
                            ("Twine" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("StringRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13352 13373])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [13374 13390]))                                  
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13346 13629])
                            ("createNull" function
                               (:typemodifiers ("static")
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13959 14022])
                            ("utohexstr" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("uint64_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14185 14205]))                                  
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14162 14336])
                            ("isTriviallyEmpty" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [14523 14586])
                            ("isSingleStringRef" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [14717 15004])
                            ("concat" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Suffix" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Twine" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15078 15098]))                                  
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15065 15105])
                            ("str" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15221 15245])
                            ("toVector" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Out" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("char" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [15347 15374]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [15333 15381])
                            ("getSingleStringRef" function
                               (:methodconst-flag t
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15508 16025])
                            ("toStringRef" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Out" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("char" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [16269 16296]))                                  
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16247 16447])
                            ("toNullTerminatedStringRef" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Out" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("char" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [16805 16832]))                                  
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16769 16839])
                            ("print" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("OS" variable
                                       (:reference 1
                                        :type ("raw_ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16949 16965]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [16938 16972])
                            ("dump" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [17052 17070])
                            ("printRepr" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("OS" variable
                                       (:reference 1
                                        :type ("raw_ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17159 17175]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [17144 17182])
                            ("dumpRepr" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [17245 17267]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [3828 17284])
                    ("concat" function
                       (:methodconst-flag t
                        :parent "Twine"
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("Suffix" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [17366 17386]))                          
                        :type ("Twine" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [17339 18119])
                    ("+" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("LHS" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [18146 18163])
                            ("RHS" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [18164 18181]))                          
                        :type ("Twine" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [18123 18215])
                    ("+" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("LHS" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [18340 18356])
                            ("RHS" variable
                               (:reference 1
                                :constant-flag t
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [18357 18378]))                          
                        :type ("Twine" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [18317 18412])
                    ("+" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("LHS" variable
                               (:reference 1
                                :constant-flag t
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [18537 18558])
                            ("RHS" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [18559 18575]))                          
                        :type ("Twine" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [18514 18609])
                    ("<<" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("OS" variable
                               (:reference 1
                                :type ("raw_ostream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [18644 18660])
                            ("RHS" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [18661 18678]))                          
                        :type ("raw_ostream" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [18613 18718]))                  
                :type "namespace")
                nil [641 18731]))          
      :file "Twine.h"
      :pointmax 18782
      :fsize 18781
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 13832 . 13833) (DELETE 13826 . 13832) (punctuation 13824 . 13825) (semantic-list 13808 . 13823) (punctuation 13807 . 13808) (OPERATOR 13799 . 13807) (punctuation 13798 . 13799) (symbol 13792 . 13797) (EXPLICIT 12534 . 12542) (EXPLICIT 12357 . 12365) (EXPLICIT 12195 . 12203) (EXPLICIT 12025 . 12033) (EXPLICIT 11872 . 11880) (EXPLICIT 11715 . 11723) (EXPLICIT 11528 . 11536) (EXPLICIT 11376 . 11384) (EXPLICIT 11253 . 11261) (punctuation 9723 . 9724) (DELETE 9717 . 9723) (punctuation 9715 . 9716) (semantic-list 9698 . 9714) (symbol 9693 . 9698) (punctuation 9072 . 9073) (DEFAULT 9065 . 9072) (punctuation 9063 . 9064) (semantic-list 9047 . 9062) (symbol 9042 . 9047) (EXPLICIT 6797 . 6805) (EXPLICIT 6531 . 6539) (EXPLICIT 6392 . 6400) (punctuation 5375 . 5376) (semantic-list 3930 . 5375) (CHAR 3925 . 3929) (UNSIGNED 3916 . 3924) (punctuation 3914 . 3915) (symbol 3905 . 3913) (ENUM 3900 . 3904))
      :lexical-table 
        '(("LLVM_ADT_TWINE_H")
          )
)
    (semanticdb-table "semanticdb-table-1555620560d8"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_DENSESET_H" variable (:constant-flag t) nil [568 587])
            ("llvm/ADT/DenseMap.h" include nil nil [589 619])
            ("llvm/ADT/DenseMapInfo.h" include nil nil [620 654])
            ("llvm/Support/MathExtras.h" include nil nil [655 691])
            ("llvm/Support/type_traits.h" include nil nil [692 729])
            ("cstddef" include (:system-flag t) nil [730 748])
            ("initializer_list" include (:system-flag t) nil [749 776])
            ("iterator" include (:system-flag t) nil [777 796])
            ("utility" include (:system-flag t) nil [797 815])
            ("llvm" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("DenseSetEmpty" type (:type "struct") (reparse-symbol namespacesubparts) [855 879])
                            ("DenseSetPair" type
                               (:template 
                                  ( ("KeyT" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("key" variable (:type ("KeyT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1063 1072])
                                    ("public" label nil (reparse-symbol classsubparts) [1074 1081])
                                    ("getFirst" function (:type ("KeyT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1084 1116])
                                    ("getFirst" function
                                       (:methodconst-flag t
                                        :constant-flag t
                                        :type ("KeyT" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1119 1163])
                                    ("getSecond" function (:type ("DenseSetEmpty" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1166 1210])
                                    ("getSecond" function
                                       (:methodconst-flag t
                                        :constant-flag t
                                        :type ("DenseSetEmpty" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1213 1269]))                                  
                                :superclasses 
                                  ( ("DenseSetEmpty" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [992 1272])
                            ("DenseSetImpl" type
                               (:template 
                                  ( ("ValueT" type (:type "class") nil nil)
                                    ("MapTy" type (:type "class") nil nil)
                                    ("ValueInfoT" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("static_assert" function
                                       (:prototype-flag t
                                        :type "int")
                                        (reparse-symbol classsubparts) [1651 1775])
                                    ("TheMap" variable (:type ("MapTy" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1778 1791])
                                    ("const_pointer_or_const_ref::type" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [1844 1889])
                                    ("public" label nil (reparse-symbol classsubparts) [1891 1898])
                                    ("key_type" variable
                                       (:default-value "ValueT"
                                        :type "int")
                                        (reparse-symbol classsubparts) [1907 1925])
                                    ("value_type" variable
                                       (:default-value "ValueT"
                                        :type "int")
                                        (reparse-symbol classsubparts) [1934 1954])
                                    ("DenseSetImpl" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("InitialReserve" variable
                                               (:default-value "0"
                                                :type "unsigned int")
                                                (reparse-symbol arg-sub-list) [2010 2037]))                                          
                                        :type ("DenseSetImpl" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1997 2066])
                                    ("DenseSetImpl" function
                                       (:template 
                                          ( ("InputIt" type (:type "class") nil nil))                                          
                                        :type ("DenseSetImpl" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("I" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("InputIt" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2113 2130])
                                            ("E" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("InputIt" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2131 2148]))                                          
                                        :constructor-flag t)
                                        (reparse-symbol classsubparts) [2070 2228])
                                    ("DenseSetImpl" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("Elems" variable (:type ("std::initializer_list" type
                                                 (:template-specifier 
                                                    ( ("ValueT" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [2245 2281]))                                          
                                        :type ("DenseSetImpl" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2232 2376])
                                    ("empty" function
                                       (:methodconst-flag t
                                        :type "bool")
                                        (reparse-symbol classsubparts) [2380 2425])
                                    ("size" function
                                       (:methodconst-flag t
                                        :type ("size_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2428 2476])
                                    ("getMemorySize" function
                                       (:methodconst-flag t
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2479 2542])
                                    ("resize" function
                                       (:arguments 
                                          ( ("Size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2663 2675]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [2651 2700])
                                    ("reserve" function
                                       (:arguments 
                                          ( ("Size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2822 2834]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [2809 2860])
                                    ("clear" function (:type "void") (reparse-symbol classsubparts) [2864 2902])
                                    ("count" function
                                       (:methodconst-flag t
                                        :arguments 
                                          ( ("V" variable (:type ("const_arg_type_t" type
                                                 (:template-specifier 
                                                    ( ("ValueT" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [2986 3013]))                                          
                                        :type ("size_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2970 3053])
                                    ("erase" function
                                       (:arguments 
                                          ( ("V" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("ValueT" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3068 3084]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [3057 3118])
                                    ("swap" function
                                       (:arguments 
                                          ( ("RHS" variable
                                               (:reference 1
                                                :type ("DenseSetImpl" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3132 3150]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [3122 3179])
                                    ("ConstIterator" type
                                       (:prototype t
                                        :type "class")
                                        (reparse-symbol classsubparts) [3200 3220])
                                    ("Iterator" type
                                       (:members 
                                          ( ("I" variable
                                               (:typemodifiers ("typename")
                                                :type ("MapTy::iterator" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [3245 3272])
                                            ("DenseSetImpl" friend nil (reparse-symbol classsubparts) [3277 3302])
                                            ("ConstIterator" friend nil (reparse-symbol classsubparts) [3308 3334])
                                            ("public" label nil (reparse-symbol classsubparts) [3339 3346])
                                            ("MapTy::iterator::difference_type" variable
                                               (:typemodifiers ("typename")
                                                :type "int")
                                                (reparse-symbol classsubparts) [3375 3417])
                                            ("value_type" variable
                                               (:default-value "ValueT"
                                                :type "int")
                                                (reparse-symbol classsubparts) [3428 3448])
                                            ("std::forward_iterator_tag" variable (:type "int") (reparse-symbol classsubparts) [3549 3575])
                                            ("Iterator" function
                                               (:constructor-flag t
                                                :arguments 
                                                  ( ("i" variable
                                                       (:reference 1
                                                        :typemodifiers ("typename")
                                                        :constant-flag t
                                                        :type ("MapTy::iterator" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [3616 3650]))                                                  
                                                :type ("Iterator" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [3607 3660])
                                            ("" function
                                               (:operator-flag t
                                                :function-pointer t
                                                :type ("ValueT" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [3666 3711])
                                            ("" function
                                               (:methodconst-flag t
                                                :operator-flag t
                                                :function-pointer t
                                                :constant-flag t
                                                :type ("ValueT" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [3716 3773])
                                            ("->" function
                                               (:operator-flag t
                                                :pointer 1
                                                :type ("ValueT" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [3778 3825])
                                            ("->" function
                                               (:methodconst-flag t
                                                :operator-flag t
                                                :pointer 1
                                                :constant-flag t
                                                :type ("ValueT" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [3830 3889])
                                            ("++" function
                                               (:operator-flag t
                                                :type ("Iterator" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [3895 3940])
                                            ("++" function
                                               (:operator-flag t
                                                :arguments 
                                                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [3965 3969]))                                                  
                                                :type ("Iterator" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [3945 4004])
                                            ("==" function
                                               (:operator-flag t
                                                :typemodifiers ("friend")
                                                :arguments 
                                                  ( ("X" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("Iterator" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [4032 4050])
                                                    ("Y" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("Iterator" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [4051 4069]))                                                  
                                                :type "bool")
                                                (reparse-symbol classsubparts) [4009 4102])
                                            ("!=" function
                                               (:operator-flag t
                                                :typemodifiers ("friend")
                                                :arguments 
                                                  ( ("X" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("Iterator" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [4130 4148])
                                                    ("Y" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("Iterator" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [4149 4167]))                                                  
                                                :type "bool")
                                                (reparse-symbol classsubparts) [4107 4200]))                                          
                                        :type "class")
                                        (reparse-symbol classsubparts) [3224 4205])
                                    ("ConstIterator" type
                                       (:members 
                                          ( ("I" variable
                                               (:typemodifiers ("typename")
                                                :type ("MapTy::const_iterator" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [4235 4268])
                                            ("DenseSetImpl" friend nil (reparse-symbol classsubparts) [4273 4298])
                                            ("Iterator" friend nil (reparse-symbol classsubparts) [4304 4325])
                                            ("public" label nil (reparse-symbol classsubparts) [4330 4337])
                                            ("MapTy::const_iterator::difference_type" variable
                                               (:typemodifiers ("typename")
                                                :type "int")
                                                (reparse-symbol classsubparts) [4366 4414])
                                            ("value_type" variable
                                               (:default-value "ValueT"
                                                :type "int")
                                                (reparse-symbol classsubparts) [4425 4445])
                                            ("std::forward_iterator_tag" variable (:type "int") (reparse-symbol classsubparts) [4558 4584])
                                            ("ConstIterator" function
                                               (:constructor-flag t
                                                :arguments 
                                                  ( ("B" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("Iterator" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [4635 4653]))                                                  
                                                :type ("ConstIterator" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [4621 4665])
                                            ("ConstIterator" function
                                               (:constructor-flag t
                                                :arguments 
                                                  ( ("i" variable
                                                       (:reference 1
                                                        :typemodifiers ("typename")
                                                        :constant-flag t
                                                        :type ("MapTy::const_iterator" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [4684 4724]))                                                  
                                                :type ("ConstIterator" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [4670 4734])
                                            ("" function
                                               (:methodconst-flag t
                                                :operator-flag t
                                                :function-pointer t
                                                :constant-flag t
                                                :type ("ValueT" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [4740 4797])
                                            ("->" function
                                               (:methodconst-flag t
                                                :operator-flag t
                                                :pointer 1
                                                :constant-flag t
                                                :type ("ValueT" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [4802 4861])
                                            ("++" function
                                               (:operator-flag t
                                                :type ("ConstIterator" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [4867 4917])
                                            ("++" function
                                               (:operator-flag t
                                                :arguments 
                                                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [4947 4951]))                                                  
                                                :type ("ConstIterator" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [4922 4986])
                                            ("==" function
                                               (:operator-flag t
                                                :typemodifiers ("friend")
                                                :arguments 
                                                  ( ("X" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("ConstIterator" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [5014 5037])
                                                    ("Y" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("ConstIterator" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [5038 5061]))                                                  
                                                :type "bool")
                                                (reparse-symbol classsubparts) [4991 5094])
                                            ("!=" function
                                               (:operator-flag t
                                                :typemodifiers ("friend")
                                                :arguments 
                                                  ( ("X" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("ConstIterator" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [5122 5145])
                                                    ("Y" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("ConstIterator" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [5146 5169]))                                                  
                                                :type "bool")
                                                (reparse-symbol classsubparts) [5099 5202]))                                          
                                        :type "class")
                                        (reparse-symbol classsubparts) [4209 5207])
                                    ("iterator" variable
                                       (:default-value "Iterator"
                                        :type "int")
                                        (reparse-symbol classsubparts) [5217 5237])
                                    ("const_iterator" variable
                                       (:default-value "ConstIterator"
                                        :type "int")
                                        (reparse-symbol classsubparts) [5246 5277])
                                    ("begin" function (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5281 5334])
                                    ("end" function (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5337 5386])
                                    ("begin" function
                                       (:methodconst-flag t
                                        :type ("const_iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [5390 5460])
                                    ("end" function
                                       (:methodconst-flag t
                                        :type ("const_iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [5463 5529])
                                    ("find" function
                                       (:arguments 
                                          ( ("V" variable (:type ("const_arg_type_t" type
                                                 (:template-specifier 
                                                    ( ("ValueT" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [5547 5574]))                                          
                                        :type ("iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [5533 5611])
                                    ("find" function
                                       (:methodconst-flag t
                                        :arguments 
                                          ( ("V" variable (:type ("const_arg_type_t" type
                                                 (:template-specifier 
                                                    ( ("ValueT" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [5634 5661]))                                          
                                        :type ("const_iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [5614 5715])
                                    ("contains" function
                                       (:methodconst-flag t
                                        :arguments 
                                          ( ("V" variable (:type ("const_arg_type_t" type
                                                 (:template-specifier 
                                                    ( ("ValueT" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [5784 5811]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [5770 5866])
                                    ("find_as" function
                                       (:template 
                                          ( ("LookupKeyT" type (:type "class") nil nil))                                          
                                        :type ("iterator" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("Val" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("LookupKeyT" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [6175 6197]))                                          )
                                        (reparse-symbol classsubparts) [6128 6245])
                                    ("find_as" function
                                       (:template 
                                          ( ("LookupKeyT" type (:type "class") nil nil))                                          
                                        :type ("const_iterator" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("Val" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("LookupKeyT" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [6301 6323]))                                          
                                        :methodconst-flag t)
                                        (reparse-symbol classsubparts) [6248 6382])
                                    ("erase" function
                                       (:arguments 
                                          ( ("I" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6397 6408]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [6386 6438])
                                    ("erase" function
                                       (:arguments 
                                          ( ("CI" variable (:type ("ConstIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6452 6469]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [6441 6500])
                                    ("insert" function
                                       (:arguments 
                                          ( ("V" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("ValueT" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [6537 6553]))                                          
                                        :type ("std::pair" type
                                             (:template-specifier 
                                                ( ("iterator" type nil nil nil)
                                                  ("bool" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [6504 6633])
                                    ("insert" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("ValueT" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [6670 6679])
                                            ("" variable (:type ("V" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6679 6681]))                                          
                                        :type ("std::pair" type
                                             (:template-specifier 
                                                ( ("iterator" type nil nil nil)
                                                  ("bool" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [6637 6772])
                                    ("insert_as" function
                                       (:template 
                                          ( ("LookupKeyT" type (:type "class") nil nil))                                          
                                        :type ("std::pair" type
                                             (:template-specifier 
                                                ( ("iterator" type nil nil nil)
                                                  ("bool" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :arguments 
                                          ( ("V" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("ValueT" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [6949 6965])
                                            ("LookupKey" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("LookupKeyT" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7004 7032]))                                          )
                                        (reparse-symbol classsubparts) [6880 7108])
                                    ("insert_as" function
                                       (:template 
                                          ( ("LookupKeyT" type (:type "class") nil nil))                                          
                                        :type ("std::pair" type
                                             (:template-specifier 
                                                ( ("iterator" type nil nil nil)
                                                  ("bool" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("ValueT" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7180 7189])
                                            ("" variable (:type ("V" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7189 7191])
                                            ("LookupKey" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("LookupKeyT" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7192 7220]))                                          )
                                        (reparse-symbol classsubparts) [7111 7307])
                                    ("insert" function
                                       (:template 
                                          ( ("InputIt" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("I" variable (:type ("InputIt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7384 7394])
                                            ("E" variable (:type ("InputIt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7395 7405]))                                          )
                                        (reparse-symbol classsubparts) [7343 7453]))                                  )
                                (reparse-symbol namespacesubparts) [1564 7456])
                            ("==" function
                               (:template 
                                  ( ("ValueT" type (:type "class") nil nil)
                                    ("MapTy" type (:type "class") nil nil)
                                    ("ValueInfoT" type (:type "class") nil nil))                                  
                                :type "bool"
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DenseSetImpl" type
                                             (:template-specifier 
                                                ( ("ValueT" type nil nil nil)
                                                  ("MapTy" type nil nil nil)
                                                  ("ValueInfoT" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [7839 7890])
                                    ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DenseSetImpl" type
                                             (:template-specifier 
                                                ( ("ValueT" type nil nil nil)
                                                  ("MapTy" type nil nil nil)
                                                  ("ValueInfoT" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [7907 7958]))                                  
                                :operator-flag t)
                                (reparse-symbol namespacesubparts) [7759 8094])
                            ("!=" function
                               (:template 
                                  ( ("ValueT" type (:type "class") nil nil)
                                    ("MapTy" type (:type "class") nil nil)
                                    ("ValueInfoT" type (:type "class") nil nil))                                  
                                :type "bool"
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DenseSetImpl" type
                                             (:template-specifier 
                                                ( ("ValueT" type nil nil nil)
                                                  ("MapTy" type nil nil nil)
                                                  ("ValueInfoT" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [8291 8342])
                                    ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DenseSetImpl" type
                                             (:template-specifier 
                                                ( ("ValueT" type nil nil nil)
                                                  ("MapTy" type nil nil nil)
                                                  ("ValueInfoT" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [8359 8410]))                                  
                                :operator-flag t)
                                (reparse-symbol namespacesubparts) [8211 8438]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [835 8441])
                    ("DenseSet" type
                       (:template 
                          ( ("ValueT" type (:type "class") nil nil)
                            ("ValueInfoT" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("detail::DenseSetImpl" variable (:type "int") (reparse-symbol classsubparts) [8843 9057])
                            ("public" label nil (reparse-symbol classsubparts) [9059 9066])
                            ("BaseT::BaseT" variable (:type "int") (reparse-symbol classsubparts) [9075 9088]))                          
                        :superclasses 
                          ( ("detail::DenseSetImpl" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [8519 9091])
                    ("SmallDenseSet" type
                       (:superclasses 
                          ( ("detail::DenseSetImpl" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("detail::DenseSetImpl" variable (:type "int") (reparse-symbol classsubparts) [9548 9733])
                            ("public" label nil (reparse-symbol classsubparts) [9735 9742])
                            ("BaseT::BaseT" variable (:type "int") (reparse-symbol classsubparts) [9751 9764]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [9300 9767]))                  
                :type "namespace")
                nil [817 9770]))          
      :file "DenseSet.h"
      :pointmax 9824
      :fsize 9823
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((USING 9745 . 9750) (punctuation 9546 . 9547) (symbol 9540 . 9545) (USING 9534 . 9539) (punctuation 9298 . 9299) (punctuation 9297 . 9298) (symbol 9291 . 9297) (punctuation 9290 . 9291) (symbol 9278 . 9290) (punctuation 9276 . 9277) (symbol 9265 . 9275) (TYPENAME 9256 . 9264) (punctuation 9244 . 9245) (number 9243 . 9244) (punctuation 9241 . 9242) (symbol 9227 . 9240) (UNSIGNED 9218 . 9226) (punctuation 9216 . 9217) (symbol 9210 . 9216) (TYPENAME 9201 . 9209) (punctuation 9200 . 9201) (TEMPLATE 9191 . 9199) (USING 9069 . 9074) (punctuation 8835 . 8836) (symbol 8829 . 8834) (USING 8823 . 8828) (punctuation 7188 . 7189) (punctuation 6678 . 6679) (USING 5240 . 5245) (USING 5211 . 5216) (punctuation 4615 . 4616) (DEFAULT 4608 . 4615) (punctuation 4606 . 4607) (semantic-list 4603 . 4605) (symbol 4590 . 4603) (punctuation 4556 . 4557) (symbol 4538 . 4555) (USING 4532 . 4537) (punctuation 4526 . 4527) (punctuation 4525 . 4526) (symbol 4514 . 4524) (CONST 4508 . 4513) (punctuation 4506 . 4507) (symbol 4496 . 4505) (USING 4490 . 4495) (punctuation 4484 . 4485) (punctuation 4483 . 4484) (symbol 4472 . 4482) (CONST 4466 . 4471) (punctuation 4464 . 4465) (symbol 4456 . 4463) (USING 4450 . 4455) (USING 4419 . 4424) (punctuation 4364 . 4365) (symbol 4348 . 4363) (USING 4342 . 4347) (punctuation 4325 . 4326) (punctuation 4298 . 4299) (punctuation 4615 . 4616) (DEFAULT 4608 . 4615) (punctuation 4606 . 4607) (semantic-list 4603 . 4605) (symbol 4590 . 4603) (punctuation 4556 . 4557) (symbol 4538 . 4555) (USING 4532 . 4537) (punctuation 4526 . 4527) (punctuation 4525 . 4526) (symbol 4514 . 4524) (CONST 4508 . 4513) (punctuation 4506 . 4507) (symbol 4496 . 4505) (USING 4490 . 4495) (punctuation 4484 . 4485) (punctuation 4483 . 4484) (symbol 4472 . 4482) (CONST 4466 . 4471) (punctuation 4464 . 4465) (symbol 4456 . 4463) (USING 4450 . 4455) (USING 4419 . 4424) (punctuation 4364 . 4365) (symbol 4348 . 4363) (USING 4342 . 4347) (punctuation 4325 . 4326) (punctuation 4298 . 4299) (punctuation 3601 . 3602) (DEFAULT 3594 . 3601) (punctuation 3592 . 3593) (semantic-list 3589 . 3591) (symbol 3581 . 3589) (punctuation 3547 . 3548) (symbol 3529 . 3546) (USING 3523 . 3528) (punctuation 3517 . 3518) (punctuation 3516 . 3517) (symbol 3505 . 3515) (punctuation 3503 . 3504) (symbol 3493 . 3502) (USING 3487 . 3492) (punctuation 3481 . 3482) (punctuation 3480 . 3481) (symbol 3469 . 3479) (punctuation 3467 . 3468) (symbol 3459 . 3466) (USING 3453 . 3458) (USING 3422 . 3427) (punctuation 3373 . 3374) (symbol 3357 . 3372) (USING 3351 . 3356) (punctuation 3334 . 3335) (punctuation 3302 . 3303) (punctuation 3601 . 3602) (DEFAULT 3594 . 3601) (punctuation 3592 . 3593) (semantic-list 3589 . 3591) (symbol 3581 . 3589) (punctuation 3547 . 3548) (symbol 3529 . 3546) (USING 3523 . 3528) (punctuation 3517 . 3518) (punctuation 3516 . 3517) (symbol 3505 . 3515) (punctuation 3503 . 3504) (symbol 3493 . 3502) (USING 3487 . 3492) (punctuation 3481 . 3482) (punctuation 3480 . 3481) (symbol 3469 . 3479) (punctuation 3467 . 3468) (symbol 3459 . 3466) (USING 3453 . 3458) (USING 3422 . 3427) (punctuation 3373 . 3374) (symbol 3357 . 3372) (USING 3351 . 3356) (punctuation 3334 . 3335) (punctuation 3302 . 3303) (EXPLICIT 1988 . 1996) (punctuation 1983 . 1984) (UNSIGNED 1975 . 1983) (punctuation 1973 . 1974) (symbol 1963 . 1972) (USING 1957 . 1962) (USING 1928 . 1933) (USING 1901 . 1906) (punctuation 1842 . 1843) (symbol 1825 . 1841) (USING 1819 . 1824) (punctuation 1815 . 1816) (symbol 1814 . 1815) (TYPENAME 1805 . 1813) (punctuation 1804 . 1805) (TEMPLATE 1795 . 1803) (string 1735 . 1773) (semantic-list 1709 . 1717) (SIZEOF 1703 . 1709) (punctuation 1701 . 1702) (punctuation 1700 . 1701) (semantic-list 1671 . 1699) (SIZEOF 1665 . 1671))
      :lexical-table 
        '(("LLVM_ADT_DENSESET_H")
          )
)
    (semanticdb-table "semanticdb-table-155562056150"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_GRAPHTRAITS_H" variable (:constant-flag t) nil [809 831])
            ("llvm/ADT/iterator_range.h" include nil nil [833 869])
            ("llvm" type
               (:members 
                  ( ("GraphTraits" type
                       (:template 
                          ( ("GraphType" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("GraphType::UnknownGraphTypeError" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [3426 3468]))                          )
                        (reparse-symbol namespacesubparts) [1379 3471])
                    ("Inverse" type
                       (:template 
                          ( ("GraphType" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("Graph" variable
                               (:constant-flag t
                                :type ("GraphType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4059 4082])
                            ("Inverse" function
                               (:constructor-flag t
                                :typemodifiers ("inline")
                                :arguments 
                                  ( ("G" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("GraphType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4101 4120]))                                  
                                :type ("Inverse" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [4086 4134]))                          )
                        (reparse-symbol namespacesubparts) [4013 4137])
                    ("GraphTraits" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "struct"
                        :superclasses 
                          ( ("GraphTraits" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :template-specifier 
                          ( ("Inverse" type (:template-specifier 
                              ( ("Inverse" type (:template-specifier 
                                  ( ("T" type nil nil nil))                                  ) nil nil))                              ) nil nil))                          )
                        (reparse-symbol namespacesubparts) [4261 4340])
                    ("nodes" function
                       (:arguments 
                          ( ("G" variable
                               (:reference 1
                                :constant-flag t
                                :type ("GraphType" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4506 4525]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [4500 4648])
                    ("inverse_nodes" function
                       (:arguments 
                          ( ("G" variable
                               (:reference 1
                                :constant-flag t
                                :type ("GraphType" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4763 4782]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [4749 4923])
                    ("children" function
                       (:arguments 
                          ( ("" variable
                               (:typemodifiers ("typename")
                                :constant-flag t
                                :type ("GraphTraits" type
                                     (:template-specifier 
                                        ( ("GraphType" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [5028 5066])
                            ("G" variable
                               (:reference 1
                                :type ("NodeRef" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5067 5078]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [5019 5201])
                    ("inverse_children" function
                       (:arguments 
                          ( ("" variable
                               (:typemodifiers ("typename")
                                :constant-flag t
                                :type ("GraphTraits" type
                                     (:template-specifier 
                                        ( ("GraphType" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [5323 5361])
                            ("G" variable
                               (:reference 1
                                :type ("NodeRef" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5362 5373]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [5306 5514])
                    ("children_edges" function
                       (:arguments 
                          ( ("" variable
                               (:typemodifiers ("typename")
                                :constant-flag t
                                :type ("GraphTraits" type
                                     (:template-specifier 
                                        ( ("GraphType" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [5629 5667])
                            ("G" variable
                               (:reference 1
                                :type ("NodeRef" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5668 5679]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [5614 5812]))                  
                :type "namespace")
                nil [871 5815]))          
      :file "GraphTraits.h"
      :pointmax 5872
      :fsize 5871
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 5667 . 5668) (punctuation 5666 . 5667) (punctuation 5612 . 5613) (symbol 5591 . 5612) (punctuation 5590 . 5591) (punctuation 5589 . 5590) (punctuation 5588 . 5589) (symbol 5579 . 5588) (punctuation 5578 . 5579) (symbol 5567 . 5578) (TYPENAME 5558 . 5566) (punctuation 5557 . 5558) (symbol 5543 . 5557) (punctuation 5541 . 5542) (symbol 5532 . 5541) (CLASS 5526 . 5531) (punctuation 5525 . 5526) (TEMPLATE 5516 . 5524) (punctuation 5361 . 5362) (punctuation 5360 . 5361) (punctuation 5304 . 5305) (symbol 5287 . 5304) (punctuation 5286 . 5287) (punctuation 5285 . 5286) (punctuation 5284 . 5285) (punctuation 5283 . 5284) (symbol 5274 . 5283) (punctuation 5273 . 5274) (symbol 5266 . 5273) (punctuation 5265 . 5266) (symbol 5254 . 5265) (TYPENAME 5245 . 5253) (punctuation 5244 . 5245) (symbol 5230 . 5244) (punctuation 5228 . 5229) (symbol 5219 . 5228) (CLASS 5213 . 5218) (punctuation 5212 . 5213) (TEMPLATE 5203 . 5211) (punctuation 5066 . 5067) (punctuation 5065 . 5066) (punctuation 5017 . 5018) (symbol 5000 . 5017) (punctuation 4999 . 5000) (punctuation 4998 . 4999) (punctuation 4997 . 4998) (symbol 4988 . 4997) (punctuation 4987 . 4988) (symbol 4976 . 4987) (TYPENAME 4967 . 4975) (punctuation 4966 . 4967) (symbol 4952 . 4966) (punctuation 4950 . 4951) (symbol 4941 . 4950) (CLASS 4935 . 4940) (punctuation 4934 . 4935) (TEMPLATE 4925 . 4933) (punctuation 4747 . 4748) (symbol 4733 . 4747) (punctuation 4732 . 4733) (punctuation 4731 . 4732) (punctuation 4730 . 4731) (punctuation 4729 . 4730) (symbol 4720 . 4729) (punctuation 4719 . 4720) (symbol 4712 . 4719) (punctuation 4711 . 4712) (symbol 4700 . 4711) (TYPENAME 4691 . 4699) (punctuation 4690 . 4691) (symbol 4676 . 4690) (punctuation 4674 . 4675) (symbol 4665 . 4674) (CLASS 4659 . 4664) (punctuation 4658 . 4659) (TEMPLATE 4649 . 4657) (punctuation 4498 . 4499) (symbol 4484 . 4498) (punctuation 4483 . 4484) (punctuation 4482 . 4483) (punctuation 4481 . 4482) (symbol 4472 . 4481) (punctuation 4471 . 4472) (symbol 4460 . 4471) (TYPENAME 4451 . 4459) (punctuation 4450 . 4451) (symbol 4436 . 4450) (punctuation 4434 . 4435) (symbol 4425 . 4434) (CLASS 4419 . 4424) (punctuation 4418 . 4419) (TEMPLATE 4409 . 4417) (punctuation 3424 . 3425) (symbol 3416 . 3423) (USING 3410 . 3415))
      :lexical-table 
        '(("LLVM_ADT_GRAPHTRAITS_H")
          )
)
    (semanticdb-table "semanticdb-table-1555620561b0"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_MAPVECTOR_H" variable (:constant-flag t) nil [760 780])
            ("llvm/ADT/DenseMap.h" include nil nil [782 812])
            ("llvm/ADT/SmallVector.h" include nil nil [813 846])
            ("cassert" include (:system-flag t) nil [847 865])
            ("cstddef" include (:system-flag t) nil [866 884])
            ("iterator" include (:system-flag t) nil [885 904])
            ("type_traits" include (:system-flag t) nil [905 927])
            ("utility" include (:system-flag t) nil [928 946])
            ("vector" include (:system-flag t) nil [947 964])
            ("llvm" type
               (:members 
                  ( ("MapVector" type
                       (:members 
                          ( ("Map" variable (:type ("MapType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1393 1405])
                            ("Vector" variable (:type ("VectorType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1408 1426])
                            ("static_assert" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("std::is_integral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1451 1468])
                                    ("" variable
                                       (:typemodifiers ("typename")
                                        :type ("MapType::mapped_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1468 1498])
                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1500 1506]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [1430 1578])
                            ("public" label nil (reparse-symbol classsubparts) [1580 1587])
                            ("key_type" variable
                               (:default-value "KeyT"
                                :type "int")
                                (reparse-symbol classsubparts) [1596 1612])
                            ("VectorType::value_type" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [1634 1666])
                            ("VectorType::size_type" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [1687 1718])
                            ("VectorType::iterator" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [1739 1769])
                            ("VectorType::const_iterator" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [1795 1831])
                            ("VectorType::reverse_iterator" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [1859 1897])
                            ("VectorType::const_reverse_iterator" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [1931 1975])
                            ("takeVector" function (:type ("VectorType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2039 2115])
                            ("size" function
                               (:methodconst-flag t
                                :type ("size_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2119 2167])
                            ("reserve" function
                               (:arguments 
                                  ( ("NumEntries" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2290 2311]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [2277 2378])
                            ("begin" function (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2382 2425])
                            ("begin" function
                               (:methodconst-flag t
                                :type ("const_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2428 2483])
                            ("end" function (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2486 2525])
                            ("end" function
                               (:methodconst-flag t
                                :type ("const_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2528 2579])
                            ("rbegin" function (:type ("reverse_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2583 2636])
                            ("rbegin" function
                               (:methodconst-flag t
                                :type ("const_reverse_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2639 2704])
                            ("rend" function (:type ("reverse_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2707 2756])
                            ("rend" function
                               (:methodconst-flag t
                                :type ("const_reverse_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2759 2820])
                            ("empty" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [2824 2875])
                            ("front" function (:type ("std::pair" type
                                 (:template-specifier 
                                    ( ("KeyT" type nil nil nil)
                                      ("ValueT" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [2879 2950])
                            ("front" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("std::pair" type
                                     (:template-specifier 
                                        ( ("KeyT" type nil nil nil)
                                          ("ValueT" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [2953 3024])
                            ("back" function (:type ("std::pair" type
                                 (:template-specifier 
                                    ( ("KeyT" type nil nil nil)
                                      ("ValueT" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [3027 3097])
                            ("back" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("std::pair" type
                                     (:template-specifier 
                                        ( ("KeyT" type nil nil nil)
                                          ("ValueT" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [3100 3170])
                            ("clear" function (:type "void") (reparse-symbol classsubparts) [3174 3229])
                            ("swap" function
                               (:arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :type ("MapVector" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3243 3258]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [3233 3328])
                            ("[]" function
                               (:operator-flag t
                                :arguments 
                                  ( ("Key" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("KeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3351 3367]))                                  
                                :type ("ValueT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3332 3710])
                            ("lookup" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Key" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("KeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3799 3815]))                                  
                                :type ("ValueT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3785 4084])
                            ("insert" function
                               (:arguments 
                                  ( ("KV" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::pair" type
                                             (:template-specifier 
                                                ( ("KeyT" type nil nil nil)
                                                  ("ValueT" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [4121 4155]))                                  
                                :type ("std::pair" type
                                     (:template-specifier 
                                        ( ("iterator" type nil nil nil)
                                          ("bool" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [4088 4580])
                            ("insert" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("std::pair" type
                                             (:template-specifier 
                                                ( ("KeyT" type nil nil nil)
                                                  ("ValueT" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [4617 4643])
                                    ("" variable (:type ("KV" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4643 4646]))                                  
                                :type ("std::pair" type
                                     (:template-specifier 
                                        ( ("iterator" type nil nil nil)
                                          ("bool" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [4584 5114])
                            ("count" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Key" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("KeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5134 5150]))                                  
                                :type ("size_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5118 5256])
                            ("find" function
                               (:arguments 
                                  ( ("Key" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("KeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5274 5290]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5260 5458])
                            ("find" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Key" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("KeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5482 5498]))                                  
                                :type ("const_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5462 5672])
                            ("pop_back" function (:type "void") (reparse-symbol classsubparts) [5723 5855])
                            ("erase" function
                               (:typemodifiers ("typename")
                                :arguments 
                                  ( ("Iterator" variable
                                       (:typemodifiers ("typename")
                                        :type ("VectorType::iterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6186 6225]))                                  
                                :type ("VectorType::iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6150 6590])
                            ("erase" function
                               (:arguments 
                                  ( ("Key" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("KeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6712 6728]))                                  
                                :type ("size_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6696 6843])
                            ("remove_if" function
                               (:template 
                                  ( ("Predicate" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("Pred" variable (:type ("Predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7035 7050]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [6993 7051]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1373 7054])
                    ("remove_if" function
                       (:template 
                          ( ("Function" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("Pred" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7224 7238]))                          
                        :parent "MapVector")
                        (reparse-symbol namespacesubparts) [7137 7658])
                    ("SmallMapVector" type
                       (:template 
                          ( ("KeyT" type (:type "class") nil nil)
                            ("ValueT" type (:type "class") nil nil)
                            ("unsigned int" type (:typevar "N") nil nil))                          
                        :type "struct"
                        :superclasses 
                          ( ("MapVector" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [7741 7942]))                  
                :type "namespace")
                nil [966 7945]))          
      :file "MapVector.h"
      :pointmax 8000
      :fsize 7999
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 7135 . 7136) (symbol 7125 . 7135) (TYPENAME 7116 . 7124) (punctuation 7114 . 7115) (symbol 7107 . 7114) (TYPENAME 7098 . 7106) (punctuation 7096 . 7097) (symbol 7090 . 7096) (TYPENAME 7081 . 7089) (punctuation 7079 . 7080) (symbol 7075 . 7079) (TYPENAME 7066 . 7074) (punctuation 7065 . 7066) (TEMPLATE 7056 . 7064) (punctuation 4642 . 4643) (punctuation 1929 . 1930) (symbol 1906 . 1928) (USING 1900 . 1905) (punctuation 1857 . 1858) (symbol 1840 . 1856) (USING 1834 . 1839) (punctuation 1793 . 1794) (symbol 1778 . 1792) (USING 1772 . 1777) (punctuation 1737 . 1738) (symbol 1728 . 1736) (USING 1722 . 1727) (punctuation 1685 . 1686) (symbol 1675 . 1684) (USING 1669 . 1674) (punctuation 1632 . 1633) (symbol 1621 . 1631) (USING 1615 . 1620) (USING 1590 . 1595) (string 1513 . 1576) (punctuation 1499 . 1500) (punctuation 1498 . 1499) (punctuation 1497 . 1498) (punctuation 1467 . 1468) (punctuation 1371 . 1372) (punctuation 1370 . 1371) (punctuation 1369 . 1370) (symbol 1363 . 1369) (punctuation 1361 . 1362) (symbol 1357 . 1361) (punctuation 1356 . 1357) (symbol 1352 . 1356) (punctuation 1351 . 1352) (punctuation 1350 . 1351) (symbol 1347 . 1350) (punctuation 1346 . 1347) (symbol 1340 . 1346) (punctuation 1339 . 1340) (punctuation 1338 . 1339) (symbol 1335 . 1338) (punctuation 1333 . 1334) (symbol 1322 . 1332) (TYPENAME 1313 . 1321) (punctuation 1302 . 1303) (punctuation 1301 . 1302) (UNSIGNED 1293 . 1301) (punctuation 1291 . 1292) (symbol 1287 . 1291) (punctuation 1286 . 1287) (symbol 1278 . 1286) (punctuation 1276 . 1277) (symbol 1268 . 1275) (TYPENAME 1259 . 1267) (punctuation 1248 . 1249) (symbol 1242 . 1248) (TYPENAME 1233 . 1241) (punctuation 1231 . 1232) (symbol 1227 . 1231) (TYPENAME 1218 . 1226) (punctuation 1217 . 1218) (TEMPLATE 1209 . 1217))
      :lexical-table 
        '(("LLVM_ADT_MAPVECTOR_H")
          )
)
    (semanticdb-table "semanticdb-table-155562056228"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_SETOPERATIONS_H" variable (:constant-flag t) nil [635 659])
            ("llvm" type
               (:members 
                  ( ("set_union" function
                       (:template 
                          ( ("S1Ty" type (:type "class") nil nil)
                            ("S2Ty" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("S1" variable
                               (:reference 1
                                :type ("S1Ty" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [800 809])
                            ("S2" variable
                               (:reference 1
                                :constant-flag t
                                :type ("S2Ty" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [810 825]))                          )
                        (reparse-symbol namespacesubparts) [751 1018])
                    ("set_intersect" function
                       (:template 
                          ( ("S1Ty" type (:type "class") nil nil)
                            ("S2Ty" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("S1" variable
                               (:reference 1
                                :type ("S1Ty" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1307 1316])
                            ("S2" variable
                               (:reference 1
                                :constant-flag t
                                :type ("S2Ty" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1317 1332]))                          )
                        (reparse-symbol namespacesubparts) [1254 1510])
                    ("set_difference" function
                       (:template 
                          ( ("S1Ty" type (:type "class") nil nil)
                            ("S2Ty" type (:type "class") nil nil))                          
                        :type ("S1Ty" type (:type "class") nil nil)
                        :arguments 
                          ( ("S1" variable
                               (:reference 1
                                :constant-flag t
                                :type ("S1Ty" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1610 1625])
                            ("S2" variable
                               (:reference 1
                                :constant-flag t
                                :type ("S2Ty" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1626 1641]))                          )
                        (reparse-symbol namespacesubparts) [1556 1858])
                    ("set_subtract" function
                       (:template 
                          ( ("S1Ty" type (:type "class") nil nil)
                            ("S2Ty" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("S1" variable
                               (:reference 1
                                :type ("S1Ty" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1960 1969])
                            ("S2" variable
                               (:reference 1
                                :constant-flag t
                                :type ("S2Ty" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1970 1985]))                          )
                        (reparse-symbol namespacesubparts) [1908 2100])
                    ("set_is_subset" function
                       (:template 
                          ( ("S1Ty" type (:type "class") nil nil)
                            ("S2Ty" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("S1" variable
                               (:reference 1
                                :constant-flag t
                                :type ("S1Ty" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2208 2223])
                            ("S2" variable
                               (:reference 1
                                :constant-flag t
                                :type ("S2Ty" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2224 2239]))                          )
                        (reparse-symbol namespacesubparts) [2155 2375]))                  
                :type "namespace")
                nil [661 2378]))          
      :file "SetOperations.h"
      :pointmax 2409
      :fsize 2408
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("LLVM_ADT_SETOPERATIONS_H")
          )
)
    (semanticdb-table "semanticdb-table-155562056288"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_SETVECTOR_H" variable (:constant-flag t) nil [913 933])
            ("llvm/ADT/ArrayRef.h" include nil nil [935 965])
            ("llvm/ADT/DenseSet.h" include nil nil [966 996])
            ("llvm/ADT/STLExtras.h" include nil nil [997 1028])
            ("llvm/Support/Compiler.h" include nil nil [1029 1063])
            ("cassert" include (:system-flag t) nil [1064 1082])
            ("iterator" include (:system-flag t) nil [1083 1102])
            ("vector" include (:system-flag t) nil [1103 1120])
            ("llvm" type
               (:members 
                  ( ("SetVector" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [1486 1493])
                            ("value_type" variable
                               (:default-value "T"
                                :type "int")
                                (reparse-symbol classsubparts) [1502 1517])
                            ("key_type" variable
                               (:default-value "T"
                                :type "int")
                                (reparse-symbol classsubparts) [1526 1539])
                            ("set_type" variable
                               (:default-value "Set"
                                :type "int")
                                (reparse-symbol classsubparts) [1608 1623])
                            ("vector_type" variable
                               (:default-value "Vector"
                                :type "int")
                                (reparse-symbol classsubparts) [1632 1653])
                            ("vector_type::const_iterator" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [1673 1710])
                            ("vector_type::const_iterator" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [1736 1773])
                            ("vector_type::const_reverse_iterator" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [1801 1846])
                            ("vector_type::const_reverse_iterator" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [1880 1925])
                            ("vector_type::size_type" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [1946 1978])
                            ("SetVector" function
                               (:template 
                                  ( ("It" type (:type "class") nil nil))                                  
                                :type ("SetVector" type (:type "class") nil nil)
                                :arguments 
                                  ( ("Start" variable (:type ("It" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2131 2140])
                                    ("End" variable (:type ("It" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2141 2148]))                                  
                                :constructor-flag t)
                                (reparse-symbol classsubparts) [2097 2178])
                            ("getArrayRef" function
                               (:methodconst-flag t
                                :type ("ArrayRef" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [2182 2233])
                            ("takeVector" function (:type ("Vector" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2297 2371])
                            ("empty" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [2425 2477])
                            ("size" function
                               (:methodconst-flag t
                                :type ("size_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2538 2593])
                            ("begin" function (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2654 2704])
                            ("begin" function
                               (:methodconst-flag t
                                :type ("const_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2770 2832])
                            ("end" function (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2887 2933])
                            ("end" function
                               (:methodconst-flag t
                                :type ("const_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2993 3051])
                            ("rbegin" function (:type ("reverse_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3114 3174])
                            ("rbegin" function
                               (:methodconst-flag t
                                :type ("const_reverse_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3242 3314])
                            ("rend" function (:type ("reverse_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3382 3438])
                            ("rend" function
                               (:methodconst-flag t
                                :type ("const_reverse_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3512 3580])
                            ("front" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3633 3756])
                            ("back" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3808 3928])
                            ("[]" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("n" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3991 4003]))                                  
                                :type ("const_reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3964 4106])
                            ("insert" function
                               (:arguments 
                                  ( ("X" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("value_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4237 4257]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [4225 4367])
                            ("insert" function
                               (:template 
                                  ( ("It" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("Start" variable (:type ("It" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4460 4469])
                                    ("End" variable (:type ("It" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4470 4477]))                                  )
                                (reparse-symbol classsubparts) [4424 4590])
                            ("remove" function
                               (:arguments 
                                  ( ("X" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("value_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4648 4668]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [4636 4895])
                            ("erase" function
                               (:arguments 
                                  ( ("I" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5130 5141]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5115 5591])
                            ("remove_if" function
                               (:template 
                                  ( ("UnaryPredicate" type (:type "class") nil nil))                                  
                                :type "bool"
                                :arguments 
                                  ( ("P" variable (:type ("UnaryPredicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6071 6088]))                                  )
                                (reparse-symbol classsubparts) [6019 6315])
                            ("contains" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("key" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("key_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6386 6406]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [6372 6459])
                            ("count" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("key" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("key_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6616 6636]))                                  
                                :type ("size_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6600 6676])
                            ("clear" function (:type "void") (reparse-symbol classsubparts) [6717 6774])
                            ("pop_back" function (:type "void") (reparse-symbol classsubparts) [6826 6972])
                            ("pop_back_val" function (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6991 7065])
                            ("==" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("that" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SetVector" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7085 7107]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [7069 7155])
                            ("!=" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("that" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SetVector" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7175 7197]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [7159 7245])
                            ("set_union" function
                               (:template 
                                  ( ("STy" type (:type "class") nil nil))                                  
                                :type "bool"
                                :arguments 
                                  ( ("S" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("STy" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7486 7499]))                                  )
                                (reparse-symbol classsubparts) [7448 7693])
                            ("set_subtract" function
                               (:template 
                                  ( ("STy" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("S" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("STy" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7908 7921]))                                  )
                                (reparse-symbol classsubparts) [7867 8039])
                            ("swap" function
                               (:arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :type ("SetVector" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil)
                                                  ("Vector" type nil nil nil)
                                                  ("Set" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [8053 8084]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [8043 8146])
                            ("private" label nil (reparse-symbol classsubparts) [8148 8156])
                            ("TestAndEraseFromSet" type
                               (:template 
                                  ( ("UnaryPredicate" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("P" variable (:type ("UnaryPredicate" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8447 8464])
                                    ("set_" variable (:type ("set_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8469 8484])
                                    ("public" label nil (reparse-symbol classsubparts) [8488 8495])
                                    ("TestAndEraseFromSet" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("P" variable (:type ("UnaryPredicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8520 8537])
                                            ("set_" variable
                                               (:reference 1
                                                :type ("set_type" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [8538 8553]))                                          
                                        :type ("TestAndEraseFromSet" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [8500 8594])
                                    ("()" function
                                       (:template 
                                          ( ("ArgumentT" type (:type "class") nil nil))                                          
                                        :type "bool"
                                        :arguments 
                                          ( ("Arg" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("ArgumentT" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [8650 8671]))                                          
                                        :operator-flag t)
                                        (reparse-symbol classsubparts) [8600 8773]))                                  )
                                (reparse-symbol classsubparts) [8378 8778])
                            ("set_" variable (:type ("set_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8782 8796])
                            ("vector_" variable (:type ("vector_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8821 8841]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1468 8863])
                    ("SmallSetVector" type
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("unsigned int" type (:typevar "N") nil nil))                          
                        :type "class"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [9069 9076])
                            ("SmallSetVector" function
                               (:template 
                                  ( ("It" type (:type "class") nil nil))                                  
                                :type ("SmallSetVector" type (:type "class") nil nil)
                                :arguments 
                                  ( ("Start" variable (:type ("It" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9208 9217])
                                    ("End" variable (:type ("It" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9218 9225]))                                  
                                :constructor-flag t)
                                (reparse-symbol classsubparts) [9169 9261]))                          
                        :superclasses 
                          ( ("SetVector" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [8946 9264]))                  
                :type "namespace")
                nil [1122 9267])
            ("std" type
               (:members 
                  ( ("swap" function
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("V" type (:type "class") nil nil)
                            ("S" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("LHS" variable
                               (:reference 1
                                :type ("llvm::SetVector" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("V" type nil nil nil)
                                          ("S" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [9422 9452])
                            ("RHS" variable
                               (:reference 1
                                :type ("llvm::SetVector" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("V" type nil nil nil)
                                          ("S" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [9453 9483]))                          
                        :typemodifiers ("inline"))
                        (reparse-symbol namespacesubparts) [9360 9504])
                    ("swap" function
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("unsigned int" type (:typevar "N") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("LHS" variable
                               (:reference 1
                                :type ("llvm::SmallSetVector" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("N" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [9613 9645])
                            ("RHS" variable
                               (:reference 1
                                :type ("llvm::SmallSetVector" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("N" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [9646 9678]))                          
                        :typemodifiers ("inline"))
                        (reparse-symbol namespacesubparts) [9563 9699]))                  
                :type "namespace")
                nil [9291 9702]))          
      :file "SetVector.h"
      :pointmax 9756
      :fsize 9755
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 9105 . 9106) (DEFAULT 9098 . 9105) (punctuation 9096 . 9097) (semantic-list 9093 . 9095) (symbol 9079 . 9093) (symbol 6976 . 6990) (punctuation 2038 . 2039) (DEFAULT 2031 . 2038) (punctuation 2029 . 2030) (semantic-list 2026 . 2028) (symbol 2017 . 2026) (punctuation 1944 . 1945) (symbol 1934 . 1943) (USING 1928 . 1933) (punctuation 1878 . 1879) (symbol 1855 . 1877) (USING 1849 . 1854) (punctuation 1799 . 1800) (symbol 1782 . 1798) (USING 1776 . 1781) (punctuation 1734 . 1735) (symbol 1719 . 1733) (USING 1713 . 1718) (punctuation 1671 . 1672) (symbol 1662 . 1670) (USING 1656 . 1661) (USING 1626 . 1631) (USING 1602 . 1607) (punctuation 1598 . 1599) (punctuation 1597 . 1598) (symbol 1596 . 1597) (CONST 1590 . 1595) (punctuation 1588 . 1589) (symbol 1572 . 1587) (USING 1566 . 1571) (punctuation 1562 . 1563) (punctuation 1561 . 1562) (symbol 1560 . 1561) (punctuation 1558 . 1559) (symbol 1548 . 1557) (USING 1542 . 1547) (USING 1520 . 1525) (USING 1496 . 1501) (punctuation 1466 . 1467) (punctuation 1465 . 1466) (symbol 1464 . 1465) (punctuation 1463 . 1464) (symbol 1455 . 1463) (punctuation 1453 . 1454) (symbol 1449 . 1452) (TYPENAME 1440 . 1448) (punctuation 1428 . 1429) (punctuation 1427 . 1428) (symbol 1426 . 1427) (punctuation 1425 . 1426) (symbol 1419 . 1425) (punctuation 1418 . 1419) (punctuation 1417 . 1418) (symbol 1414 . 1417) (punctuation 1412 . 1413) (symbol 1405 . 1411) (TYPENAME 1396 . 1404) (punctuation 1394 . 1395) (symbol 1393 . 1394) (TYPENAME 1384 . 1392) (punctuation 1383 . 1384) (TEMPLATE 1374 . 1382))
      :lexical-table 
        '(("LLVM_ADT_SETVECTOR_H")
          )
)
    (semanticdb-table "semanticdb-table-1555620562e8"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_TRIPLE_H" variable (:constant-flag t) nil [405 422])
            ("llvm/ADT/Twine.h" include nil nil [424 451])
            ("llvm/Support/VersionTuple.h" include nil nil [452 490])
            ("llvm" type
               (:members 
                  ( ("Triple" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [1687 1694])
                            ("ArchType" type
                               (:members 
                                  ( ("UnknownArch" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [1717 1729])
                                    ("arm" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [1735 1739])
                                    ("armeb" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [1799 1805])
                                    ("aarch64" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [1846 1854])
                                    ("aarch64_be" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [1902 1913])
                                    ("aarch64_32" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [1958 1969])
                                    ("arc" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2023 2027])
                                    ("avr" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2064 2068])
                                    ("bpfel" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2118 2124])
                                    ("bpfeb" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2192 2198])
                                    ("csky" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2263 2268])
                                    ("hexagon" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2297 2305])
                                    ("m68k" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2337 2342])
                                    ("mips" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2388 2393])
                                    ("mipsel" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2444 2451])
                                    ("mips64" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2507 2514])
                                    ("mips64el" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2575 2584])
                                    ("msp430" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2653 2660])
                                    ("ppc" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2691 2695])
                                    ("ppcle" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2727 2733])
                                    ("ppc64" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2781 2787])
                                    ("ppc64le" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2826 2834])
                                    ("r600" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2870 2875])
                                    ("amdgcn" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2924 2931])
                                    ("riscv32" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2968 2976])
                                    ("riscv64" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3016 3024])
                                    ("sparc" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3064 3070])
                                    ("sparcv9" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3100 3108])
                                    ("sparcel" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3140 3148])
                                    ("systemz" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3224 3232])
                                    ("tce" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3262 3266])
                                    ("tcele" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3318 3324])
                                    ("thumb" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3390 3396])
                                    ("thumbeb" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3452 3460])
                                    ("x86" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3503 3507])
                                    ("x86_64" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3540 3547])
                                    ("xcore" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3585 3591])
                                    ("nvptx" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3621 3627])
                                    ("nvptx64" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3658 3666])
                                    ("le32" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3695 3700])
                                    ("le64" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3765 3770])
                                    ("amdil" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3835 3841])
                                    ("amdil64" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3864 3872])
                                    ("hsail" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3914 3920])
                                    ("hsail64" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3947 3955])
                                    ("spir" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4001 4006])
                                    ("spir64" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4077 4084])
                                    ("spirv32" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4153 4161])
                                    ("spirv64" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4204 4212])
                                    ("kalimba" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4255 4263])
                                    ("shave" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4303 4309])
                                    ("lanai" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4365 4371])
                                    ("wasm32" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4408 4415])
                                    ("wasm64" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4464 4471])
                                    ("renderscript32" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4520 4535])
                                    ("renderscript64" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4563 4578])
                                    ("ve" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4606 4609])
                                    ("LastArchType" variable
                                       (:constant-flag t
                                        :default-value (4672 4674)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4657 4674]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [1697 4679])
                            ("SubArchType" type
                               (:members 
                                  ( ("NoSubArch" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4705 4715])
                                    ("ARMSubArch_v9_3a" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4721 4738])
                                    ("ARMSubArch_v9_2a" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4743 4760])
                                    ("ARMSubArch_v9_1a" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4765 4782])
                                    ("ARMSubArch_v9" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4787 4801])
                                    ("ARMSubArch_v8_8a" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4806 4823])
                                    ("ARMSubArch_v8_7a" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4828 4845])
                                    ("ARMSubArch_v8_6a" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4850 4867])
                                    ("ARMSubArch_v8_5a" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4872 4889])
                                    ("ARMSubArch_v8_4a" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4894 4911])
                                    ("ARMSubArch_v8_3a" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4916 4933])
                                    ("ARMSubArch_v8_2a" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4938 4955])
                                    ("ARMSubArch_v8_1a" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4960 4977])
                                    ("ARMSubArch_v8" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4982 4996])
                                    ("ARMSubArch_v8r" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5001 5016])
                                    ("ARMSubArch_v8m_baseline" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5021 5045])
                                    ("ARMSubArch_v8m_mainline" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5050 5074])
                                    ("ARMSubArch_v8_1m_mainline" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5079 5105])
                                    ("ARMSubArch_v7" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5110 5124])
                                    ("ARMSubArch_v7em" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5129 5145])
                                    ("ARMSubArch_v7m" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5150 5165])
                                    ("ARMSubArch_v7s" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5170 5185])
                                    ("ARMSubArch_v7k" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5190 5205])
                                    ("ARMSubArch_v7ve" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5210 5226])
                                    ("ARMSubArch_v6" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5231 5245])
                                    ("ARMSubArch_v6m" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5250 5265])
                                    ("ARMSubArch_v6k" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5270 5285])
                                    ("ARMSubArch_v6t2" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5290 5306])
                                    ("ARMSubArch_v5" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5311 5325])
                                    ("ARMSubArch_v5te" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5330 5346])
                                    ("ARMSubArch_v4t" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5351 5366])
                                    ("AArch64SubArch_arm64e" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5372 5394])
                                    ("KalimbaSubArch_v3" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5400 5418])
                                    ("KalimbaSubArch_v4" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5423 5441])
                                    ("KalimbaSubArch_v5" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5446 5464])
                                    ("MipsSubArch_r6" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5470 5485])
                                    ("PPCSubArch_spe" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5491 5509]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [4682 5510])
                            ("VendorType" type
                               (:members 
                                  ( ("UnknownVendor" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5535 5549])
                                    ("Apple" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5555 5561])
                                    ("PC" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5566 5569])
                                    ("SCEI" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5574 5579])
                                    ("Freescale" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5584 5594])
                                    ("IBM" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5599 5603])
                                    ("ImaginationTechnologies" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5608 5632])
                                    ("MipsTechnologies" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5637 5654])
                                    ("NVIDIA" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5659 5666])
                                    ("CSR" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5671 5675])
                                    ("Myriad" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5680 5687])
                                    ("AMD" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5692 5696])
                                    ("Mesa" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5701 5706])
                                    ("SUSE" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5711 5716])
                                    ("OpenEmbedded" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5721 5734])
                                    ("LastVendorType" variable
                                       (:constant-flag t
                                        :default-value (5756 5768)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5739 5768]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [5513 5773])
                            ("OSType" type
                               (:members 
                                  ( ("UnknownOS" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5794 5804])
                                    ("Ananas" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5810 5817])
                                    ("CloudABI" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5822 5831])
                                    ("Darwin" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5836 5843])
                                    ("DragonFly" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5848 5858])
                                    ("FreeBSD" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5863 5871])
                                    ("Fuchsia" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5876 5884])
                                    ("IOS" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5889 5893])
                                    ("KFreeBSD" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5898 5907])
                                    ("Linux" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5912 5918])
                                    ("Lv2" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5923 5927])
                                    ("MacOSX" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5946 5953])
                                    ("NetBSD" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5958 5965])
                                    ("OpenBSD" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5970 5978])
                                    ("Solaris" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5983 5991])
                                    ("Win32" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [5996 6002])
                                    ("ZOS" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6007 6011])
                                    ("Haiku" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6016 6022])
                                    ("Minix" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6027 6033])
                                    ("RTEMS" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6038 6044])
                                    ("NaCl" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6049 6054])
                                    ("AIX" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6082 6086])
                                    ("CUDA" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6091 6096])
                                    ("NVCL" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6122 6127])
                                    ("AMDHSA" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6155 6162])
                                    ("PS4" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6190 6194])
                                    ("ELFIAMCU" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6199 6208])
                                    ("TvOS" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6213 6218])
                                    ("WatchOS" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6243 6251])
                                    ("Mesa3D" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6276 6283])
                                    ("Contiki" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6288 6296])
                                    ("AMDPAL" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6301 6308])
                                    ("HermitCore" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6336 6347])
                                    ("Hurd" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6388 6393])
                                    ("WASI" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6416 6421])
                                    ("Emscripten" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6463 6474])
                                    ("LastOSType" variable
                                       (:constant-flag t
                                        :default-value (6492 6502)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6479 6502]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [5776 6507])
                            ("EnvironmentType" type
                               (:members 
                                  ( ("UnknownEnvironment" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6537 6556])
                                    ("GNU" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6562 6566])
                                    ("GNUABIN32" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6571 6581])
                                    ("GNUABI64" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6586 6595])
                                    ("GNUEABI" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6600 6608])
                                    ("GNUEABIHF" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6613 6623])
                                    ("GNUX32" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6628 6635])
                                    ("GNUILP32" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6640 6649])
                                    ("CODE16" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6654 6661])
                                    ("EABI" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6666 6671])
                                    ("EABIHF" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6676 6683])
                                    ("Android" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6688 6696])
                                    ("Musl" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6701 6706])
                                    ("MuslEABI" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6711 6720])
                                    ("MuslEABIHF" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6725 6736])
                                    ("MuslX32" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6741 6749])
                                    ("MSVC" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6755 6760])
                                    ("Itanium" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6765 6773])
                                    ("Cygnus" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6778 6785])
                                    ("CoreCLR" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6790 6798])
                                    ("Simulator" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6803 6813])
                                    ("MacABI" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6876 6883])
                                    ("LastEnvironmentType" variable
                                       (:constant-flag t
                                        :default-value (6968 6974)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6946 6974]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [6510 6979])
                            ("ObjectFormatType" type
                               (:members 
                                  ( ("UnknownObjectFormat" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [7010 7030])
                                    ("COFF" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [7036 7041])
                                    ("ELF" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [7046 7050])
                                    ("GOFF" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [7055 7060])
                                    ("MachO" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [7065 7071])
                                    ("Wasm" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [7076 7081])
                                    ("XCOFF" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [7086 7092]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [6982 7097])
                            ("private" label nil (reparse-symbol classsubparts) [7099 7107])
                            ("Data" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7110 7127])
                            ("Arch" variable (:type ("ArchType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7159 7173])
                            ("SubArch" variable (:type ("SubArchType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7216 7236])
                            ("Vendor" variable (:type ("VendorType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7270 7288])
                            ("OS" variable (:type ("OSType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7318 7328])
                            ("Environment" variable (:type ("EnvironmentType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7367 7395])
                            ("ObjectFormat" variable (:type ("ObjectFormatType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7429 7459])
                            ("public" label nil (reparse-symbol classsubparts) [7461 7468])
                            ("Triple" function
                               (:constructor-flag t
                                :type ("Triple" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7607 7685])
                            ("Triple" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("Str" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Twine" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7705 7722]))                                  
                                :type ("Triple" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7698 7723])
                            ("Triple" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("ArchStr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Twine" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7733 7754])
                                    ("VendorStr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Twine" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7755 7778])
                                    ("OSStr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Twine" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7779 7798]))                                  
                                :type ("Triple" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7726 7799])
                            ("Triple" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("ArchStr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Twine" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7809 7830])
                                    ("VendorStr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Twine" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7831 7854])
                                    ("OSStr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Twine" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7855 7874])
                                    ("EnvironmentStr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Twine" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7884 7912]))                                  
                                :type ("Triple" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7802 7913])
                            ("==" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("Other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Triple" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7933 7953]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [7917 8175])
                            ("!=" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("Other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Triple" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8195 8215]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [8179 8257])
                            ("normalize" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("Str" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8633 8647]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8604 8648])
                            ("normalize" function
                               (:methodconst-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8710 8767])
                            ("getArch" function
                               (:methodconst-flag t
                                :type ("ArchType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8880 8921])
                            ("getSubArch" function
                               (:methodconst-flag t
                                :type ("SubArchType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8984 9034])
                            ("getVendor" function
                               (:methodconst-flag t
                                :type ("VendorType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9087 9134])
                            ("getOS" function
                               (:methodconst-flag t
                                :type ("OSType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9197 9232])
                            ("hasEnvironment" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [9309 9381])
                            ("getEnvironment" function
                               (:methodconst-flag t
                                :type ("EnvironmentType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9439 9501])
                            ("getEnvironmentVersion" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("VersionTuple" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9658 9701])
                            ("getObjectFormat" function
                               (:methodconst-flag t
                                :type ("ObjectFormatType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9750 9815])
                            ("getOSVersion" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("VersionTuple" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9972 10006])
                            ("getOSMajorVersion" function
                               (:methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [10110 10182])
                            ("getMacOSXVersion" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Version" variable
                                       (:reference 1
                                        :type ("VersionTuple" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10505 10527]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [10483 10534])
                            ("getiOSVersion" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("VersionTuple" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10654 10689])
                            ("getWatchOSVersion" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("VersionTuple" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10813 10852])
                            ("str" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10911 10958])
                            ("getTriple" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10962 11015])
                            ("getArchName" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11079 11109])
                            ("getArchName" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Kind" variable (:type ("ArchType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11194 11208])
                                    ("SubArch" variable
                                       (:default-value "NoSubArch"
                                        :type ("SubArchType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11209 11240]))                                  
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11172 11248])
                            ("getVendorName" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11307 11339])
                            ("getOSName" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11407 11435])
                            ("getEnvironmentName" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11530 11567])
                            ("getOSAndEnvironmentName" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11725 11767])
                            ("isArch64Bit" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [12212 12237])
                            ("isArch32Bit" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [12364 12389])
                            ("isArch16Bit" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [12516 12541])
                            ("isOSVersionLT" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Major" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [12669 12684])
                                    ("Minor" variable
                                       (:default-value "0"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [12685 12703])
                                    ("Micro" variable
                                       (:default-value "0"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [12726 12744]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [12650 12985])
                            ("isOSVersionLT" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Triple" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13008 13028]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [12989 13090])
                            ("isMacOSXVersionLT" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Major" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [13278 13293])
                                    ("Minor" variable
                                       (:default-value "0"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [13294 13312])
                                    ("Micro" variable
                                       (:default-value "0"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [13339 13357]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [13255 13365])
                            ("isMacOSX" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [13480 13574])
                            ("isiOS" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [13888 13959])
                            ("isTvOS" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [13999 14060])
                            ("isWatchOS" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [14103 14170])
                            ("isWatchABI" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [14174 14254])
                            ("isOSzOS" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [14258 14313])
                            ("isOSDarwin" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [14376 14454])
                            ("isSimulatorEnvironment" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [14458 14549])
                            ("isMacCatalystEnvironment" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [14553 14643])
                            ("isTargetMachineMac" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [14707 14888])
                            ("isOSNetBSD" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [14892 14959])
                            ("isOSOpenBSD" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [14963 15032])
                            ("isOSFreeBSD" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [15036 15105])
                            ("isOSFuchsia" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [15109 15178])
                            ("isOSDragonFly" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [15182 15249])
                            ("isOSSolaris" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [15253 15322])
                            ("isOSIAMCU" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [15326 15394])
                            ("isOSUnknown" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [15398 15463])
                            ("isGNUEnvironment" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [15467 15733])
                            ("isOSContiki" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [15737 15806])
                            ("isOSHaiku" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [15847 15912])
                            ("isOSWindows" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [15955 16022])
                            ("isKnownWindowsMSVCEnvironment" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [16067 16177])
                            ("isWindowsMSVCEnvironment" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [16228 16395])
                            ("isWindowsCoreCLREnvironment" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [16399 16510])
                            ("isWindowsItaniumEnvironment" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [16514 16625])
                            ("isWindowsCygwinEnvironment" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [16629 16738])
                            ("isWindowsGNUEnvironment" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [16742 16845])
                            ("isOSCygMing" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [16891 16991])
                            ("isOSMSVCRT" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [17062 17203])
                            ("isOSNaCl" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [17258 17321])
                            ("isOSLinux" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [17362 17427])
                            ("isOSKFreeBSD" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [17471 17542])
                            ("isOSHurd" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [17582 17645])
                            ("isOSWASI" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [17685 17748])
                            ("isOSEmscripten" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [17794 17869])
                            ("isOSGlibc" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [17912 18076])
                            ("isOSAIX" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [18115 18176])
                            ("isOSBinFormatELF" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [18235 18315])
                            ("isOSBinFormatCOFF" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [18375 18457])
                            ("isOSBinFormatGOFF" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [18517 18593])
                            ("isOSBinFormatMachO" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [18643 18727])
                            ("isOSBinFormatWasm" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [18787 18869])
                            ("isOSBinFormatXCOFF" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [18930 19014])
                            ("isPS4CPU" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [19064 19210])
                            ("isPS4" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [19265 19366])
                            ("isAndroid" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [19412 19482])
                            ("isAndroidVersionLT" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Major" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [19510 19525]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [19486 19858])
                            ("isMusl" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [19911 20135])
                            ("isSPIR" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [20195 20289])
                            ("isSPIRV" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [20347 20446])
                            ("isNVPTX" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [20507 20604])
                            ("isAMDGCN" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [20649 20710])
                            ("isAMDGPU" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [20714 20810])
                            ("isThumb" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [20879 20976])
                            ("isARM" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [21043 21134])
                            ("isTargetEHABICompatible" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [21223 21657])
                            ("isArmT32" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [21700 22186])
                            ("isArmMClass" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [22236 22580])
                            ("isAArch64" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [22651 22801])
                            ("isAArch64" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("PointerWidth" variable (:type "int") (reparse-symbol arg-sub-list) [22924 22941]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [22909 23224])
                            ("isMIPS32" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [23299 23395])
                            ("isMIPS64" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [23470 23570])
                            ("isMIPS" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [23653 23715])
                            ("isPPC" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [23787 23951])
                            ("isPPC32" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [24029 24122])
                            ("isPPC64" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [24200 24297])
                            ("isRISCV" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [24360 24459])
                            ("isSystemZ" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [24506 24575])
                            ("isX86" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [24634 24726])
                            ("isVE" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [24767 24826])
                            ("isWasm" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [24887 24983])
                            ("isCSKY" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [25025 25088])
                            ("isArm64e" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [25162 25290])
                            ("isX32" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [25333 25461])
                            ("supportsCOMDAT" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [25512 25605])
                            ("hasDefaultEmulatedTLS" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [25670 25783])
                            ("hasDefaultDataSections" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [25850 25936])
                            ("hasDLLImportExport" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [26010 26081])
                            ("setArch" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Kind" variable (:type ("ArchType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26214 26228])
                                    ("SubArch" variable
                                       (:default-value "NoSubArch"
                                        :type ("SubArchType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26229 26260]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [26201 26262])
                            ("setVendor" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Kind" variable (:type ("VendorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26352 26368]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [26337 26369])
                            ("setOS" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Kind" variable (:type ("OSType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26464 26476]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [26453 26477])
                            ("setEnvironment" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Kind" variable (:type ("EnvironmentType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26577 26598]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [26557 26599])
                            ("setObjectFormat" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Kind" variable (:type ("ObjectFormatType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26658 26680]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [26637 26681])
                            ("setTriple" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Str" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Twine" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26751 26768]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [26736 26769])
                            ("setArchName" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Str" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26858 26872]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [26841 26873])
                            ("setVendorName" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Str" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26959 26973]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [26940 26974])
                            ("setOSName" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Str" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27065 27079]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [27050 27080])
                            ("setEnvironmentName" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Str" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27185 27199]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [27161 27200])
                            ("setOSAndEnvironmentName" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Str" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27328 27342]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [27299 27343])
                            ("get32BitArchVariant" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("llvm::Triple" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [27721 27762])
                            ("get64BitArchVariant" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("llvm::Triple" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [28059 28100])
                            ("getBigEndianArchVariant" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("llvm::Triple" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [28405 28450])
                            ("getLittleEndianArchVariant" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("llvm::Triple" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [28761 28809])
                            ("getARMCPUForArch" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Arch" variable
                                       (:default-value "StringRef()"
                                        :type ("StringRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29052 29080]))                                  
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [29025 29088])
                            ("isLittleEndian" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [29223 29251])
                            ("isCompatibleWith" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Triple" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29327 29347]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [29305 29354])
                            ("merge" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Triple" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29404 29424]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [29386 29431])
                            ("getMinimumSupportedOSVersion" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("VersionTuple" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [29726 29776])
                            ("getArchTypeName" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("Kind" variable (:type ("ArchType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29927 29941]))                                  
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [29894 29942])
                            ("getArchTypePrefix" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("Kind" variable (:type ("ArchType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30272 30286]))                                  
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [30237 30287])
                            ("getVendorTypeName" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("Kind" variable (:type ("VendorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30379 30395]))                                  
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [30344 30396])
                            ("getOSTypeName" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("Kind" variable (:type ("OSType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30494 30506]))                                  
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [30463 30507])
                            ("getEnvironmentTypeName" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("Kind" variable (:type ("EnvironmentType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30609 30630]))                                  
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [30569 30631])
                            ("getArchTypeForLLVMName" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("Str" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30842 30856]))                                  
                                :type ("ArchType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [30803 30857])
                            ("getCanonicalVersionForOS" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("OSKind" variable (:type ("OSType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30986 31000])
                                    ("Version" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("VersionTuple" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31048 31076]))                                  
                                :type ("VersionTuple" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [30941 31077]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1672 31080]))                  
                :type "namespace")
                nil [644 31083]))          
      :file "Triple.h"
      :pointmax 31115
      :fsize 31114
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((EXPLICIT 7689 . 7697))
      :lexical-table 
        '(("LLVM_ADT_TRIPLE_H")
          )
)
    (semanticdb-table "semanticdb-table-1555620e0d00"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_POSTORDERITERATOR_H" variable (:constant-flag t) nil [697 725])
            ("llvm/ADT/GraphTraits.h" include nil nil [727 760])
            ("llvm/ADT/Optional.h" include nil nil [761 791])
            ("llvm/ADT/SmallPtrSet.h" include nil nil [792 825])
            ("llvm/ADT/SmallVector.h" include nil nil [826 859])
            ("llvm/ADT/iterator_range.h" include nil nil [860 896])
            ("iterator" include (:system-flag t) nil [897 916])
            ("set" include (:system-flag t) nil [917 931])
            ("utility" include (:system-flag t) nil [932 950])
            ("vector" include (:system-flag t) nil [951 968])
            ("llvm" type
               (:members 
                  ( ("po_iterator_storage" type
                       (:template 
                          ( ("SetType" type (:type "class") nil nil)
                            ("bool" type (:typevar "External") nil nil))                          
                        :type "class"
                        :members 
                          ( ("Visited" variable (:type ("SetType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2449 2465])
                            ("public" label nil (reparse-symbol classsubparts) [2467 2474])
                            ("insertEdge" function
                               (:template 
                                  ( ("NodeRef" type (:type "class") nil nil))                                  
                                :type "bool"
                                :arguments 
                                  ( ("From" variable (:type ("Optional" type
                                         (:template-specifier 
                                            ( ("NodeRef" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [2579 2602])
                                    ("To" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2603 2614]))                                  )
                                (reparse-symbol classsubparts) [2533 2658])
                            ("finishPostorder" function
                               (:template 
                                  ( ("NodeRef" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("BB" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2767 2778]))                                  )
                                (reparse-symbol classsubparts) [2718 2781]))                          )
                        (reparse-symbol namespacesubparts) [2380 2784])
                    ("po_iterator_storage" type
                       (:template 
                          ( ("SetType" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("Visited" variable (:type ("SetType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2930 2947])
                            ("public" label nil (reparse-symbol classsubparts) [2949 2956])
                            ("po_iterator_storage" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("VSet" variable
                                       (:reference 1
                                        :type ("SetType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2979 2993]))                                  
                                :type ("po_iterator_storage" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2959 3012])
                            ("po_iterator_storage" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("po_iterator_storage" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3035 3064]))                                  
                                :type ("po_iterator_storage" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3015 3088])
                            ("insertEdge" function
                               (:template 
                                  ( ("NodeRef" type (:type "class") nil nil))                                  
                                :type "bool"
                                :arguments 
                                  ( ("From" variable (:type ("Optional" type
                                         (:template-specifier 
                                            ( ("NodeRef" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [3296 3319])
                                    ("To" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3320 3331]))                                  )
                                (reparse-symbol classsubparts) [3255 3375])
                            ("finishPostorder" function
                               (:template 
                                  ( ("NodeRef" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("BB" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3481 3492]))                                  )
                                (reparse-symbol classsubparts) [3435 3495]))                          
                        :template-specifier 
                          ( ("SetType" type nil nil nil)
                            ("true" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [2861 3498])
                    ("po_iterator" type
                       (:superclasses 
                          ( ("po_iterator_storage" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [3742 3749])
                            ("std::forward_iterator_tag" variable (:type "int") (reparse-symbol classsubparts) [3778 3804])
                            ("GT::NodeRef" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [3826 3847])
                            ("std::ptrdiff_t" variable (:type "int") (reparse-symbol classsubparts) [3874 3889])
                            ("private" label nil (reparse-symbol classsubparts) [3957 3965])
                            ("GT::NodeRef" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [3984 4005])
                            ("GT::ChildIteratorType" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [4026 4057])
                            ("VisitStack" variable (:type ("SmallVector" type
                                 (:template-specifier 
                                    ( ("std::pair" type (:template-specifier 
                                        ( ("NodeRef" type nil nil nil)
                                          ("ChildItTy" type nil nil nil))                                        ) nil nil)
                                      ("8"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [4210 4267])
                            ("po_iterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("BB" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4283 4294]))                                  
                                :type ("po_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4271 4435])
                            ("po_iterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("BB" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4510 4521])
                                    ("S" variable
                                       (:reference 1
                                        :type ("SetType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4522 4533]))                                  
                                :type ("po_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4498 4742])
                            ("po_iterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:reference 1
                                        :type ("SetType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4758 4769]))                                  
                                :type ("po_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4746 4827])
                            ("traverseChild" function (:type "void") (reparse-symbol classsubparts) [4862 5222])
                            ("public" label nil (reparse-symbol classsubparts) [5224 5231])
                            ("begin" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("G" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("GraphT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5297 5313]))                                  
                                :type ("po_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5272 5364])
                            ("end" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("G" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("GraphT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5390 5406]))                                  
                                :type ("po_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5367 5432])
                            ("begin" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("G" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("GraphT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5461 5477])
                                    ("S" variable
                                       (:reference 1
                                        :type ("SetType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5478 5489]))                                  
                                :type ("po_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5436 5543])
                            ("end" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("G" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("GraphT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5569 5585])
                                    ("S" variable
                                       (:reference 1
                                        :type ("SetType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5586 5597]))                                  
                                :type ("po_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5546 5624])
                            ("==" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("x" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("po_iterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5644 5665]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [5628 5716])
                            ("!=" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("x" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("po_iterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5735 5756]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [5719 5788])
                            ("" function
                               (:methodconst-flag t
                                :operator-flag t
                                :function-pointer t
                                :constant-flag t
                                :type ("NodeRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5792 5860])
                            ("->" function
                               (:methodconst-flag t
                                :operator-flag t
                                :type ("NodeRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6102 6147])
                            ("++" function
                               (:operator-flag t
                                :type ("po_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6151 6347])
                            ("++" function
                               (:operator-flag t
                                :arguments 
                                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [6374 6378]))                                  
                                :type ("po_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6351 6459]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [3672 6462])
                    ("po_begin" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("po_iterator" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("G" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6588 6599]))                          )
                        (reparse-symbol namespacesubparts) [6545 6636])
                    ("po_end" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("po_iterator" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("G" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6680 6691]))                          )
                        (reparse-symbol namespacesubparts) [6637 6726])
                    ("post_order" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("iterator_range" type
                             (:template-specifier 
                                ( ("po_iterator" type (:template-specifier 
                                    ( ("T" type nil nil nil))                                    ) nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("G" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6789 6800]))                          )
                        (reparse-symbol namespacesubparts) [6728 6849])
                    ("po_ext_iterator" type
                       (:superclasses 
                          ( ("po_iterator" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("po_ext_iterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("po_iterator" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil)
                                                  ("SetType" type nil nil nil)
                                                  ("true" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [7077 7116]))                                  
                                :type ("po_ext_iterator" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [7061 7156]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [6995 7159])
                    ("po_ext_begin" function
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("SetType" type (:type "class") nil nil))                          
                        :type ("po_ext_iterator" type
                             (:template-specifier 
                                ( ("T" type nil nil nil)
                                  ("SetType" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("G" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7235 7239])
                            ("S" variable
                               (:reference 1
                                :type ("SetType" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7240 7251]))                          )
                        (reparse-symbol namespacesubparts) [7161 7306])
                    ("po_ext_end" function
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("SetType" type (:type "class") nil nil))                          
                        :type ("po_ext_iterator" type
                             (:template-specifier 
                                ( ("T" type nil nil nil)
                                  ("SetType" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("G" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7380 7384])
                            ("S" variable
                               (:reference 1
                                :type ("SetType" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7385 7396]))                          )
                        (reparse-symbol namespacesubparts) [7308 7449])
                    ("post_order_ext" function
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("SetType" type (:type "class") nil nil))                          
                        :type ("iterator_range" type
                             (:template-specifier 
                                ( ("po_ext_iterator" type (:template-specifier 
                                    ( ("T" type nil nil nil)
                                      ("SetType" type nil nil nil))                                    ) nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("G" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7544 7555])
                            ("S" variable
                               (:reference 1
                                :type ("SetType" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7556 7567]))                          )
                        (reparse-symbol namespacesubparts) [7451 7630])
                    ("ipo_iterator" type
                       (:superclasses 
                          ( ("po_iterator" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("ipo_iterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("po_iterator" type
                                             (:template-specifier 
                                                ( ("Inverse" type (:template-specifier 
                                                    ( ("T" type nil nil nil))                                                    ) nil nil)
                                                  ("SetType" type nil nil nil)
                                                  ("External" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [7898 7950]))                                  
                                :type ("ipo_iterator" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [7885 8007]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [7809 8010])
                    ("ipo_begin" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("ipo_iterator" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("G" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8057 8068]))                          )
                        (reparse-symbol namespacesubparts) [8012 8108])
                    ("ipo_end" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("ipo_iterator" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("G" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8153 8164]))                          )
                        (reparse-symbol namespacesubparts) [8110 8201])
                    ("inverse_post_order" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("iterator_range" type
                             (:template-specifier 
                                ( ("ipo_iterator" type (:template-specifier 
                                    ( ("T" type nil nil nil))                                    ) nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("G" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8273 8284]))                          )
                        (reparse-symbol namespacesubparts) [8203 8335])
                    ("ipo_ext_iterator" type
                       (:superclasses 
                          ( ("ipo_iterator" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("ipo_ext_iterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("ipo_iterator" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil)
                                                  ("SetType" type nil nil nil)
                                                  ("true" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [8574 8614]))                                  
                                :type ("ipo_ext_iterator" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [8557 8657])
                            ("ipo_ext_iterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("po_iterator" type
                                             (:template-specifier 
                                                ( ("Inverse" type (:template-specifier 
                                                    ( ("T" type nil nil nil))                                                    ) nil nil)
                                                  ("SetType" type nil nil nil)
                                                  ("true" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [8677 8725]))                                  
                                :type ("ipo_ext_iterator" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [8660 8768]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [8489 8771])
                    ("ipo_ext_begin" function
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("SetType" type (:type "class") nil nil))                          
                        :type ("ipo_ext_iterator" type
                             (:template-specifier 
                                ( ("T" type nil nil nil)
                                  ("SetType" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("G" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8850 8861])
                            ("S" variable
                               (:reference 1
                                :type ("SetType" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8862 8873]))                          )
                        (reparse-symbol namespacesubparts) [8773 8929])
                    ("ipo_ext_end" function
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("SetType" type (:type "class") nil nil))                          
                        :type ("ipo_ext_iterator" type
                             (:template-specifier 
                                ( ("T" type nil nil nil)
                                  ("SetType" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("G" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9006 9017])
                            ("S" variable
                               (:reference 1
                                :type ("SetType" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9018 9029]))                          )
                        (reparse-symbol namespacesubparts) [8931 9083])
                    ("inverse_post_order_ext" function
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("SetType" type (:type "class") nil nil))                          
                        :type ("iterator_range" type
                             (:template-specifier 
                                ( ("ipo_ext_iterator" type (:template-specifier 
                                    ( ("T" type nil nil nil)
                                      ("SetType" type nil nil nil))                                    ) nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("G" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9187 9198])
                            ("S" variable
                               (:reference 1
                                :type ("SetType" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9199 9210]))                          )
                        (reparse-symbol namespacesubparts) [9085 9275])
                    ("ReversePostOrderTraversal" type
                       (:template 
                          ( ("GraphT" type (:type "class") nil nil)
                            ("GT" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("GT::NodeRef" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [10555 10576])
                            ("Blocks" variable (:type ("std::vector" type
                                 (:template-specifier 
                                    ( ("NodeRef" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [10580 10608])
                            ("Initialize" function
                               (:arguments 
                                  ( ("G" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("GraphT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10661 10677]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [10645 10750])
                            ("public" label nil (reparse-symbol classsubparts) [10752 10759])
                            ("std::vector::reverse_iterator" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [10783 10831])
                            ("std::vector::const_reverse_iterator" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [10861 10915])
                            ("ReversePostOrderTraversal" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("G" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("GraphT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10945 10961]))                                  
                                :type ("ReversePostOrderTraversal" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10919 10980])
                            ("begin" function (:type ("rpo_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11065 11113])
                            ("begin" function
                               (:methodconst-flag t
                                :type ("const_rpo_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11116 11177])
                            ("end" function (:type ("rpo_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11180 11224])
                            ("end" function
                               (:methodconst-flag t
                                :type ("const_rpo_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11227 11284]))                          )
                        (reparse-symbol namespacesubparts) [10448 11287]))                  
                :type "namespace")
                nil [970 11290]))          
      :file "PostOrderIterator.h"
      :pointmax 11353
      :fsize 11352
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 10859 . 10860) (symbol 10840 . 10858) (USING 10834 . 10839) (punctuation 10781 . 10782) (symbol 10768 . 10780) (USING 10762 . 10767) (punctuation 10553 . 10554) (symbol 10545 . 10552) (USING 10539 . 10544) (punctuation 8487 . 8488) (punctuation 8486 . 8487) (symbol 8479 . 8486) (punctuation 8478 . 8479) (punctuation 8477 . 8478) (punctuation 8476 . 8477) (symbol 8475 . 8476) (punctuation 8474 . 8475) (symbol 8463 . 8474) (TYPENAME 8454 . 8462) (punctuation 8453 . 8454) (symbol 8450 . 8453) (punctuation 8449 . 8450) (punctuation 8448 . 8449) (symbol 8445 . 8448) (punctuation 8443 . 8444) (symbol 8435 . 8442) (CLASS 8429 . 8434) (punctuation 8427 . 8428) (symbol 8426 . 8427) (CLASS 8420 . 8425) (punctuation 8419 . 8420) (TEMPLATE 8410 . 8418) (punctuation 7807 . 7808) (symbol 7802 . 7807) (punctuation 7800 . 7801) (symbol 7791 . 7799) (BOOL 7786 . 7790) (punctuation 7774 . 7775) (punctuation 7773 . 7774) (symbol 7766 . 7773) (punctuation 7765 . 7766) (punctuation 7764 . 7765) (punctuation 7763 . 7764) (symbol 7762 . 7763) (punctuation 7761 . 7762) (symbol 7750 . 7761) (TYPENAME 7741 . 7749) (punctuation 7740 . 7741) (symbol 7737 . 7740) (punctuation 7736 . 7737) (punctuation 7735 . 7736) (symbol 7732 . 7735) (punctuation 7730 . 7731) (symbol 7722 . 7729) (CLASS 7716 . 7721) (punctuation 7714 . 7715) (symbol 7713 . 7714) (CLASS 7707 . 7712) (punctuation 7706 . 7707) (TEMPLATE 7697 . 7705) (punctuation 6993 . 6994) (punctuation 6992 . 6993) (symbol 6985 . 6992) (punctuation 6984 . 6985) (punctuation 6983 . 6984) (punctuation 6982 . 6983) (symbol 6981 . 6982) (punctuation 6980 . 6981) (symbol 6969 . 6980) (TYPENAME 6960 . 6968) (punctuation 6959 . 6960) (symbol 6956 . 6959) (punctuation 6955 . 6956) (punctuation 6954 . 6955) (symbol 6951 . 6954) (punctuation 6949 . 6950) (symbol 6941 . 6948) (CLASS 6935 . 6940) (punctuation 6933 . 6934) (symbol 6932 . 6933) (CLASS 6926 . 6931) (punctuation 6925 . 6926) (TEMPLATE 6916 . 6924) (punctuation 4462 . 4463) (DEFAULT 4455 . 4462) (punctuation 4453 . 4454) (semantic-list 4450 . 4452) (symbol 4439 . 4450) (punctuation 4024 . 4025) (symbol 4014 . 4023) (USING 4008 . 4013) (punctuation 3982 . 3983) (symbol 3974 . 3981) (USING 3968 . 3973) (punctuation 3954 . 3955) (punctuation 3953 . 3954) (symbol 3942 . 3952) (punctuation 3940 . 3941) (symbol 3930 . 3939) (USING 3924 . 3929) (punctuation 3920 . 3921) (punctuation 3919 . 3920) (symbol 3908 . 3918) (punctuation 3906 . 3907) (symbol 3898 . 3905) (USING 3892 . 3897) (punctuation 3872 . 3873) (symbol 3856 . 3871) (USING 3850 . 3855) (punctuation 3824 . 3825) (symbol 3813 . 3823) (USING 3807 . 3812) (punctuation 3776 . 3777) (symbol 3758 . 3775) (USING 3752 . 3757) (punctuation 3670 . 3671) (punctuation 3669 . 3670) (symbol 3663 . 3669) (punctuation 3662 . 3663) (symbol 3651 . 3662) (punctuation 3649 . 3650) (symbol 3646 . 3648) (CLASS 3640 . 3645) (punctuation 3638 . 3639) (symbol 3633 . 3638) (punctuation 3631 . 3632) (symbol 3620 . 3630) (BOOL 3615 . 3619) (punctuation 3603 . 3604) (punctuation 3602 . 3603) (number 3601 . 3602) (punctuation 3599 . 3600) (symbol 3592 . 3599) (punctuation 3591 . 3592) (punctuation 3590 . 3591) (punctuation 3589 . 3590) (symbol 3583 . 3589) (punctuation 3582 . 3583) (symbol 3571 . 3582) (TYPENAME 3562 . 3570) (punctuation 3561 . 3562) (symbol 3550 . 3561) (punctuation 3548 . 3549) (symbol 3540 . 3547) (CLASS 3534 . 3539) (punctuation 3522 . 3523) (symbol 3516 . 3522) (CLASS 3510 . 3515) (punctuation 3509 . 3510) (TEMPLATE 3500 . 3508))
      :lexical-table 
        '(("LLVM_ADT_POSTORDERITERATOR_H")
          )
)
    (semanticdb-table "semanticdb-table-15556140c208"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_HASHING_H" variable (:constant-flag t) nil [2483 2501])
            ("llvm/Support/DataTypes.h" include nil nil [2503 2538])
            ("llvm/Support/ErrorHandling.h" include nil nil [2539 2578])
            ("llvm/Support/SwapByteOrder.h" include nil nil [2579 2618])
            ("llvm/Support/type_traits.h" include nil nil [2619 2656])
            ("algorithm" include (:system-flag t) nil [2657 2677])
            ("cassert" include (:system-flag t) nil [2678 2696])
            ("cstring" include (:system-flag t) nil [2697 2715])
            ("string" include (:system-flag t) nil [2716 2733])
            ("tuple" include (:system-flag t) nil [2734 2750])
            ("utility" include (:system-flag t) nil [2751 2769])
            ("llvm" type
               (:members 
                  ( ("DenseMapInfo" type
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("Enable" type (:type "class") nil nil))                          
                        :type "struct"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [2788 2847])
                    ("hash_code" type
                       (:members 
                          ( ("value" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3378 3391])
                            ("public" label nil (reparse-symbol classsubparts) [3393 3400])
                            ("hash_code" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("value" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3585 3598]))                                  
                                :type ("hash_code" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3575 3616])
                            ("size_t" function
                               (:methodconst-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [3702 3734])
                            ("==" function
                               (:operator-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("lhs" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("hash_code" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3761 3782])
                                    ("rhs" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("hash_code" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3783 3804]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [3738 3845])
                            ("!=" function
                               (:operator-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("lhs" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("hash_code" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3871 3892])
                                    ("rhs" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("hash_code" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3893 3914]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [3848 3955])
                            ("hash_value" function
                               (:typemodifiers ("friend")
                                :arguments 
                                  ( ("code" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("hash_code" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4047 4069]))                                  
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4022 4092]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [3358 4095])
                    ("hash_value" function
                       (:prototype-flag t
                        :arguments 
                          ( ("value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4576 4584]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [4565 4585])
                    ("hash_value" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("hash_code" type (:type "class") nil nil)
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4752 4765]))                          
                        :prototype-flag t)
                        (reparse-symbol namespacesubparts) [4709 4766])
                    ("hash_value" function
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("U" type (:type "class") nil nil))                          
                        :type ("hash_code" type (:type "class") nil nil)
                        :arguments 
                          ( ("arg" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::pair" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("U" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [4870 4897]))                          
                        :prototype-flag t)
                        (reparse-symbol namespacesubparts) [4815 4898])
                    ("hash_value" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable
                               (:constant-flag t
                                :type ("std::tuple" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4984 5001])
                            ("" variable (:type ("Ts" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5001 5004])
                            ("" variable (:type ("arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5009 5013]))                          
                        :type ("hash_code" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [4963 5014])
                    ("hash_value" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("hash_code" type (:type "class") nil nil)
                        :arguments 
                          ( ("arg" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::basic_string" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [5106 5138]))                          
                        :prototype-flag t)
                        (reparse-symbol namespacesubparts) [5063 5139])
                    ("set_fixed_execution_hash_seed" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fixed_value" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5995 6016]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [5960 6017])
                    ("hashing" type
                       (:members 
                          ( ("detail" type
                               (:members 
                                  ( ("fetch64" function
                                       (:typemodifiers ("inline")
                                        :arguments 
                                          ( ("p" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [6308 6322]))                                          
                                        :type ("uint64_t" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [6284 6460])
                                    ("fetch32" function
                                       (:typemodifiers ("inline")
                                        :arguments 
                                          ( ("p" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [6486 6500]))                                          
                                        :type ("uint32_t" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [6462 6638])
                                    ("k0" variable
                                       (:default-value "0xc3a5c85c97cb3127ULL"
                                        :type ("uint64_t" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [6713 6749])
                                    ("k1" variable
                                       (:default-value "0xb492b66fbe98f273ULL"
                                        :type ("uint64_t" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [6767 6803])
                                    ("k2" variable
                                       (:default-value "0x9ae16a3b2f90404fULL"
                                        :type ("uint64_t" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [6821 6857])
                                    ("k3" variable
                                       (:default-value "0xc949d7c7509e6557ULL"
                                        :type ("uint64_t" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [6875 6911])
                                    ("rotate" function
                                       (:typemodifiers ("inline")
                                        :arguments 
                                          ( ("val" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7070 7083])
                                            ("shift" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7084 7097]))                                          
                                        :type ("uint64_t" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [7047 7235])
                                    ("shift_mix" function
                                       (:typemodifiers ("inline")
                                        :arguments 
                                          ( ("val" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7263 7276]))                                          
                                        :type ("uint64_t" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [7237 7308])
                                    ("hash_16_bytes" function
                                       (:typemodifiers ("inline")
                                        :arguments 
                                          ( ("low" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7340 7353])
                                            ("high" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7354 7368]))                                          
                                        :type ("uint64_t" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [7310 7580])
                                    ("hash_1to3_bytes" function
                                       (:typemodifiers ("inline")
                                        :arguments 
                                          ( ("s" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [7614 7628])
                                            ("len" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7629 7640])
                                            ("seed" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7641 7655]))                                          
                                        :type ("uint64_t" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [7582 7933])
                                    ("hash_4to8_bytes" function
                                       (:typemodifiers ("inline")
                                        :arguments 
                                          ( ("s" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [7967 7981])
                                            ("len" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7982 7993])
                                            ("seed" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7994 8008]))                                          
                                        :type ("uint64_t" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [7935 8108])
                                    ("hash_9to16_bytes" function
                                       (:typemodifiers ("inline")
                                        :arguments 
                                          ( ("s" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [8143 8157])
                                            ("len" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8158 8169])
                                            ("seed" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8170 8184]))                                          
                                        :type ("uint64_t" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [8110 8312])
                                    ("hash_17to32_bytes" function
                                       (:typemodifiers ("inline")
                                        :arguments 
                                          ( ("s" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [8348 8362])
                                            ("len" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8363 8374])
                                            ("seed" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8375 8389]))                                          
                                        :type ("uint64_t" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [8314 8675])
                                    ("hash_33to64_bytes" function
                                       (:typemodifiers ("inline")
                                        :arguments 
                                          ( ("s" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [8711 8725])
                                            ("len" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8726 8737])
                                            ("seed" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8738 8752]))                                          
                                        :type ("uint64_t" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [8677 9418])
                                    ("hash_short" function
                                       (:typemodifiers ("inline")
                                        :arguments 
                                          ( ("s" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [9447 9461])
                                            ("length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9462 9476])
                                            ("seed" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9477 9491]))                                          
                                        :type ("uint64_t" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [9420 9887])
                                    ("hash_state" type
                                       (:members 
                                          ( ("h0" variable
                                               (:default-value "0"
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [10077 10141])
                                            ("h1" variable
                                               (:default-value "0"
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [10077 10141])
                                            ("h2" variable
                                               (:default-value "0"
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [10077 10141])
                                            ("h3" variable
                                               (:default-value "0"
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [10077 10141])
                                            ("h4" variable
                                               (:default-value "0"
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [10077 10141])
                                            ("h5" variable
                                               (:default-value "0"
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [10077 10141])
                                            ("h6" variable
                                               (:default-value "0"
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [10077 10141])
                                            ("create" function
                                               (:typemodifiers ("static")
                                                :arguments 
                                                  ( ("s" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type "char")
                                                        (reparse-symbol arg-sub-list) [10330 10344])
                                                    ("seed" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10345 10359]))                                                  
                                                :type ("hash_state" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [10305 10578])
                                            ("mix_32_bytes" function
                                               (:typemodifiers ("static")
                                                :arguments 
                                                  ( ("s" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type "char")
                                                        (reparse-symbol arg-sub-list) [10736 10750])
                                                    ("a" variable
                                                       (:reference 1
                                                        :type ("uint64_t" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [10751 10763])
                                                    ("b" variable
                                                       (:reference 1
                                                        :type ("uint64_t" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [10764 10776]))                                                  
                                                :type "void")
                                                (reparse-symbol classsubparts) [10711 10971])
                                            ("mix" function
                                               (:arguments 
                                                  ( ("s" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type "char")
                                                        (reparse-symbol arg-sub-list) [11127 11141]))                                                  
                                                :type "void")
                                                (reparse-symbol classsubparts) [11118 11509])
                                            ("finalize" function
                                               (:arguments 
                                                  ( ("length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11643 11657]))                                                  
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [11625 11816]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [10055 11819])
                                    ("fixed_seed_override" variable
                                       (:typemodifiers ("extern")
                                        :type ("uint64_t" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [12054 12090])
                                    ("get_execution_seed" function
                                       (:typemodifiers ("inline")
                                        :type ("uint64_t" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [12092 12637])
                                    ("is_hashable_data" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("std::integral_constant" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [13388 13626])
                                    ("is_hashable_data" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil)
                                            ("U" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("std::integral_constant" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :template-specifier 
                                          ( ("std::pair" type (:template-specifier 
                                              ( ("T" type nil nil nil)
                                                ("U" type nil nil nil))                                              ) nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [13923 14252])
                                    ("get_hashable_data" function
                                       (:arguments 
                                          ( ("value" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [14467 14482]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [14449 14502])
                                    ("get_hashable_data" function
                                       (:arguments 
                                          ( ("value" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [14759 14774]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [14741 14834])
                                    ("store_and_advance" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "bool"
                                        :arguments 
                                          ( ("" variable
                                               (:pointer 1
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [15258 15265])
                                            ("" variable (:type ("buffer_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15265 15276])
                                            ("buffer_end" variable
                                               (:pointer 1
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [15277 15294])
                                            ("value" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [15295 15310])
                                            ("offset" variable
                                               (:default-value "0"
                                                :type ("size_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [15334 15351]))                                          )
                                        (reparse-symbol namespacesubparts) [15213 15629])
                                    ("hash_combine_range_impl" function
                                       (:template 
                                          ( ("InputIteratorT" type (:type "class") nil nil))                                          
                                        :type ("hash_code" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("first" variable (:type ("InputIteratorT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15989 16010])
                                            ("last" variable (:type ("InputIteratorT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16011 16031]))                                          )
                                        (reparse-symbol namespacesubparts) [15920 17263])
                                    ("hash_combine_range_impl" function
                                       (:arguments 
                                          ( ("first" variable
                                               (:pointer 1
                                                :type ("ValueT" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [17874 17888])
                                            ("last" variable
                                               (:pointer 1
                                                :type ("ValueT" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [17889 17902]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [17850 18484]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [6264 18487]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [6244 18509])
                    ("hash_combine_range" function
                       (:template 
                          ( ("InputIteratorT" type (:type "class") nil nil))                          
                        :type ("hash_code" type (:type "class") nil nil)
                        :arguments 
                          ( ("first" variable (:type ("InputIteratorT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18905 18926])
                            ("last" variable (:type ("InputIteratorT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18927 18947]))                          )
                        (reparse-symbol namespacesubparts) [18841 19023])
                    ("hashing" type
                       (:members 
                          ( ("detail" type
                               (:members 
                                  ( ("hash_combine_recursive_helper" type
                                       (:members 
                                          ( ("buffer" variable
                                               (:dereference 1
                                                :default-value "{}"
                                                :type "char")
                                                (reparse-symbol classsubparts) [19509 19530])
                                            ("state" variable (:type ("hash_state" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19533 19550])
                                            ("seed" variable
                                               (:constant-flag t
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [19553 19573])
                                            ("public" label nil (reparse-symbol classsubparts) [19575 19582])
                                            ("hash_combine_recursive_helper" function
                                               (:constructor-flag t
                                                :type ("hash_combine_recursive_helper" type (:type "struct") nil nil))
                                                (reparse-symbol classsubparts) [19752 19819])
                                            ("combine_data" function
                                               (:template 
                                                  ( ("T" type (:type "class") nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("length" variable
                                                       (:reference 1
                                                        :type ("size_t" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [20224 20239])
                                                    ("buffer_ptr" variable
                                                       (:pointer 1
                                                        :type "char")
                                                        (reparse-symbol arg-sub-list) [20240 20257])
                                                    ("buffer_end" variable
                                                       (:pointer 1
                                                        :type "char")
                                                        (reparse-symbol arg-sub-list) [20258 20275])
                                                    ("data" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20276 20283]))                                                  
                                                :pointer 1)
                                                (reparse-symbol classsubparts) [20181 21666])
                                            ("combine" function
                                               (:arguments 
                                                  ( ("length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21880 21894])
                                                    ("buffer_ptr" variable
                                                       (:pointer 1
                                                        :type "char")
                                                        (reparse-symbol arg-sub-list) [21895 21912])
                                                    ("buffer_end" variable
                                                       (:pointer 1
                                                        :type "char")
                                                        (reparse-symbol arg-sub-list) [21913 21930])
                                                    ("arg" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("T" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [21951 21964])
                                                    ("" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("Ts" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [21965 21976])
                                                    ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21978 21983]))                                                  
                                                :type ("hash_code" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [21862 22175])
                                            ("combine" function
                                               (:arguments 
                                                  ( ("length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22432 22446])
                                                    ("buffer_ptr" variable
                                                       (:pointer 1
                                                        :type "char")
                                                        (reparse-symbol arg-sub-list) [22447 22464])
                                                    ("buffer_end" variable
                                                       (:pointer 1
                                                        :type "char")
                                                        (reparse-symbol arg-sub-list) [22465 22482]))                                                  
                                                :type ("hash_code" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [22414 23159]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [19468 23162]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [19090 23165]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [19070 23187])
                    ("hash_combine" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Ts" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [23849 23860])
                            ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23862 23867]))                          
                        :type ("hash_code" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [23826 24066])
                    ("hashing" type
                       (:members 
                          ( ("detail" type
                               (:members 
                                  ( ("hash_integer_value" function
                                       (:typemodifiers ("inline")
                                        :arguments 
                                          ( ("value" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24498 24513]))                                          
                                        :type ("hash_code" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [24462 24779]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [24176 24782]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [24156 24804])
                    ("hash_value" function
                       (:arguments 
                          ( ("value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25029 25037]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [25018 25132])
                    ("hash_value" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("hash_code" type (:type "class") nil nil)
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25287 25300]))                          )
                        (reparse-symbol namespacesubparts) [25244 25397])
                    ("hash_value" function
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("U" type (:type "class") nil nil))                          
                        :type ("hash_code" type (:type "class") nil nil)
                        :arguments 
                          ( ("arg" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::pair" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("U" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [25564 25591]))                          )
                        (reparse-symbol namespacesubparts) [25509 25641])
                    ("hashing" type
                       (:members 
                          ( ("detail" type
                               (:members 
                                  ( ("hash_value_tuple_helper" function
                                       (:arguments 
                                          ( ("" variable
                                               (:constant-flag t
                                                :type ("std::tuple" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25847 25864])
                                            ("" variable (:type ("Ts" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25864 25867])
                                            ("" variable (:type ("arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25872 25876])
                                            ("" variable (:type ("std::index_sequence" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25911 25931])
                                            ("" variable (:type ("Indices" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25931 25939]))                                          
                                        :type ("hash_code" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [25813 25997]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [25743 26000]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [25723 26022])
                    ("hash_value" function
                       (:arguments 
                          ( ("" variable
                               (:constant-flag t
                                :type ("std::tuple" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [26092 26109])
                            ("" variable (:type ("Ts" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26109 26112])
                            ("" variable (:type ("arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26117 26121]))                          
                        :type ("hash_code" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [26071 26295])
                    ("hash_value" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("hash_code" type (:type "class") nil nil)
                        :arguments 
                          ( ("arg" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::basic_string" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [26450 26482]))                          )
                        (reparse-symbol namespacesubparts) [26407 26539])
                    ("DenseMapInfo" type
                       (:type "struct"
                        :members 
                          ( ("getEmptyKey" function
                               (:typemodifiers ("static" "inline")
                                :type ("hash_code" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [26594 26657])
                            ("getTombstoneKey" function
                               (:typemodifiers ("static" "inline")
                                :type ("hash_code" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [26660 26727])
                            ("getHashValue" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("val" variable (:type ("hash_code" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26759 26773]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [26730 26789])
                            ("isEqual" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("LHS" variable (:type ("hash_code" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26812 26826])
                                    ("RHS" variable (:type ("hash_code" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26827 26841]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [26792 26864]))                          
                        :template-specifier 
                          ( ("hash_code" type nil nil nil)
                            ("void" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [26541 26867]))                  
                :type "namespace")
                nil [2771 26870]))          
      :file "Hashing.h"
      :pointmax 26897
      :fsize 26896
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 26116 . 26117) (punctuation 26114 . 26115) (punctuation 26113 . 26114) (punctuation 26112 . 26113) (punctuation 26111 . 26112) (punctuation 26108 . 26109) (punctuation 26069 . 26070) (symbol 26067 . 26069) (punctuation 26065 . 26066) (punctuation 26064 . 26065) (punctuation 26063 . 26064) (TYPENAME 26055 . 26063) (punctuation 26054 . 26055) (TEMPLATE 26045 . 26053) (punctuation 25941 . 25942) (punctuation 25940 . 25941) (punctuation 25939 . 25940) (punctuation 25938 . 25939) (punctuation 25930 . 25931) (punctuation 25871 . 25872) (punctuation 25869 . 25870) (punctuation 25868 . 25869) (punctuation 25867 . 25868) (punctuation 25866 . 25867) (punctuation 25863 . 25864) (punctuation 25811 . 25812) (symbol 25804 . 25811) (punctuation 25802 . 25803) (punctuation 25801 . 25802) (punctuation 25800 . 25801) (symbol 25794 . 25800) (punctuation 25793 . 25794) (punctuation 25792 . 25793) (symbol 25789 . 25792) (punctuation 25787 . 25788) (symbol 25785 . 25787) (punctuation 25783 . 25784) (punctuation 25782 . 25783) (punctuation 25781 . 25782) (TYPENAME 25773 . 25781) (punctuation 25772 . 25773) (TEMPLATE 25763 . 25771) (punctuation 25016 . 25017) (symbol 25007 . 25016) (punctuation 25005 . 25006) (symbol 25000 . 25005) (punctuation 24999 . 25000) (punctuation 24998 . 24999) (punctuation 24997 . 24998) (symbol 24996 . 24997) (punctuation 24995 . 24996) (symbol 24976 . 24995) (punctuation 24975 . 24976) (symbol 24964 . 24975) (punctuation 24963 . 24964) (punctuation 24962 . 24963) (symbol 24959 . 24962) (punctuation 24957 . 24958) (symbol 24956 . 24957) (TYPENAME 24947 . 24955) (punctuation 24946 . 24947) (TEMPLATE 24937 . 24945) (punctuation 23861 . 23862) (punctuation 23860 . 23861) (punctuation 23859 . 23860) (punctuation 23824 . 23825) (symbol 23822 . 23824) (punctuation 23821 . 23822) (punctuation 23820 . 23821) (punctuation 23819 . 23820) (TYPENAME 23810 . 23818) (punctuation 23809 . 23810) (TEMPLATE 23800 . 23808) (punctuation 21977 . 21978) (punctuation 21976 . 21977) (punctuation 21975 . 21976) (punctuation 21858 . 21859) (symbol 21856 . 21858) (punctuation 21855 . 21856) (punctuation 21854 . 21855) (punctuation 21853 . 21854) (TYPENAME 21844 . 21852) (punctuation 21842 . 21843) (symbol 21841 . 21842) (TYPENAME 21832 . 21840) (punctuation 21831 . 21832) (TEMPLATE 21822 . 21830) (punctuation 17848 . 17849) (symbol 17839 . 17848) (punctuation 17837 . 17838) (symbol 17832 . 17837) (punctuation 17831 . 17832) (punctuation 17830 . 17831) (punctuation 17829 . 17830) (symbol 17823 . 17829) (punctuation 17822 . 17823) (symbol 17806 . 17822) (punctuation 17805 . 17806) (symbol 17794 . 17805) (punctuation 17793 . 17794) (punctuation 17792 . 17793) (symbol 17789 . 17792) (punctuation 17787 . 17788) (symbol 17781 . 17787) (TYPENAME 17772 . 17780) (punctuation 17771 . 17772) (TEMPLATE 17762 . 17770) (punctuation 15264 . 15265) (punctuation 14739 . 14740) (symbol 14733 . 14739) (punctuation 14731 . 14732) (symbol 14726 . 14731) (punctuation 14725 . 14726) (punctuation 14724 . 14725) (punctuation 14723 . 14724) (symbol 14722 . 14723) (punctuation 14721 . 14722) (symbol 14705 . 14721) (punctuation 14704 . 14705) (punctuation 14703 . 14704) (symbol 14692 . 14703) (punctuation 14691 . 14692) (punctuation 14690 . 14691) (symbol 14687 . 14690) (punctuation 14685 . 14686) (symbol 14684 . 14685) (TYPENAME 14675 . 14683) (punctuation 14674 . 14675) (TEMPLATE 14665 . 14673) (punctuation 14447 . 14448) (symbol 14446 . 14447) (punctuation 14444 . 14445) (symbol 14439 . 14444) (punctuation 14438 . 14439) (punctuation 14437 . 14438) (punctuation 14436 . 14437) (symbol 14435 . 14436) (punctuation 14434 . 14435) (symbol 14418 . 14434) (punctuation 14417 . 14418) (symbol 14406 . 14417) (punctuation 14405 . 14406) (punctuation 14404 . 14405) (symbol 14401 . 14404) (punctuation 14399 . 14400) (symbol 14398 . 14399) (TYPENAME 14389 . 14397) (punctuation 14388 . 14389) (TEMPLATE 14379 . 14387) (symbol 6865 . 6874) (STATIC 6858 . 6864) (symbol 6811 . 6820) (STATIC 6804 . 6810) (symbol 6757 . 6766) (STATIC 6750 . 6756) (symbol 6703 . 6712) (STATIC 6696 . 6702) (punctuation 5008 . 5009) (punctuation 5006 . 5007) (punctuation 5005 . 5006) (punctuation 5004 . 5005) (punctuation 5003 . 5004) (punctuation 5000 . 5001) (punctuation 4961 . 4962) (symbol 4959 . 4961) (punctuation 4957 . 4958) (punctuation 4956 . 4957) (punctuation 4955 . 4956) (TYPENAME 4947 . 4955) (punctuation 4946 . 4947) (TEMPLATE 4937 . 4945) (punctuation 4563 . 4564) (symbol 4554 . 4563) (punctuation 4552 . 4553) (symbol 4547 . 4552) (punctuation 4546 . 4547) (punctuation 4545 . 4546) (punctuation 4544 . 4545) (symbol 4543 . 4544) (punctuation 4542 . 4543) (symbol 4523 . 4542) (punctuation 4522 . 4523) (symbol 4511 . 4522) (punctuation 4510 . 4511) (punctuation 4509 . 4510) (symbol 4506 . 4509) (punctuation 4504 . 4505) (symbol 4503 . 4504) (TYPENAME 4494 . 4502) (punctuation 4493 . 4494) (TEMPLATE 4484 . 4492) (OPERATOR 3693 . 3701) (punctuation 3514 . 3515) (DEFAULT 3507 . 3514) (punctuation 3505 . 3506) (semantic-list 3502 . 3504) (symbol 3493 . 3502))
      :lexical-table 
        '(("LLVM_ADT_HASHING_H")
          )
)
    (semanticdb-table "semanticdb-table-155560d2a504"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_EPOCHTRACKER_H" variable (:constant-flag t) nil [696 719])
            ("llvm/Config/abi-breaking.h" include nil nil [721 758])
            ("cstdint" include (:system-flag t) nil [760 778])
            ("llvm" type
               (:members 
                  ( ("DebugEpochBase" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [2958 2965])
                            ("incrementEpoch" function (:type "void") (reparse-symbol classsubparts) [2968 2992])
                            ("HandleBase" type
                               (:members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [3017 3024])
                                    ("HandleBase" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("DebugEpochBase" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3077 3100]))                                          
                                        :type ("HandleBase" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [3066 3103])
                                    ("isHandleInSync" function
                                       (:methodconst-flag t
                                        :type "bool")
                                        (reparse-symbol classsubparts) [3108 3152])
                                    ("getEpochAddress" function
                                       (:methodconst-flag t
                                        :pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [3157 3212]))                                  
                                :type "class")
                                (reparse-symbol classsubparts) [2996 3217]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [2935 3220]))                  
                :type "namespace")
                nil [780 3266]))          
      :file "EpochTracker.h"
      :pointmax 3293
      :fsize 3292
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((EXPLICIT 3057 . 3065) (punctuation 3051 . 3052) (DEFAULT 3044 . 3051) (punctuation 3042 . 3043) (semantic-list 3039 . 3041) (symbol 3029 . 3039) (EXPLICIT 3057 . 3065) (punctuation 3051 . 3052) (DEFAULT 3044 . 3051) (punctuation 3042 . 3043) (semantic-list 3039 . 3041) (symbol 3029 . 3039))
      :lexical-table 
        '(("LLVM_ADT_EPOCHTRACKER_H")
          )
)
    (semanticdb-table "semanticdb-table-155560ad3372"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_TINYPTRVECTOR_H" variable (:constant-flag t) nil [412 436])
            ("llvm/ADT/ArrayRef.h" include nil nil [438 468])
            ("llvm/ADT/None.h" include nil nil [469 495])
            ("llvm/ADT/PointerUnion.h" include nil nil [496 530])
            ("llvm/ADT/SmallVector.h" include nil nil [531 564])
            ("cassert" include (:system-flag t) nil [565 583])
            ("cstddef" include (:system-flag t) nil [584 602])
            ("iterator" include (:system-flag t) nil [603 622])
            ("type_traits" include (:system-flag t) nil [623 645])
            ("llvm" type
               (:members 
                  ( ("TinyPtrVector" type
                       (:template 
                          ( ("EltTy" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [969 976])
                            ("SmallVector" variable (:type "int") (reparse-symbol classsubparts) [993 1015])
                            ("VecTy::value_type" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [1037 1064])
                            ("PointerUnion" variable (:type "int") (reparse-symbol classsubparts) [1343 1372])
                            ("private" label nil (reparse-symbol classsubparts) [1374 1382])
                            ("Val" variable (:type ("PtrUnion" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1385 1398])
                            ("public" label nil (reparse-symbol classsubparts) [1400 1407])
                            ("TinyPtrVector" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [1440 1530])
                            ("TinyPtrVector" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TinyPtrVector" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1548 1573]))                                  
                                :type ("TinyPtrVector" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1534 1673])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TinyPtrVector" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1702 1727]))                                  
                                :type ("TinyPtrVector" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1677 2434])
                            ("TinyPtrVector" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("TinyPtrVector" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2452 2468])
                                    ("" variable (:type ("RHS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2468 2472]))                                  
                                :type ("TinyPtrVector" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2438 2523])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("TinyPtrVector" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2552 2568])
                                    ("" variable (:type ("RHS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2568 2572]))                                  
                                :type ("TinyPtrVector" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2527 3151])
                            ("TinyPtrVector" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("IL" variable (:type ("std::initializer_list" type
                                         (:template-specifier 
                                            ( ("EltTy" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [3169 3201]))                                  
                                :type ("TinyPtrVector" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3155 3395])
                            ("TinyPtrVector" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Elts" variable (:type ("ArrayRef" type
                                         (:template-specifier 
                                            ( ("EltTy" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [3585 3606]))                                  
                                :type ("TinyPtrVector" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3571 3811])
                            ("TinyPtrVector" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Count" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3829 3842])
                                    ("Value" variable (:type ("EltTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3843 3855]))                                  
                                :type ("TinyPtrVector" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3815 4021])
                            ("ArrayRef" function
                               (:template-specifier 
                                  ( ("EltTy" type nil nil nil))                                  
                                :methodconst-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [4081 4260])
                            ("MutableArrayRef" function
                               (:template-specifier 
                                  ( ("EltTy" type nil nil nil))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [4327 4507])
                            ("ArrayRef" function
                               (:template-specifier 
                                  ( ("U" type nil nil nil))                                  
                                :methodconst-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [4747 4811])
                            ("empty" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [4815 5087])
                            ("size" function
                               (:methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [5091 5248])
                            ("std::reverse_iterator" variable (:type "int") (reparse-symbol classsubparts) [5345 5377])
                            ("std::reverse_iterator" variable (:type "int") (reparse-symbol classsubparts) [5411 5449])
                            ("begin" function (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5453 5593])
                            ("end" function (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5597 5746])
                            ("begin" function
                               (:methodconst-flag t
                                :type ("const_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5750 5854])
                            ("end" function
                               (:methodconst-flag t
                                :type ("const_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5858 5958])
                            ("rbegin" function (:type ("reverse_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5962 6023])
                            ("rend" function (:type ("reverse_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6026 6087])
                            ("rbegin" function
                               (:methodconst-flag t
                                :type ("const_reverse_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6091 6176])
                            ("rend" function
                               (:methodconst-flag t
                                :type ("const_reverse_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6180 6265])
                            ("[]" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("i" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [6286 6297]))                                  
                                :type ("EltTy" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6269 6657])
                            ("front" function
                               (:methodconst-flag t
                                :type ("EltTy" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6661 6848])
                            ("back" function
                               (:methodconst-flag t
                                :type ("EltTy" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6852 7037])
                            ("push_back" function
                               (:arguments 
                                  ( ("NewVal" variable (:type ("EltTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7056 7069]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [7041 7556])
                            ("pop_back" function (:type "void") (reparse-symbol classsubparts) [7560 7772])
                            ("clear" function (:type "void") (reparse-symbol classsubparts) [7776 8081])
                            ("erase" function
                               (:arguments 
                                  ( ("I" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8100 8111]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8085 8614])
                            ("erase" function
                               (:arguments 
                                  ( ("S" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8633 8644])
                                    ("E" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8645 8656]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8618 9053])
                            ("insert" function
                               (:arguments 
                                  ( ("I" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9073 9084])
                                    ("Elt" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("EltTy" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9085 9102]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9057 9637])
                            ("insert" function
                               (:template 
                                  ( ("ItTy" type (:type "class") nil nil))                                  
                                :type ("iterator" type (:type "class") nil nil)
                                :arguments 
                                  ( ("I" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9683 9694])
                                    ("From" variable (:type ("ItTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9695 9705])
                                    ("To" variable (:type ("ItTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9706 9714]))                                  )
                                (reparse-symbol classsubparts) [9641 10373]))                          )
                        (reparse-symbol namespacesubparts) [921 10376]))                  
                :type "namespace")
                nil [647 10379]))          
      :file "TinyPtrVector.h"
      :pointmax 10438
      :fsize 10437
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 5409 . 5410) (symbol 5386 . 5408) (USING 5380 . 5385) (punctuation 5343 . 5344) (symbol 5326 . 5342) (USING 5320 . 5325) (punctuation 5316 . 5317) (punctuation 5315 . 5316) (symbol 5309 . 5314) (CONST 5303 . 5308) (punctuation 5301 . 5302) (symbol 5286 . 5300) (USING 5280 . 5285) (punctuation 5276 . 5277) (punctuation 5275 . 5276) (symbol 5269 . 5274) (punctuation 5267 . 5268) (symbol 5258 . 5266) (USING 5252 . 5257) (OPERATOR 4738 . 4746) (punctuation 4734 . 4735) (symbol 4729 . 4734) (punctuation 4727 . 4728) (punctuation 4725 . 4726) (BOOL 4721 . 4725) (punctuation 4696 . 4697) (symbol 4691 . 4696) (punctuation 4690 . 4691) (punctuation 4689 . 4690) (punctuation 4688 . 4689) (punctuation 4687 . 4688) (symbol 4686 . 4687) (punctuation 4685 . 4686) (symbol 4677 . 4685) (punctuation 4675 . 4676) (punctuation 4674 . 4675) (symbol 4669 . 4674) (punctuation 4668 . 4669) (symbol 4660 . 4668) (punctuation 4659 . 4660) (symbol 4645 . 4659) (punctuation 4644 . 4645) (punctuation 4643 . 4644) (symbol 4640 . 4643) (punctuation 4639 . 4640) (symbol 4628 . 4639) (punctuation 4627 . 4628) (punctuation 4626 . 4627) (symbol 4623 . 4626) (punctuation 4615 . 4616) (symbol 4614 . 4615) (TYPENAME 4605 . 4613) (punctuation 4597 . 4598) (TEMPLATE 4588 . 4596) (OPERATOR 4318 . 4326) (OPERATOR 4072 . 4080) (EXPLICIT 3562 . 3570) (punctuation 2567 . 2568) (punctuation 2467 . 2468) (punctuation 1435 . 1436) (DEFAULT 1428 . 1435) (punctuation 1426 . 1427) (semantic-list 1423 . 1425) (symbol 1410 . 1423) (punctuation 1341 . 1342) (symbol 1332 . 1340) (USING 1326 . 1331) (punctuation 1035 . 1036) (symbol 1024 . 1034) (USING 1018 . 1023) (punctuation 991 . 992) (symbol 985 . 990) (USING 979 . 984))
      :lexical-table 
        '(("LLVM_ADT_TINYPTRVECTOR_H")
          )
)
    (semanticdb-table "semanticdb-table-1555620e2894"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_DENSEMAPINFO_H" variable (:constant-flag t) nil [566 589])
            ("cassert" include (:system-flag t) nil [591 609])
            ("cstddef" include (:system-flag t) nil [610 628])
            ("cstdint" include (:system-flag t) nil [629 647])
            ("tuple" include (:system-flag t) nil [648 664])
            ("utility" include (:system-flag t) nil [665 683])
            ("llvm" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("combineHashValue" function
                               (:typemodifiers ("static" "inline")
                                :arguments 
                                  ( ("a" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [837 848])
                                    ("b" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [849 860]))                                  
                                :type "unsigned int")
                                (reparse-symbol namespacesubparts) [797 1115]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [703 1118])
                    ("DenseMapInfo" type (:type "struct") (reparse-symbol namespacesubparts) [1526 1725])
                    ("DenseMapInfo" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("Log2MaxAlign" variable
                               (:default-value "12"
                                :type ("uintptr_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2389 2417])
                            ("getEmptyKey" function
                               (:pointer 1
                                :typemodifiers ("static" "inline")
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2421 2569])
                            ("getTombstoneKey" function
                               (:pointer 1
                                :typemodifiers ("static" "inline")
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2573 2725])
                            ("getHashValue" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("PtrVal" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2758 2774]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [2729 2875])
                            ("isEqual" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("LHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2899 2912])
                                    ("RHS" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2913 2926]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [2879 2949]))                          
                        :template-specifier 
                          ( ("T" type (:pointer 1) nil nil))                          )
                        (reparse-symbol namespacesubparts) [2063 2952])
                    ("DenseMapInfo" type
                       (:type "struct"
                        :members 
                          ( ("getEmptyKey" function
                               (:typemodifiers ("static" "inline")
                                :type "char")
                                (reparse-symbol classsubparts) [3030 3077])
                            ("getTombstoneKey" function
                               (:typemodifiers ("static" "inline")
                                :type "char")
                                (reparse-symbol classsubparts) [3080 3135])
                            ("getHashValue" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [3167 3183]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [3138 3205])
                            ("isEqual" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [3229 3245])
                                    ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [3246 3262]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [3209 3291]))                          
                        :template-specifier 
                          ( ("char" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [2989 3294])
                    ("DenseMapInfo" type
                       (:type "struct"
                        :members 
                          ( ("getEmptyKey" function
                               (:typemodifiers ("static" "inline")
                                :type "unsigned char")
                                (reparse-symbol classsubparts) [3391 3447])
                            ("getTombstoneKey" function
                               (:typemodifiers ("static" "inline")
                                :type "unsigned char")
                                (reparse-symbol classsubparts) [3450 3514])
                            ("getHashValue" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "unsigned char")
                                        (reparse-symbol arg-sub-list) [3546 3571]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [3517 3593])
                            ("isEqual" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "unsigned char")
                                        (reparse-symbol arg-sub-list) [3617 3642])
                                    ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "unsigned char")
                                        (reparse-symbol arg-sub-list) [3643 3668]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [3597 3697]))                          
                        :template-specifier 
                          ( ("unsigned char" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [3340 3700])
                    ("DenseMapInfo" type
                       (:type "struct"
                        :members 
                          ( ("getEmptyKey" function
                               (:typemodifiers ("static" "inline")
                                :type "unsigned short")
                                (reparse-symbol classsubparts) [3799 3860])
                            ("getTombstoneKey" function
                               (:typemodifiers ("static" "inline")
                                :type "unsigned short")
                                (reparse-symbol classsubparts) [3863 3932])
                            ("getHashValue" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "unsigned short")
                                        (reparse-symbol arg-sub-list) [3964 3990]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [3935 4012])
                            ("isEqual" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "unsigned short")
                                        (reparse-symbol arg-sub-list) [4036 4062])
                                    ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "unsigned short")
                                        (reparse-symbol arg-sub-list) [4063 4089]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [4016 4118]))                          
                        :template-specifier 
                          ( ("unsigned short" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [3747 4121])
                    ("DenseMapInfo" type
                       (:type "struct"
                        :members 
                          ( ("getEmptyKey" function
                               (:typemodifiers ("static" "inline")
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [4211 4263])
                            ("getTombstoneKey" function
                               (:typemodifiers ("static" "inline")
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [4266 4326])
                            ("getHashValue" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [4358 4378]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [4329 4400])
                            ("isEqual" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [4424 4444])
                                    ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [4445 4465]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [4404 4494]))                          
                        :template-specifier 
                          ( ("unsigned int" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [4166 4497])
                    ("DenseMapInfo" type
                       (:type "struct"
                        :members 
                          ( ("getEmptyKey" function
                               (:typemodifiers ("static" "inline")
                                :type "unsigned long")
                                (reparse-symbol classsubparts) [4593 4651])
                            ("getTombstoneKey" function
                               (:typemodifiers ("static" "inline")
                                :type "unsigned long")
                                (reparse-symbol classsubparts) [4654 4721])
                            ("getHashValue" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "unsigned long")
                                        (reparse-symbol arg-sub-list) [4754 4779]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [4725 4820])
                            ("isEqual" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "unsigned long")
                                        (reparse-symbol arg-sub-list) [4844 4869])
                                    ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "unsigned long")
                                        (reparse-symbol arg-sub-list) [4870 4895]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [4824 4924]))                          
                        :template-specifier 
                          ( ("unsigned long" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [4543 4927])
                    ("DenseMapInfo" type
                       (:type "struct"
                        :members 
                          ( ("getEmptyKey" function
                               (:typemodifiers ("static" "inline")
                                :type "unsigned long long")
                                (reparse-symbol classsubparts) [5033 5097])
                            ("getTombstoneKey" function
                               (:typemodifiers ("static" "inline")
                                :type "unsigned long long")
                                (reparse-symbol classsubparts) [5100 5175])
                            ("getHashValue" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "unsigned long long")
                                        (reparse-symbol arg-sub-list) [5208 5238]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [5179 5280])
                            ("isEqual" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "unsigned long long")
                                        (reparse-symbol arg-sub-list) [5304 5334])
                                    ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "unsigned long long")
                                        (reparse-symbol arg-sub-list) [5357 5387]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [5284 5416]))                          
                        :template-specifier 
                          ( ("unsigned long long" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [4978 5419])
                    ("DenseMapInfo" type
                       (:type "struct"
                        :members 
                          ( ("getEmptyKey" function
                               (:typemodifiers ("static" "inline")
                                :type "short")
                                (reparse-symbol classsubparts) [5500 5552])
                            ("getTombstoneKey" function
                               (:typemodifiers ("static" "inline")
                                :type "short")
                                (reparse-symbol classsubparts) [5555 5616])
                            ("getHashValue" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "short")
                                        (reparse-symbol arg-sub-list) [5648 5665]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [5619 5687])
                            ("isEqual" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "short")
                                        (reparse-symbol arg-sub-list) [5710 5727])
                                    ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "short")
                                        (reparse-symbol arg-sub-list) [5728 5745]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [5690 5768]))                          
                        :template-specifier 
                          ( ("short" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [5457 5771])
                    ("DenseMapInfo" type
                       (:type "struct"
                        :members 
                          ( ("getEmptyKey" function
                               (:typemodifiers ("static" "inline")
                                :type "int")
                                (reparse-symbol classsubparts) [5847 5901])
                            ("getTombstoneKey" function
                               (:typemodifiers ("static" "inline")
                                :type "int")
                                (reparse-symbol classsubparts) [5904 5967])
                            ("getHashValue" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "int")
                                        (reparse-symbol arg-sub-list) [5999 6014]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [5970 6048])
                            ("isEqual" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "int")
                                        (reparse-symbol arg-sub-list) [6072 6087])
                                    ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "int")
                                        (reparse-symbol arg-sub-list) [6088 6103]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [6052 6132]))                          
                        :template-specifier 
                          ( ("int" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [5807 6135])
                    ("DenseMapInfo" type
                       (:type "struct"
                        :members 
                          ( ("getEmptyKey" function
                               (:typemodifiers ("static" "inline")
                                :type "long")
                                (reparse-symbol classsubparts) [6213 6301])
                            ("getTombstoneKey" function
                               (:typemodifiers ("static" "inline")
                                :type "long")
                                (reparse-symbol classsubparts) [6305 6372])
                            ("getHashValue" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "long")
                                        (reparse-symbol arg-sub-list) [6405 6421]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [6376 6462])
                            ("isEqual" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "long")
                                        (reparse-symbol arg-sub-list) [6486 6502])
                                    ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "long")
                                        (reparse-symbol arg-sub-list) [6503 6519]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [6466 6548]))                          
                        :template-specifier 
                          ( ("long" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [6172 6551])
                    ("DenseMapInfo" type
                       (:type "struct"
                        :members 
                          ( ("getEmptyKey" function
                               (:typemodifiers ("static" "inline")
                                :type "long long")
                                (reparse-symbol classsubparts) [6639 6709])
                            ("getTombstoneKey" function
                               (:typemodifiers ("static" "inline")
                                :type "long long")
                                (reparse-symbol classsubparts) [6712 6789])
                            ("getHashValue" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "long long")
                                        (reparse-symbol arg-sub-list) [6822 6843]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [6793 6885])
                            ("isEqual" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "long long")
                                        (reparse-symbol arg-sub-list) [6909 6930])
                                    ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type "long long")
                                        (reparse-symbol arg-sub-list) [6953 6974]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [6889 7003]))                          
                        :template-specifier 
                          ( ("long long" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [6593 7006])
                    ("DenseMapInfo" type
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("U" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("std::pair" variable (:type "int") (reparse-symbol classsubparts) [7158 7174])
                            ("DenseMapInfo" variable (:type "int") (reparse-symbol classsubparts) [7195 7211])
                            ("DenseMapInfo" variable (:type "int") (reparse-symbol classsubparts) [7233 7249])
                            ("getEmptyKey" function
                               (:typemodifiers ("static" "inline")
                                :type ("Pair" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7253 7397])
                            ("getTombstoneKey" function
                               (:typemodifiers ("static" "inline")
                                :type ("Pair" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7401 7557])
                            ("getHashValue" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("PairVal" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Pair" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7590 7610]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [7561 7771])
                            ("isEqual" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Pair" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7795 7811])
                                    ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Pair" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7812 7828]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [7775 7945]))                          
                        :template-specifier 
                          ( ("std::pair" type (:template-specifier 
                              ( ("T" type nil nil nil)
                                ("U" type nil nil nil))                              ) nil nil))                          )
                        (reparse-symbol namespacesubparts) [7071 7948]))                  
                :type "namespace")
                nil [685 9654]))          
      :file "DenseMapInfo.h"
      :pointmax 9712
      :fsize 9711
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 9650 . 9651) (semantic-list 8079 . 9650) (punctuation 8077 . 8078) (punctuation 8076 . 8077) (punctuation 8075 . 8076) (punctuation 8074 . 8075) (punctuation 8073 . 8074) (symbol 8071 . 8073) (punctuation 8070 . 8071) (symbol 8065 . 8070) (punctuation 8064 . 8065) (punctuation 8063 . 8064) (symbol 8060 . 8063) (punctuation 8059 . 8060) (symbol 8047 . 8059) (STRUCT 8040 . 8046) (punctuation 8038 . 8039) (symbol 8036 . 8038) (punctuation 8034 . 8035) (punctuation 8033 . 8034) (punctuation 8032 . 8033) (TYPENAME 8024 . 8032) (punctuation 8023 . 8024) (TEMPLATE 8014 . 8022) (punctuation 7231 . 7232) (symbol 7220 . 7230) (USING 7214 . 7219) (punctuation 7193 . 7194) (symbol 7183 . 7192) (USING 7177 . 7182) (punctuation 7156 . 7157) (symbol 7151 . 7155) (USING 7145 . 7150) (symbol 2379 . 2388) (STATIC 2372 . 2378) (punctuation 1524 . 1525) (VOID 1520 . 1524) (punctuation 1518 . 1519) (symbol 1511 . 1517) (TYPENAME 1502 . 1510) (punctuation 1500 . 1501) (symbol 1499 . 1500) (TYPENAME 1490 . 1498) (punctuation 1489 . 1490) (TEMPLATE 1481 . 1489))
      :lexical-table 
        '(("LLVM_ADT_DENSEMAPINFO_H")
          )
)
    (semanticdb-table "semanticdb-table-1555622fe5e8"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_APFLOAT_H" variable (:constant-flag t) nil [651 669])
            ("llvm/ADT/APInt.h" include nil nil [671 698])
            ("llvm/ADT/ArrayRef.h" include nil nil [699 729])
            ("llvm/ADT/FloatingPointMode.h" include nil nil [730 769])
            ("llvm/Support/ErrorHandling.h" include nil nil [770 809])
            ("memory" include (:system-flag t) nil [810 827])
            ("APFLOAT_DISPATCH_ON_SEMANTICS" variable (:constant-flag t) nil [837 866])
            ("llvm" type
               (:members 
                  ( ("fltSemantics" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [1433 1453])
                    ("APSInt" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1454 1467])
                    ("StringRef" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1468 1484])
                    ("APFloat" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1485 1499])
                    ("raw_ostream" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1500 1518])
                    ("Expected" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [1520 1557])
                    ("SmallVectorImpl" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [1558 1602])
                    ("lostFraction" type
                       (:members 
                          ( ("lfExactlyZero" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [1822 1836])
                            ("lfLessThanHalf" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [1852 1867])
                            ("lfExactlyHalf" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [1900 1914])
                            ("lfMoreThanHalf" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [1930 1977]))                          
                        :type "enum")
                        (reparse-symbol namespacesubparts) [1770 1978])
                    ("APFloatBase" type
                       (:members 
                          ( ("integerPart" type
                               (:typedef ("APInt::WordType" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [6620 6656])
                            ("APInt::APINT_BITS_PER_WORD" variable (:type "int") (reparse-symbol classsubparts) [6704 6731])
                            ("ExponentType" type
                               (:typedef ("int32_t" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [6812 6841])
                            ("Semantics" type
                               (:members 
                                  ( ("S_IEEEhalf" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6913 6924])
                                    ("S_BFloat" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6929 6938])
                                    ("S_IEEEsingle" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6943 6956])
                                    ("S_IEEEdouble" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6961 6974])
                                    ("S_x87DoubleExtended" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [6979 6999])
                                    ("S_IEEEquad" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [7004 7015])
                                    ("S_PPCDoubleDouble" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [7020 7041]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [6892 7042])
                            ("EnumToSemantics" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :constant-flag t
                                :arguments 
                                  ( ("S" variable (:type ("Semantics" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7095 7107]))                                  
                                :type ("llvm::fltSemantics" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7046 7108])
                            ("SemanticsToEnum" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("Sem" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("llvm::fltSemantics" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7144 7174]))                                  
                                :type ("Semantics" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7111 7175])
                            ("LLVM_READNONE" variable (:type "int") (reparse-symbol classsubparts) [7217 7231])
                            ("LLVM_READNONE" variable (:type "int") (reparse-symbol classsubparts) [7270 7284])
                            ("LLVM_READNONE" variable (:type "int") (reparse-symbol classsubparts) [7327 7341])
                            ("LLVM_READNONE" variable (:type "int") (reparse-symbol classsubparts) [7384 7398])
                            ("LLVM_READNONE" variable (:type "int") (reparse-symbol classsubparts) [7439 7453])
                            ("LLVM_READNONE" variable (:type "int") (reparse-symbol classsubparts) [7501 7515])
                            ("LLVM_READNONE" variable (:type "int") (reparse-symbol classsubparts) [7565 7579])
                            ("LLVM_READNONE" variable (:type "int") (reparse-symbol classsubparts) [7719 7733])
                            ("cmpResult" type
                               (:members 
                                  ( ("cmpLessThan" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [7827 7839])
                                    ("cmpEqual" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [7844 7853])
                                    ("cmpGreaterThan" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [7858 7873])
                                    ("cmpUnordered" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [7878 7894]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [7806 7895])
                            ("llvm::RoundingMode" variable (:type "int") (reparse-symbol classsubparts) [7972 7991])
                            ("RoundingMode::NearestTiesToEven" variable (:type "int") (reparse-symbol classsubparts) [8095 8127])
                            ("RoundingMode::TowardPositive" variable (:type "int") (reparse-symbol classsubparts) [8179 8208])
                            ("RoundingMode::TowardNegative" variable (:type "int") (reparse-symbol classsubparts) [8260 8289])
                            ("RoundingMode::TowardZero" variable (:type "int") (reparse-symbol classsubparts) [8341 8366])
                            ("RoundingMode::NearestTiesToAway" variable (:type "int") (reparse-symbol classsubparts) [8469 8501])
                            ("opStatus" type
                               (:members 
                                  ( ("opOK" variable
                                       (:constant-flag t
                                        :default-value (8912 8916)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [8905 8916])
                                    ("opInvalidOp" variable
                                       (:constant-flag t
                                        :default-value (8936 8940)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [8922 8940])
                                    ("opDivByZero" variable
                                       (:constant-flag t
                                        :default-value (8960 8964)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [8946 8964])
                                    ("opOverflow" variable
                                       (:constant-flag t
                                        :default-value (8983 8987)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [8970 8987])
                                    ("opUnderflow" variable
                                       (:constant-flag t
                                        :default-value (9007 9011)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [8993 9011])
                                    ("opInexact" variable
                                       (:constant-flag t
                                        :default-value (9029 9033)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [9017 9033]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [8885 9038])
                            ("fltCategory" type
                               (:members 
                                  ( ("fcInfinity" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [9114 9125])
                                    ("fcNaN" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [9130 9136])
                                    ("fcNormal" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [9141 9150])
                                    ("fcZero" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [9155 9165]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [9091 9166])
                            ("uninitializedTag" type
                               (:members 
                                  ( ("uninitialized" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [9265 9282]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [9237 9283])
                            ("IlogbErrorKinds" type
                               (:members 
                                  ( ("IEK_Zero" variable
                                       (:constant-flag t
                                        :default-value (9370 9381)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [9359 9381])
                                    ("IEK_NaN" variable
                                       (:constant-flag t
                                        :default-value (9397 9404)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [9387 9404])
                                    ("IEK_Inf" variable
                                       (:constant-flag t
                                        :default-value (9420 9427)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [9410 9427]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [9332 9432])
                            ("semanticsPrecision" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("fltSemantics" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9475 9496]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [9436 9497])
                            ("semanticsMinExponent" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("fltSemantics" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9541 9562]))                                  
                                :type ("ExponentType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9500 9563])
                            ("semanticsMaxExponent" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("fltSemantics" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9607 9628]))                                  
                                :type ("ExponentType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9566 9629])
                            ("semanticsSizeInBits" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("fltSemantics" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9672 9693]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [9632 9694])
                            ("getSizeInBits" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("Sem" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("fltSemantics" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9820 9844]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [9790 9845]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [6597 9848])
                    ("detail" type
                       (:members 
                          ( ("APFloatBase" variable (:type "int") (reparse-symbol namespacesubparts) [9901 22580])
                            ("hash_value" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Arg" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("IEEEFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [22603 22624]))                                  
                                :type ("hash_code" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [22582 22625])
                            ("ilogb" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Arg" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("IEEEFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [22636 22657]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [22626 22658])
                            ("scalbn" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("X" variable (:type ("IEEEFloat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22676 22688])
                                    ("Exp" variable (:type "int") (reparse-symbol arg-sub-list) [22689 22697])
                                    ("" variable (:type ("IEEEFloat::roundingMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22698 22722]))                                  
                                :type ("IEEEFloat" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [22659 22723])
                            ("frexp" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("IEEEFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [22740 22761])
                                    ("Exp" variable
                                       (:reference 1
                                        :type "int")
                                        (reparse-symbol arg-sub-list) [22762 22771])
                                    ("RM" variable (:type ("IEEEFloat::roundingMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22772 22799]))                                  
                                :type ("IEEEFloat" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [22724 22800])
                            ("APFloatBase" variable (:type "int") (reparse-symbol namespacesubparts) [23108 26858])
                            ("hash_value" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("Arg" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("DoubleAPFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26881 26906]))                                  
                                :type ("hash_code" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [26860 26907]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [9850 26910])
                    ("APFloat" type
                       (:superclasses 
                          ( ("APFloatBase" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("IEEEFloat" type
                               (:typedef ("detail::IEEEFloat" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [27076 27112])
                            ("DoubleAPFloat" type
                               (:typedef ("detail::DoubleAPFloat" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [27115 27159])
                            ("static_assert" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("std::is_standard_layout::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27177 27219]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [27163 27224])
                            ("U" variable (:type ("Storage" type
                                 (:prototype t
                                  :type "union")
                                  nil nil)) (reparse-symbol classsubparts) [27228 29856])
                            ("Storage" type
                               (:members 
                                  ( ("semantics" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("fltSemantics" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [27248 27278])
                                    ("IEEE" variable (:type ("IEEEFloat" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27283 27298])
                                    ("Double" variable (:type ("DoubleAPFloat" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27303 27324])
                                    ("Storage" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("F" variable (:type ("IEEEFloat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27347 27359])
                                            ("S" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("fltSemantics" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27360 27382]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [27339 27383])
                                    ("Storage" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("F" variable (:type ("DoubleAPFloat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27405 27421])
                                            ("S" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("fltSemantics" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27422 27444]))                                          
                                        :type ("APFloat" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [27397 27523])
                                    ("Storage" function
                                       (:arguments 
                                          ( ("Semantics" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("fltSemantics" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27573 27603])
                                            ("" variable
                                               (:reference 1
                                                :type ("ArgTypes" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27604 27615])
                                            ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27619 27624]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [27565 27980])
                                    ("Storage" function
                                       (:destructor-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [27986 28258])
                                    ("Storage" function
                                       (:arguments 
                                          ( ("RHS" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Storage" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [28272 28291]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [28264 28587])
                                    ("Storage" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Storage" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [28601 28611])
                                            ("" variable (:type ("RHS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28611 28615]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [28593 28933])
                                    ("=" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("RHS" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Storage" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [28958 28977]))                                          
                                        :type ("Storage" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [28939 29377])
                                    ("=" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Storage" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [29402 29412])
                                            ("" variable (:type ("RHS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29412 29416]))                                          
                                        :type ("Storage" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [29383 29849]))                                  
                                :type "union")
                                (reparse-symbol classsubparts) [27228 29856])
                            ("usesLayout" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "bool"
                                :arguments 
                                  ( ("Semantics" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("fltSemantics" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29905 29935]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [29860 30205])
                            ("getIEEE" function (:type ("IEEEFloat" type (:type "class") nil nil)) (reparse-symbol classsubparts) [30209 30437])
                            ("getIEEE" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("IEEEFloat" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [30441 30681])
                            ("makeZero" function
                               (:arguments 
                                  ( ("Neg" variable (:type "bool") (reparse-symbol arg-sub-list) [30699 30708]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [30685 30758])
                            ("makeInf" function
                               (:arguments 
                                  ( ("Neg" variable (:type "bool") (reparse-symbol arg-sub-list) [30775 30784]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [30762 30833])
                            ("makeNaN" function
                               (:arguments 
                                  ( ("SNaN" variable (:type "bool") (reparse-symbol arg-sub-list) [30850 30860])
                                    ("Neg" variable (:type "bool") (reparse-symbol arg-sub-list) [30861 30870])
                                    ("fill" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30871 30889]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [30837 30956])
                            ("makeLargest" function
                               (:arguments 
                                  ( ("Neg" variable (:type "bool") (reparse-symbol arg-sub-list) [30977 30986]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [30960 31045])
                            ("makeSmallest" function
                               (:arguments 
                                  ( ("Neg" variable (:type "bool") (reparse-symbol arg-sub-list) [31067 31076]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [31049 31136])
                            ("makeSmallestNormalized" function
                               (:arguments 
                                  ( ("Neg" variable (:type "bool") (reparse-symbol arg-sub-list) [31168 31177]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [31140 31247])
                            ("APFloat" function
                               (:constructor-flag t
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [31454 31548])
                            ("APFloat" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("F" variable (:type ("IEEEFloat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31569 31581])
                                    ("S" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("fltSemantics" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31582 31604]))                                  
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [31561 31628])
                            ("APFloat" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("F" variable (:type ("DoubleAPFloat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31648 31664])
                                    ("S" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("fltSemantics" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31665 31687]))                                  
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [31640 31717])
                            ("compareAbsoluteValue" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31752 31771]))                                  
                                :type ("cmpResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [31721 32160])
                            ("public" label nil (reparse-symbol classsubparts) [32162 32169])
                            ("APFloat" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Semantics" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("fltSemantics" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32180 32210]))                                  
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32172 32228])
                            ("APFloat" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("Semantics" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("fltSemantics" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32239 32269])
                                    ("S" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32270 32282]))                                  
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32231 32283])
                            ("APFloat" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Semantics" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("fltSemantics" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32294 32324])
                                    ("I" variable (:type ("integerPart" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32325 32339]))                                  
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32286 32360])
                            ("APFloat" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Semantics" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("fltSemantics" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32600 32630])
                                    ("" variable (:type ("uninitializedTag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32631 32648]))                                  
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32592 32687])
                            ("APFloat" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Semantics" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("fltSemantics" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32698 32728])
                                    ("I" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32729 32744]))                                  
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32690 32765])
                            ("APFloat" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("d" variable (:type "double") (reparse-symbol arg-sub-list) [32785 32794]))                                  
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32777 32829])
                            ("APFloat" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("f" variable (:type "float") (reparse-symbol arg-sub-list) [32849 32857]))                                  
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32841 32892])
                            ("needsCleanup" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [32998 33074])
                            ("getZero" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Sem" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("fltSemantics" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33215 33239])
                                    ("Negative" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [33240 33261]))                                  
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [33192 33349])
                            ("getInf" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Sem" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("fltSemantics" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33493 33517])
                                    ("Negative" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [33518 33539]))                                  
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [33471 33626])
                            ("getNaN" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Sem" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("fltSemantics" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33888 33912])
                                    ("Negative" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [33913 33934])
                                    ("payload" variable
                                       (:default-value "0"
                                        :type ("uint64_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33960 33980]))                                  
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [33866 34158])
                            ("getQNaN" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Sem" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("fltSemantics" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34216 34240])
                                    ("Negative" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [34241 34262])
                                    ("payload" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :default-value "nullptr"
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34289 34319]))                                  
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [34193 34422])
                            ("getSNaN" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Sem" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("fltSemantics" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34480 34504])
                                    ("Negative" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [34505 34526])
                                    ("payload" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :default-value "nullptr"
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34553 34583]))                                  
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [34457 34685])
                            ("getLargest" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Sem" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("fltSemantics" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34848 34872])
                                    ("Negative" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [34873 34894]))                                  
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [34822 34985])
                            ("getSmallest" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Sem" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("fltSemantics" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35238 35262])
                                    ("Negative" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [35263 35284]))                                  
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [35211 35376])
                            ("getSmallestNormalized" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Sem" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("fltSemantics" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35583 35607])
                                    ("Negative" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [35647 35668]))                                  
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [35546 35770])
                            ("getAllOnesValue" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("Semantics" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("fltSemantics" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35925 35955]))                                  
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [35894 35956])
                            ("Profile" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("NID" variable
                                       (:reference 1
                                        :type ("FoldingSetNodeID" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36076 36098]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [36063 36105])
                            ("add" function
                               (:arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36122 36141])
                                    ("RM" variable (:type ("roundingMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36142 36158]))                                  
                                :type ("opStatus" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [36109 36519])
                            ("subtract" function
                               (:arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36540 36559])
                                    ("RM" variable (:type ("roundingMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36560 36576]))                                  
                                :type ("opStatus" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [36522 36947])
                            ("multiply" function
                               (:arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36968 36987])
                                    ("RM" variable (:type ("roundingMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36988 37004]))                                  
                                :type ("opStatus" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [36950 37375])
                            ("divide" function
                               (:arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37394 37413])
                                    ("RM" variable (:type ("roundingMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37414 37430]))                                  
                                :type ("opStatus" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [37378 37797])
                            ("remainder" function
                               (:arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37819 37838]))                                  
                                :type ("opStatus" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [37800 38203])
                            ("mod" function
                               (:arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [38219 38238]))                                  
                                :type ("opStatus" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [38206 38591])
                            ("fusedMultiplyAdd" function
                               (:arguments 
                                  ( ("Multiplicand" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [38620 38648])
                                    ("Addend" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [38649 38671])
                                    ("RM" variable (:type ("roundingMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [38700 38716]))                                  
                                :type ("opStatus" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [38594 39321])
                            ("roundToIntegral" function
                               (:arguments 
                                  ( ("RM" variable (:type ("roundingMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39349 39365]))                                  
                                :type ("opStatus" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [39324 39427])
                            ("next" function
                               (:arguments 
                                  ( ("nextDown" variable (:type "bool") (reparse-symbol arg-sub-list) [39530 39544]))                                  
                                :type ("opStatus" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [39516 39601])
                            ("-" function
                               (:methodconst-flag t
                                :operator-flag t
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [39630 39732])
                            ("+" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [39838 39857]))                                  
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [39820 39963])
                            ("-" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [40074 40093]))                                  
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [40056 40204])
                            ("" function
                               (:methodconst-flag t
                                :operator-flag t
                                :function-pointer t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [40315 40334]))                                  
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [40297 40445])
                            ("/" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [40573 40592]))                                  
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [40555 40701])
                            ("changeSign" function (:type "void") (reparse-symbol classsubparts) [40705 40771])
                            ("clearSign" function (:type "void") (reparse-symbol classsubparts) [40774 40838])
                            ("copySign" function
                               (:arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [40855 40874]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [40841 40942])
                            ("copySign" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Value" variable (:type ("APFloat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41082 41096])
                                    ("Sign" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41097 41117]))                                  
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [41058 41167])
                            ("convert" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("ToSemantics" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("fltSemantics" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41188 41220])
                                    ("RM" variable (:type ("roundingMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41221 41237])
                                    ("losesInfo" variable
                                       (:pointer 1
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [41257 41273]))                                  
                                :type ("opStatus" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [41171 41274])
                            ("convertToInteger" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Input" variable (:type ("MutableArrayRef" type
                                         (:template-specifier 
                                            ( ("integerPart" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [41303 41338])
                                    ("Width" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [41367 41386])
                                    ("IsSigned" variable (:type "bool") (reparse-symbol arg-sub-list) [41387 41401])
                                    ("RM" variable (:type ("roundingMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41402 41418])
                                    ("IsExact" variable
                                       (:pointer 1
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [41447 41461]))                                  
                                :type ("opStatus" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [41277 41572])
                            ("convertToInteger" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("Result" variable
                                       (:reference 1
                                        :type ("APSInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41601 41616])
                                    ("RM" variable (:type ("roundingMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41617 41633])
                                    ("IsExact" variable
                                       (:pointer 1
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [41662 41676]))                                  
                                :type ("opStatus" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [41575 41683])
                            ("convertFromAPInt" function
                               (:arguments 
                                  ( ("Input" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41712 41731])
                                    ("IsSigned" variable (:type "bool") (reparse-symbol arg-sub-list) [41732 41746])
                                    ("RM" variable (:type ("roundingMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41775 41791]))                                  
                                :type ("opStatus" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [41686 41871])
                            ("convertFromSignExtendedInteger" function
                               (:arguments 
                                  ( ("Input" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("integerPart" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41914 41939])
                                    ("InputSize" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [41982 42005])
                                    ("IsSigned" variable (:type "bool") (reparse-symbol arg-sub-list) [42006 42020])
                                    ("RM" variable (:type ("roundingMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42063 42079]))                                  
                                :type ("opStatus" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [41874 42193])
                            ("convertFromZeroExtendedInteger" function
                               (:arguments 
                                  ( ("Input" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("integerPart" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [42236 42261])
                                    ("InputSize" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [42304 42327])
                                    ("IsSigned" variable (:type "bool") (reparse-symbol arg-sub-list) [42328 42342])
                                    ("RM" variable (:type ("roundingMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42385 42401]))                                  
                                :type ("opStatus" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [42196 42515])
                            ("convertFromString" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42555 42565])
                                    ("" variable (:type ("roundingMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42566 42579]))                                  
                                :type ("Expected" type
                                     (:template-specifier 
                                        ( ("opStatus" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [42518 42580])
                            ("bitcastToAPInt" function
                               (:methodconst-flag t
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [42583 42670])
                            ("convertToDouble" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "double")
                                (reparse-symbol classsubparts) [42943 42974])
                            ("convertToFloat" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "float")
                                (reparse-symbol classsubparts) [43232 43261])
                            ("==" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43281 43300]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [43265 43343])
                            ("!=" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43363 43382]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [43347 43425])
                            ("<" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43444 43463]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [43429 43515])
                            (">" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43534 43553]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [43519 43608])
                            ("<=" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43628 43647]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [43612 43743])
                            (">=" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43763 43782]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [43747 43881])
                            ("compare" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43903 43922]))                                  
                                :type ("cmpResult" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [43885 44285])
                            ("bitwiseIsEqual" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44309 44328]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [44289 44652])
                            ("isExactlyValue" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("V" variable (:type "double") (reparse-symbol arg-sub-list) [45148 45157]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [45128 45312])
                            ("convertToHexString" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("DST" variable
                                       (:pointer 1
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [45348 45358])
                                    ("HexDigits" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [45359 45382])
                                    ("UpperCase" variable (:type "bool") (reparse-symbol arg-sub-list) [45417 45432])
                                    ("RM" variable (:type ("roundingMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45433 45449]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [45316 45556])
                            ("isZero" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [45560 45615])
                            ("isInfinity" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [45618 45681])
                            ("isNaN" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [45684 45737])
                            ("isNegative" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [45741 45799])
                            ("isDenormal" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [45802 45874])
                            ("isSignaling" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [45877 45937])
                            ("isNormal" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [45941 46009])
                            ("isFinite" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [46012 46071])
                            ("getCategory" function
                               (:methodconst-flag t
                                :type ("fltCategory" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [46075 46142])
                            ("getSemantics" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("fltSemantics" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [46145 46210])
                            ("isNonZero" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [46213 46257])
                            ("isFiniteNonZero" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [46260 46324])
                            ("isPosZero" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [46327 46387])
                            ("isNegZero" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [46390 46449])
                            ("isSmallest" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [46452 46524])
                            ("isLargest" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [46527 46597])
                            ("isInteger" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [46600 46670])
                            ("isIEEE" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [46673 46742])
                            ("toString" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Str" variable
                                       (:reference 1
                                        :type ("SmallVectorImpl" type
                                             (:template-specifier 
                                                ( ("char" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [46860 46887])
                                    ("FormatPrecision" variable
                                       (:default-value "0"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [46888 46916])
                                    ("FormatMaxPadding" variable
                                       (:default-value "3"
                                        :type "unsigned int")
                                        (reparse-symbol arg-sub-list) [46934 46963])
                                    ("TruncateZero" variable
                                       (:default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [46965 46989]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [46846 47110])
                            ("print" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("raw_ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [47125 47139]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [47114 47146])
                            ("dump" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [47149 47167])
                            ("getExactInverse" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("inv" variable
                                       (:pointer 1
                                        :type ("APFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [47192 47205]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [47171 47274])
                            ("hash_value" function
                               (:prototype-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("Arg" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [47306 47325]))                                  
                                :type ("hash_code" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [47278 47326])
                            ("ilogb" function
                               (:typemodifiers ("friend")
                                :arguments 
                                  ( ("Arg" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [47346 47365]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [47329 47398])
                            ("scalbn" function
                               (:prototype-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("X" variable (:type ("APFloat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47423 47433])
                                    ("Exp" variable (:type "int") (reparse-symbol arg-sub-list) [47434 47442])
                                    ("RM" variable (:type ("roundingMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47443 47459]))                                  
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [47401 47460])
                            ("frexp" function
                               (:prototype-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("X" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APFloat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [47484 47501])
                                    ("Exp" variable
                                       (:reference 1
                                        :type "int")
                                        (reparse-symbol arg-sub-list) [47502 47511])
                                    ("RM" variable (:type ("roundingMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47512 47528]))                                  
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [47463 47529])
                            ("IEEEFloat" variable
                               (:typemodifiers ("friend")
                                :type "int")
                                (reparse-symbol classsubparts) [47532 47549])
                            ("DoubleAPFloat" variable
                               (:typemodifiers ("friend")
                                :type "int")
                                (reparse-symbol classsubparts) [47552 47573]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [27037 47576])
                    ("hash_value" function
                       (:prototype-flag t
                        :arguments 
                          ( ("Arg" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [47737 47756]))                          
                        :type ("hash_code" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [47716 47757])
                    ("scalbn" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("X" variable (:type ("APFloat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47780 47790])
                            ("Exp" variable (:type "int") (reparse-symbol arg-sub-list) [47791 47799])
                            ("RM" variable (:type ("APFloat::roundingMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47800 47825]))                          
                        :type ("APFloat" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [47758 48137])
                    ("frexp" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("X" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [48354 48371])
                            ("Exp" variable
                               (:reference 1
                                :type "int")
                                (reparse-symbol arg-sub-list) [48372 48381])
                            ("RM" variable (:type ("APFloat::roundingMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48382 48407]))                          
                        :type ("APFloat" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [48333 48717])
                    ("abs" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("X" variable (:type ("APFloat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48785 48795]))                          
                        :type ("APFloat" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [48766 48828])
                    ("neg" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("X" variable (:type ("APFloat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48896 48906]))                          
                        :type ("APFloat" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [48877 48940])
                    ("minnum" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("A" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [49137 49154])
                            ("B" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [49155 49172]))                          
                        :type ("APFloat" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [49115 49262])
                    ("maxnum" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("A" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [49458 49475])
                            ("B" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [49476 49493]))                          
                        :type ("APFloat" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [49436 49583])
                    ("minimum" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("A" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [49760 49777])
                            ("B" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [49778 49795]))                          
                        :type ("APFloat" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [49737 49990])
                    ("maximum" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("A" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [50166 50183])
                            ("B" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APFloat" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [50184 50201]))                          
                        :type ("APFloat" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [50143 50396]))                  
                :type "namespace")
                nil [1415 50399]))          
      :file "APFloat.h"
      :pointmax 50485
      :fsize 50484
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((symbol 50129 . 50142) (symbol 49723 . 49736) (symbol 49422 . 49435) (symbol 49101 . 49114) (punctuation 46841 . 46842) (DEFAULT 46834 . 46841) (punctuation 46832 . 46833) (semantic-list 46816 . 46831) (punctuation 46815 . 46816) (OPERATOR 46807 . 46815) (punctuation 46826 . 46827) (punctuation 46806 . 46807) (symbol 46798 . 46805) (punctuation 46826 . 46827) (punctuation 46794 . 46795) (DEFAULT 46787 . 46794) (punctuation 46785 . 46786) (semantic-list 46764 . 46784) (punctuation 46763 . 46764) (OPERATOR 46755 . 46763) (punctuation 46754 . 46755) (symbol 46746 . 46753) (punctuation 32993 . 32994) (DEFAULT 32986 . 32993) (punctuation 32984 . 32985) (semantic-list 32981 . 32983) (symbol 32974 . 32981) (punctuation 32973 . 32974) (punctuation 32968 . 32969) (DEFAULT 32961 . 32968) (punctuation 32959 . 32960) (semantic-list 32943 . 32958) (symbol 32936 . 32943) (punctuation 32953 . 32954) (punctuation 32932 . 32933) (DEFAULT 32925 . 32932) (punctuation 32923 . 32924) (semantic-list 32902 . 32922) (symbol 32895 . 32902) (EXPLICIT 32832 . 32840) (EXPLICIT 32768 . 32776) (punctuation 32514 . 32515) (DELETE 32508 . 32514) (punctuation 32506 . 32507) (semantic-list 32469 . 32505) (symbol 32462 . 32469) (punctuation 32458 . 32459) (punctuation 32457 . 32458) (symbol 32452 . 32457) (punctuation 32451 . 32452) (punctuation 32450 . 32451) (punctuation 32449 . 32450) (symbol 32448 . 32449) (punctuation 32447 . 32448) (symbol 32430 . 32447) (punctuation 32429 . 32430) (punctuation 32428 . 32429) (symbol 32425 . 32428) (punctuation 32424 . 32425) (symbol 32413 . 32424) (punctuation 32412 . 32413) (punctuation 32411 . 32412) (symbol 32408 . 32411) (punctuation 32406 . 32407) (TYPENAME 32397 . 32405) (punctuation 32383 . 32384) (symbol 32382 . 32383) (TYPENAME 32373 . 32381) (punctuation 32372 . 32373) (TEMPLATE 32363 . 32371) (EXPLICIT 31631 . 31639) (EXPLICIT 31552 . 31560) (punctuation 29411 . 29412) (punctuation 28610 . 28611) (punctuation 27617 . 27618) (punctuation 27616 . 27617) (punctuation 27615 . 27616) (punctuation 27614 . 27615) (punctuation 27559 . 27560) (symbol 27551 . 27559) (punctuation 27549 . 27550) (punctuation 27548 . 27549) (punctuation 27547 . 27548) (TYPENAME 27539 . 27547) (punctuation 27538 . 27539) (TEMPLATE 27529 . 27537) (EXPLICIT 27388 . 27396) (EXPLICIT 27330 . 27338) (string 27220 . 27222) (PUBLIC 23101 . 23107) (punctuation 23099 . 23100) (symbol 23093 . 23098) (symbol 23079 . 23092) (CLASS 23073 . 23078) (PUBLIC 9894 . 9900) (punctuation 9892 . 9893) (symbol 9886 . 9891) (symbol 9876 . 9885) (CLASS 9870 . 9875) (punctuation 8419 . 8420) (symbol 8399 . 8418) (symbol 8386 . 8398) (symbol 8376 . 8385) (STATIC 8369 . 8375) (punctuation 8339 . 8340) (symbol 8322 . 8334) (symbol 8309 . 8321) (symbol 8299 . 8308) (STATIC 8292 . 8298) (punctuation 8258 . 8259) (symbol 8241 . 8257) (symbol 8228 . 8240) (symbol 8218 . 8227) (STATIC 8211 . 8217) (punctuation 8177 . 8178) (symbol 8160 . 8176) (symbol 8147 . 8159) (symbol 8137 . 8146) (STATIC 8130 . 8136) (punctuation 8045 . 8046) (symbol 8025 . 8044) (symbol 8012 . 8024) (symbol 8002 . 8011) (STATIC 7995 . 8001) (punctuation 7970 . 7971) (symbol 7957 . 7969) (USING 7951 . 7956) (semantic-list 7716 . 7718) (symbol 7711 . 7716) (punctuation 7710 . 7711) (symbol 7697 . 7709) (CONST 7691 . 7696) (STATIC 7684 . 7690) (semantic-list 7562 . 7564) (symbol 7545 . 7562) (punctuation 7544 . 7545) (symbol 7531 . 7543) (CONST 7525 . 7530) (STATIC 7518 . 7524) (semantic-list 7498 . 7500) (symbol 7483 . 7498) (punctuation 7482 . 7483) (symbol 7469 . 7481) (CONST 7463 . 7468) (STATIC 7456 . 7462) (semantic-list 7436 . 7438) (symbol 7428 . 7436) (punctuation 7427 . 7428) (symbol 7414 . 7426) (CONST 7408 . 7413) (STATIC 7401 . 7407) (semantic-list 7381 . 7383) (symbol 7371 . 7381) (punctuation 7370 . 7371) (symbol 7357 . 7369) (CONST 7351 . 7356) (STATIC 7344 . 7350) (semantic-list 7324 . 7326) (symbol 7314 . 7324) (punctuation 7313 . 7314) (symbol 7300 . 7312) (CONST 7294 . 7299) (STATIC 7287 . 7293) (semantic-list 7267 . 7269) (symbol 7261 . 7267) (punctuation 7260 . 7261) (symbol 7247 . 7259) (CONST 7241 . 7246) (STATIC 7234 . 7240) (semantic-list 7214 . 7216) (symbol 7206 . 7214) (punctuation 7205 . 7206) (symbol 7192 . 7204) (CONST 7186 . 7191) (STATIC 7179 . 7185) (punctuation 6702 . 6703) (symbol 6685 . 6701) (UNSIGNED 6676 . 6684) (symbol 6666 . 6675) (STATIC 6659 . 6665))
      :lexical-table 
        '(("LLVM_ADT_APFLOAT_H")
          )
)
    (semanticdb-table "semanticdb-table-1555608eae7a"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_ILIST_NODE_H" variable (:constant-flag t) nil [649 670])
            ("llvm/ADT/ilist_node_base.h" include nil nil [672 709])
            ("llvm/ADT/ilist_node_options.h" include nil nil [710 750])
            ("llvm" type
               (:members 
                  ( ("ilist_detail" type
                       (:members 
                          ( ("NodeAccess" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [796 814]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [770 817])
                    ("ilist_iterator" type
                       (:template 
                          ( ("OptionsT" type (:type "class") nil nil)
                            ("bool" type (:typevar "IsReverse") nil nil)
                            ("bool" type (:typevar "IsConst") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [849 926])
                    ("ilist_sentinel" type
                       (:template 
                          ( ("OptionsT" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [927 974])
                    ("ilist_node_impl" type
                       (:template 
                          ( ("OptionsT" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("OptionsT::value_type" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [1438 1468])
                            ("OptionsT::node_base_type" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [1494 1528])
                            ("OptionsT::list_base_type" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [1554 1588])
                            ("OptionsT::list_base_type" variable
                               (:typemodifiers ("friend" "typename")
                                :type "int")
                                (reparse-symbol classsubparts) [1592 1633])
                            ("NodeAccess" type
                               (:parent "ilist_detail"
                                :prototype t
                                :type "struct")
                                (reparse-symbol classsubparts) [1643 1675])
                            ("ilist_sentinel" friend nil (reparse-symbol classsubparts) [1678 1705])
                            ("ilist_iterator" friend nil (reparse-symbol classsubparts) [1719 1746])
                            ("ilist_iterator" friend nil (reparse-symbol classsubparts) [1774 1801])
                            ("ilist_iterator" friend nil (reparse-symbol classsubparts) [1828 1855])
                            ("ilist_iterator" friend nil (reparse-symbol classsubparts) [1882 1909])
                            ("protected" label nil (reparse-symbol classsubparts) [1934 1944])
                            ("ilist_iterator" variable (:type "int") (reparse-symbol classsubparts) [1969 2008])
                            ("ilist_iterator" variable (:type "int") (reparse-symbol classsubparts) [2039 2077])
                            ("ilist_iterator" variable (:type "int") (reparse-symbol classsubparts) [2110 2148])
                            ("ilist_iterator" variable (:type "int") (reparse-symbol classsubparts) [2187 2224])
                            ("private" label nil (reparse-symbol classsubparts) [2258 2266])
                            ("getPrev" function
                               (:pointer 1
                                :type ("ilist_node_impl" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2269 2371])
                            ("getNext" function
                               (:pointer 1
                                :type ("ilist_node_impl" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2375 2477])
                            ("getPrev" function
                               (:methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :type ("ilist_node_impl" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2481 2595])
                            ("getNext" function
                               (:methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :type ("ilist_node_impl" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2599 2713])
                            ("setPrev" function
                               (:arguments 
                                  ( ("N" variable
                                       (:pointer 1
                                        :type ("ilist_node_impl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2730 2749]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [2717 2781])
                            ("setNext" function
                               (:arguments 
                                  ( ("N" variable
                                       (:pointer 1
                                        :type ("ilist_node_impl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2797 2816]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [2784 2848])
                            ("public" label nil (reparse-symbol classsubparts) [2850 2857])
                            ("getIterator" function (:type ("self_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2860 2920])
                            ("getIterator" function
                               (:methodconst-flag t
                                :type ("const_self_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2923 3001])
                            ("getReverseIterator" function (:type ("reverse_self_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3005 3094])
                            ("getReverseIterator" function
                               (:methodconst-flag t
                                :type ("const_reverse_self_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3098 3205])
                            ("node_base_type::isKnownSentinel" variable (:type "int") (reparse-symbol classsubparts) [3278 3310])
                            ("isSentinel" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [3500 3708]))                          
                        :superclasses 
                          ( ("OptionsT::node_base_type" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [1340 3711])
                    ("ilist_detail" type
                       (:members 
                          ( ("NodeAccess" type
                               (:members 
                                  ( ("protected" label nil (reparse-symbol classsubparts) [5989 5999])
                                    ("getNodePtr" function
                                       (:template 
                                          ( ("OptionsT" type (:type "class") nil nil))                                          
                                        :type ("ilist_node_impl" type
                                             (:template-specifier 
                                                ( ("OptionsT" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :arguments 
                                          ( ("N" variable
                                               (:typemodifiers ("typename")
                                                :type ("OptionsT::pointer" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [6075 6104]))                                          
                                        :typemodifiers ("static")
                                        :pointer 1)
                                        (reparse-symbol classsubparts) [6002 6124])
                                    ("getNodePtr" function
                                       (:template 
                                          ( ("OptionsT" type (:type "class") nil nil))                                          
                                        :type ("ilist_node_impl" type
                                             (:template-specifier 
                                                ( ("OptionsT" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :arguments 
                                          ( ("N" variable
                                               (:typemodifiers ("typename")
                                                :type ("OptionsT::const_pointer" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [6210 6245]))                                          
                                        :constant-flag t
                                        :typemodifiers ("static")
                                        :pointer 1)
                                        (reparse-symbol classsubparts) [6128 6265])
                                    ("getValuePtr" function
                                       (:template 
                                          ( ("OptionsT" type (:type "class") nil nil))                                          
                                        :type ("OptionsT::pointer" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("N" variable
                                               (:pointer 1
                                                :type ("ilist_node_impl" type
                                                     (:template-specifier 
                                                        ( ("OptionsT" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [6343 6372]))                                          
                                        :typemodifiers ("static" "typename"))
                                        (reparse-symbol classsubparts) [6269 6433])
                                    ("getValuePtr" function
                                       (:template 
                                          ( ("OptionsT" type (:type "class") nil nil))                                          
                                        :type ("OptionsT::const_pointer" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("N" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("ilist_node_impl" type
                                                     (:template-specifier 
                                                        ( ("OptionsT" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [6519 6554]))                                          
                                        :typemodifiers ("static" "typename"))
                                        (reparse-symbol classsubparts) [6437 6621])
                                    ("getPrev" function
                                       (:template 
                                          ( ("OptionsT" type (:type "class") nil nil))                                          
                                        :type ("ilist_node_impl" type
                                             (:template-specifier 
                                                ( ("OptionsT" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :arguments 
                                          ( ("N" variable
                                               (:reference 1
                                                :type ("ilist_node_impl" type
                                                     (:template-specifier 
                                                        ( ("OptionsT" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [6695 6724]))                                          
                                        :typemodifiers ("static")
                                        :pointer 1)
                                        (reparse-symbol classsubparts) [6625 6754])
                                    ("getNext" function
                                       (:template 
                                          ( ("OptionsT" type (:type "class") nil nil))                                          
                                        :type ("ilist_node_impl" type
                                             (:template-specifier 
                                                ( ("OptionsT" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :arguments 
                                          ( ("N" variable
                                               (:reference 1
                                                :type ("ilist_node_impl" type
                                                     (:template-specifier 
                                                        ( ("OptionsT" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [6828 6857]))                                          
                                        :typemodifiers ("static")
                                        :pointer 1)
                                        (reparse-symbol classsubparts) [6758 6887])
                                    ("getPrev" function
                                       (:template 
                                          ( ("OptionsT" type (:type "class") nil nil))                                          
                                        :type ("ilist_node_impl" type
                                             (:template-specifier 
                                                ( ("OptionsT" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :arguments 
                                          ( ("N" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("ilist_node_impl" type
                                                     (:template-specifier 
                                                        ( ("OptionsT" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [6970 7005]))                                          
                                        :constant-flag t
                                        :typemodifiers ("static")
                                        :pointer 1)
                                        (reparse-symbol classsubparts) [6891 7035])
                                    ("getNext" function
                                       (:template 
                                          ( ("OptionsT" type (:type "class") nil nil))                                          
                                        :type ("ilist_node_impl" type
                                             (:template-specifier 
                                                ( ("OptionsT" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :arguments 
                                          ( ("N" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("ilist_node_impl" type
                                                     (:template-specifier 
                                                        ( ("OptionsT" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [7118 7153]))                                          
                                        :constant-flag t
                                        :typemodifiers ("static")
                                        :pointer 1)
                                        (reparse-symbol classsubparts) [7039 7183]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [5969 7186])
                            ("SpecificNodeAccess" type
                               (:template 
                                  ( ("OptionsT" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("protected" label nil (reparse-symbol classsubparts) [7255 7265])
                                    ("OptionsT::pointer" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [7284 7311])
                                    ("OptionsT::const_pointer" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [7336 7369])
                                    ("ilist_node_impl" variable (:type "int") (reparse-symbol classsubparts) [7390 7416])
                                    ("getNodePtr" function
                                       (:pointer 1
                                        :typemodifiers ("static")
                                        :arguments 
                                          ( ("N" variable (:type ("pointer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7449 7459]))                                          
                                        :type ("node_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7420 7513])
                                    ("getNodePtr" function
                                       (:pointer 1
                                        :typemodifiers ("static")
                                        :constant-flag t
                                        :arguments 
                                          ( ("N" variable (:type ("const_pointer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7552 7568]))                                          
                                        :type ("node_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7517 7622])
                                    ("getValuePtr" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("N" variable
                                               (:pointer 1
                                                :type ("node_type" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7653 7666]))                                          
                                        :type ("pointer" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7626 7721])
                                    ("getValuePtr" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("N" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("node_type" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7758 7777]))                                          
                                        :type ("const_pointer" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7725 7832]))                                  
                                :superclasses 
                                  ( ("NodeAccess" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [7188 7835]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [5663 7838])
                    ("ilist_sentinel" type
                       (:template 
                          ( ("OptionsT" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [7954 7961])
                            ("ilist_sentinel" function
                               (:constructor-flag t
                                :type ("ilist_sentinel" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7964 8031])
                            ("reset" function (:type "void") (reparse-symbol classsubparts) [8035 8103])
                            ("empty" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [8107 8161]))                          
                        :superclasses 
                          ( ("ilist_node_impl" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [7870 8164]))                  
                :type "namespace")
                nil [752 10040]))          
      :file "ilist_node.h"
      :pointmax 10096
      :fsize 10095
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 10036 . 10037) (semantic-list 8511 . 10036) (punctuation 8509 . 8510) (punctuation 8508 . 8509) (punctuation 8507 . 8508) (punctuation 8506 . 8507) (symbol 8499 . 8506) (punctuation 8497 . 8498) (symbol 8491 . 8497) (punctuation 8490 . 8491) (symbol 8480 . 8490) (PUBLIC 8473 . 8479) (punctuation 8471 . 8472) (symbol 8448 . 8470) (CLASS 8442 . 8447) (punctuation 8440 . 8441) (symbol 8433 . 8440) (punctuation 8431 . 8432) (punctuation 8430 . 8431) (punctuation 8429 . 8430) (CLASS 8424 . 8429) (punctuation 8422 . 8423) (symbol 8414 . 8422) (TYPENAME 8405 . 8413) (punctuation 8403 . 8404) (symbol 8397 . 8403) (TYPENAME 8388 . 8396) (punctuation 8387 . 8388) (TEMPLATE 8378 . 8386) (punctuation 7388 . 7389) (symbol 7378 . 7387) (USING 7372 . 7377) (punctuation 7334 . 7335) (symbol 7320 . 7333) (USING 7314 . 7319) (punctuation 7282 . 7283) (symbol 7274 . 7281) (USING 7268 . 7273) (punctuation 5660 . 5661) (semantic-list 5547 . 5660) (punctuation 5545 . 5546) (symbol 5541 . 5545) (punctuation 5540 . 5541) (punctuation 5539 . 5540) (punctuation 5538 . 5539) (punctuation 5537 . 5538) (punctuation 5536 . 5537) (punctuation 5535 . 5536) (symbol 5528 . 5535) (punctuation 5526 . 5527) (symbol 5525 . 5526) (punctuation 5524 . 5525) (symbol 5504 . 5524) (punctuation 5503 . 5504) (punctuation 5502 . 5503) (symbol 5490 . 5502) (TYPENAME 5481 . 5489) (punctuation 5469 . 5470) (symbol 5454 . 5469) (PUBLIC 5447 . 5453) (punctuation 5445 . 5446) (symbol 5430 . 5440) (CLASS 5424 . 5429) (punctuation 5422 . 5423) (symbol 5415 . 5422) (punctuation 5413 . 5414) (punctuation 5412 . 5413) (punctuation 5411 . 5412) (CLASS 5406 . 5411) (punctuation 5404 . 5405) (symbol 5403 . 5404) (CLASS 5397 . 5402) (punctuation 5396 . 5397) (TEMPLATE 5387 . 5395) (USING 3272 . 3277) (punctuation 2255 . 2256) (DEFAULT 2248 . 2255) (punctuation 2246 . 2247) (semantic-list 2243 . 2245) (symbol 2228 . 2243) (punctuation 2185 . 2186) (symbol 2157 . 2184) (USING 2151 . 2156) (punctuation 2108 . 2109) (symbol 2086 . 2107) (USING 2080 . 2085) (punctuation 2037 . 2038) (symbol 2017 . 2036) (USING 2011 . 2016) (punctuation 1967 . 1968) (symbol 1953 . 1966) (USING 1947 . 1952) (punctuation 1931 . 1932) (punctuation 1930 . 1931) (symbol 1926 . 1930) (punctuation 1924 . 1925) (symbol 1920 . 1924) (punctuation 1918 . 1919) (symbol 1910 . 1918) (punctuation 1909 . 1910) (punctuation 1878 . 1879) (punctuation 1877 . 1878) (symbol 1872 . 1877) (punctuation 1870 . 1871) (symbol 1866 . 1870) (punctuation 1864 . 1865) (symbol 1856 . 1864) (punctuation 1855 . 1856) (punctuation 1824 . 1825) (punctuation 1823 . 1824) (symbol 1819 . 1823) (punctuation 1817 . 1818) (symbol 1812 . 1817) (punctuation 1810 . 1811) (symbol 1802 . 1810) (punctuation 1801 . 1802) (punctuation 1770 . 1771) (punctuation 1769 . 1770) (symbol 1764 . 1769) (punctuation 1762 . 1763) (symbol 1757 . 1762) (punctuation 1755 . 1756) (symbol 1747 . 1755) (punctuation 1746 . 1747) (punctuation 1715 . 1716) (punctuation 1714 . 1715) (symbol 1706 . 1714) (punctuation 1705 . 1706) (FRIEND 1636 . 1642) (punctuation 1552 . 1553) (symbol 1537 . 1551) (USING 1531 . 1536) (punctuation 1492 . 1493) (symbol 1477 . 1491) (USING 1471 . 1476) (punctuation 1436 . 1437) (symbol 1425 . 1435) (USING 1419 . 1424))
      :lexical-table 
        '(("LLVM_ADT_ILIST_NODE_H")
          )
)
    (semanticdb-table "semanticdb-table-1555621a2ef0"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_POINTERINTPAIR_H" variable (:constant-flag t) nil [560 585])
            ("llvm/Support/Compiler.h" include nil nil [587 621])
            ("llvm/Support/PointerLikeTypeTraits.h" include nil nil [622 669])
            ("llvm/Support/type_traits.h" include nil nil [670 707])
            ("cassert" include (:system-flag t) nil [708 726])
            ("cstdint" include (:system-flag t) nil [727 745])
            ("limits" include (:system-flag t) nil [746 763])
            ("llvm" type
               (:members 
                  ( ("DenseMapInfo" type
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("Enable" type (:type "class") nil nil))                          
                        :type "struct"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [783 842])
                    ("PointerIntPairInfo" type
                       (:template 
                          ( ("PointerT" type (:type "class") nil nil)
                            ("unsigned int" type (:typevar "IntBits") nil nil)
                            ("PtrTraits" type (:type "class") nil nil))                          
                        :type "struct"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [843 936])
                    ("PointerIntPair" type
                       (:members 
                          ( ("InfoTy" variable
                               (:default-value "Info"
                                :type "int")
                                (reparse-symbol classsubparts) [2071 2085])
                            ("Value" variable
                               (:default-value "0"
                                :type ("intptr_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2088 2107])
                            ("public" label nil (reparse-symbol classsubparts) [2109 2116])
                            ("PointerIntPair" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("PtrVal" variable (:type ("PointerTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2175 2192])
                                    ("IntVal" variable (:type ("IntType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2193 2208]))                                  
                                :type ("PointerIntPair" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2160 2252])
                            ("PointerIntPair" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("PtrVal" variable (:type ("PointerTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2280 2297]))                                  
                                :type ("PointerIntPair" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2265 2326])
                            ("getPointer" function
                               (:methodconst-flag t
                                :type ("PointerTy" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2330 2394])
                            ("getInt" function
                               (:methodconst-flag t
                                :type ("IntType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2398 2461])
                            ("getAddrOfPointer" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("PointerTy" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3021 3135])
                            ("getAddrOfPointer" function
                               (:pointer 1
                                :type ("PointerTy" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3139 3408])
                            ("getOpaqueValue" function
                               (:methodconst-flag t
                                :pointer 1
                                :type "void")
                                (reparse-symbol classsubparts) [3412 3484])
                            ("getFromOpaqueValue" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [3639 3647]))                                  
                                :type ("PointerIntPair" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3598 3718])
                            ("getFromOpaqueValue" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [3897 3911]))                                  
                                :type ("PointerIntPair" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3856 4015])
                            ("==" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("PointerIntPair" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4035 4061]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [4019 4104])
                            ("!=" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("PointerIntPair" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4124 4150]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [4108 4193])
                            ("<" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("PointerIntPair" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4212 4238]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [4197 4274])
                            (">" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("PointerIntPair" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4292 4318]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [4277 4354])
                            ("<=" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("PointerIntPair" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4374 4400]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [4358 4443])
                            (">=" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("PointerIntPair" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4463 4489]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [4447 4532]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1962 4535])
                    ("is_trivially_copyable" type
                       (:template 
                          ( ("PointerTy" type (:type "class") nil nil)
                            ("unsigned int" type (:typevar "IntBits") nil nil)
                            ("IntType" type (:type "class") nil nil)
                            ("PtrTraits" type (:type "class") nil nil)
                            ("Info" type (:type "class") nil nil))                          
                        :type "struct"
                        :superclasses 
                          ( ("std::true_type" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :template-specifier 
                          ( ("PointerIntPair" type (:template-specifier 
                              ( ("PointerTy" type nil nil nil)
                                ("IntBits" type nil nil nil)
                                ("IntType" type nil nil nil)
                                ("PtrTraits" type nil nil nil)
                                ("Info" type nil nil nil))                              ) nil nil))                          )
                        (reparse-symbol namespacesubparts) [4655 5153])
                    ("PointerIntPairInfo" type
                       (:template 
                          ( ("PointerT" type (:type "class") nil nil)
                            ("unsigned int" type (:typevar "IntBits") nil nil)
                            ("PtrTraits" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("static_assert" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("PtrTraits::NumLowBitsAvailable" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5267 5299])
                                    ("" variable (:type ("std::numeric_limits::digits" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5320 5359]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [5253 5428])
                            ("static_assert" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("IntBits" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5445 5454])
                                    ("" variable (:type ("PtrTraits::NumLowBitsAvailable" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5456 5487]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [5431 5562])
                            ("uintptr_t" variable (:type "int") (reparse-symbol classsubparts) [5594 6199])
                            ("getPointer" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Value" variable (:type ("intptr_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6230 6245]))                                  
                                :type ("PointerT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6203 6352])
                            ("getInt" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Value" variable (:type ("intptr_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6379 6394]))                                  
                                :type ("intptr_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6356 6442])
                            ("updatePointer" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("OrigValue" variable (:type ("intptr_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6476 6495])
                                    ("Ptr" variable (:type ("PointerT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6496 6509]))                                  
                                :type ("intptr_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6446 6813])
                            ("updateInt" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("OrigValue" variable (:type ("intptr_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6843 6862])
                                    ("Int" variable (:type ("intptr_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6863 6876]))                                  
                                :type ("intptr_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6817 7132]))                          )
                        (reparse-symbol namespacesubparts) [5156 7135])
                    ("DenseMapInfo" type
                       (:template 
                          ( ("PointerTy" type (:type "class") nil nil)
                            ("unsigned int" type (:typevar "IntBits") nil nil)
                            ("IntType" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("PointerIntPair" variable (:type "int") (reparse-symbol classsubparts) [7351 7395])
                            ("getEmptyKey" function
                               (:typemodifiers ("static")
                                :type ("Ty" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7399 7602])
                            ("getTombstoneKey" function
                               (:typemodifiers ("static")
                                :type ("Ty" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7606 7820])
                            ("getHashValue" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("V" variable (:type ("Ty" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7853 7858]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [7824 7977])
                            ("isEqual" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Ty" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8001 8015])
                                    ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Ty" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8016 8030]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [7981 8053]))                          
                        :template-specifier 
                          ( ("PointerIntPair" type (:template-specifier 
                              ( ("PointerTy" type nil nil nil)
                                ("IntBits" type nil nil nil)
                                ("IntType" type nil nil nil))                              ) nil nil)
                            ("void" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [7199 8056])
                    ("PointerLikeTypeTraits" type
                       (:template 
                          ( ("PointerTy" type (:type "class") nil nil)
                            ("unsigned int" type (:typevar "IntBits") nil nil)
                            ("IntType" type (:type "class") nil nil)
                            ("PtrTraits" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("getAsVoidPointer" function
                               (:pointer 1
                                :typemodifiers ("static" "inline")
                                :arguments 
                                  ( ("P" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("PointerIntPair" type
                                             (:template-specifier 
                                                ( ("PointerTy" type nil nil nil)
                                                  ("IntBits" type nil nil nil)
                                                  ("IntType" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [8355 8408]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [8315 8445])
                            ("getFromVoidPointer" function
                               (:typemodifiers ("static" "inline")
                                :arguments 
                                  ( ("P" variable
                                       (:pointer 1
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [8528 8536]))                                  
                                :type ("PointerIntPair" type
                                     (:template-specifier 
                                        ( ("PointerTy" type nil nil nil)
                                          ("IntBits" type nil nil nil)
                                          ("IntType" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [8449 8621])
                            ("getFromVoidPointer" function
                               (:typemodifiers ("static" "inline")
                                :arguments 
                                  ( ("P" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [8704 8718]))                                  
                                :type ("PointerIntPair" type
                                     (:template-specifier 
                                        ( ("PointerTy" type nil nil nil)
                                          ("IntBits" type nil nil nil)
                                          ("IntType" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [8625 8803])
                            ("IntBits" variable (:type "int") (reparse-symbol classsubparts) [8889 8897]))                          
                        :template-specifier 
                          ( ("PointerIntPair" type (:template-specifier 
                              ( ("PointerTy" type nil nil nil)
                                ("IntBits" type nil nil nil)
                                ("IntType" type nil nil nil)
                                ("PtrTraits" type nil nil nil))                              ) nil nil))                          )
                        (reparse-symbol namespacesubparts) [8125 8900]))                  
                :type "namespace")
                nil [765 8903]))          
      :file "PointerIntPair.h"
      :pointmax 8963
      :fsize 8962
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 8887 . 8888) (symbol 8867 . 8886) (punctuation 8866 . 8867) (punctuation 8865 . 8866) (symbol 8856 . 8865) (punctuation 8848 . 8849) (symbol 8828 . 8847) (INT 8824 . 8827) (symbol 8814 . 8823) (STATIC 8807 . 8813) (punctuation 7349 . 7350) (symbol 7346 . 7348) (USING 7340 . 7345) (punctuation 5592 . 5593) (symbol 5570 . 5591) (ENUM 5565 . 5569) (string 5504 . 5560) (punctuation 5454 . 5455) (punctuation 5453 . 5454) (string 5376 . 5426) (punctuation 5298 . 5299) (semantic-list 3544 . 3594) (symbol 3523 . 3543) (semantic-list 3511 . 3522) (symbol 3493 . 3511) (VOID 3488 . 3492) (semantic-list 2892 . 3017) (symbol 2871 . 2891) (semantic-list 2836 . 2870) (symbol 2820 . 2836) (VOID 2815 . 2819) (semantic-list 2762 . 2811) (symbol 2741 . 2761) (semantic-list 2722 . 2740) (symbol 2707 . 2722) (VOID 2702 . 2706) (semantic-list 2626 . 2698) (symbol 2605 . 2625) (semantic-list 2588 . 2604) (symbol 2582 . 2588) (VOID 2577 . 2581) (semantic-list 2520 . 2573) (symbol 2499 . 2519) (semantic-list 2480 . 2498) (symbol 2470 . 2480) (VOID 2465 . 2469) (EXPLICIT 2256 . 2264) (punctuation 2155 . 2156) (DEFAULT 2148 . 2155) (punctuation 2146 . 2147) (semantic-list 2143 . 2145) (symbol 2129 . 2143) (symbol 2119 . 2128) (USING 2065 . 2070) (punctuation 1960 . 1961) (punctuation 1959 . 1960) (symbol 1950 . 1959) (punctuation 1948 . 1949) (symbol 1941 . 1948) (punctuation 1939 . 1940) (symbol 1930 . 1939) (punctuation 1929 . 1930) (symbol 1911 . 1929) (punctuation 1909 . 1910) (symbol 1904 . 1908) (TYPENAME 1895 . 1903) (punctuation 1883 . 1884) (punctuation 1882 . 1883) (symbol 1873 . 1882) (punctuation 1872 . 1873) (symbol 1851 . 1872) (punctuation 1849 . 1850) (symbol 1839 . 1848) (TYPENAME 1830 . 1838) (punctuation 1818 . 1819) (UNSIGNED 1810 . 1818) (punctuation 1808 . 1809) (symbol 1800 . 1807) (TYPENAME 1791 . 1799) (punctuation 1789 . 1790) (symbol 1782 . 1789) (UNSIGNED 1773 . 1781) (punctuation 1771 . 1772) (symbol 1762 . 1771) (TYPENAME 1753 . 1761) (punctuation 1752 . 1753) (TEMPLATE 1743 . 1751))
      :lexical-table 
        '(("LLVM_ADT_POINTERINTPAIR_H")
          )
)
    (semanticdb-table "semanticdb-table-155561fadd14"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_SEQUENCE_H" variable (:constant-flag t) nil [2549 2568])
            ("cassert" include (:system-flag t) nil [2570 2588])
            ("iterator" include (:system-flag t) nil [2603 2622])
            ("limits" include (:system-flag t) nil [2661 2678])
            ("type_traits" include (:system-flag t) nil [2707 2729])
            ("llvm/Support/MathExtras.h" include nil nil [2829 2865])
            ("llvm" type
               (:members 
                  ( ("enum_iteration_traits" type
                       (:template 
                          ( ("EnumT" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("is_iterable" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol classsubparts) [3371 3396]))                          )
                        (reparse-symbol namespacesubparts) [3295 3399])
                    ("force_iteration_on_noniterable_enum_t" type (:type "struct") (reparse-symbol namespacesubparts) [3401 3512])
                    ("force_iteration_on_noniterable_enum" variable (:type ("force_iteration_on_noniterable_enum_t" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [3601 3679])
                    ("detail" type
                       (:members 
                          ( ("canTypeFitValue" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "bool"
                                :arguments 
                                  ( ("Value" variable
                                       (:constant-flag t
                                        :type ("U" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3825 3839]))                                  )
                                (reparse-symbol namespacesubparts) [3770 4226])
                            ("CheckedInt" type
                               (:members 
                                  ( ("from" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("FromValue" variable (:type ("Integral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4693 4712]))                                          
                                        :type ("CheckedInt" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [4670 4887])
                                    ("from" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("FromValue" variable (:type ("Enum" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5092 5107]))                                          
                                        :type ("CheckedInt" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [5069 5226])
                                    ("==" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("O" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("CheckedInt" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5260 5280]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [5244 5315])
                                    ("!=" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("O" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("CheckedInt" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5334 5354]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [5318 5389])
                                    ("+" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("Offset" variable (:type ("intmax_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5414 5430]))                                          
                                        :type ("CheckedInt" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [5393 5561])
                                    ("-" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("Other" variable (:type ("CheckedInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5584 5601]))                                          
                                        :type ("intmax_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [5565 5729])
                                    ("to" function
                                       (:methodconst-flag t
                                        :type ("Integral" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [5950 6086])
                                    ("to" function
                                       (:methodconst-flag t
                                        :type ("Enum" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [6286 6396])
                                    ("private" label nil (reparse-symbol classsubparts) [6398 6406])
                                    ("assertOutOfBounds" function
                                       (:typemodifiers ("static")
                                        :type "void")
                                        (reparse-symbol classsubparts) [6409 6478])
                                    ("Value" variable (:type ("intmax_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6482 6497]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [4430 6500])
                            ("SafeIntIterator" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("bool" type (:typevar "IsReverse") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("std::random_access_iterator_tag" variable (:type "int") (reparse-symbol classsubparts) [6593 6625])
                                    ("value_type" variable
                                       (:default-value "T"
                                        :type "int")
                                        (reparse-symbol classsubparts) [6634 6649])
                                    ("difference_type" variable
                                       (:default-value "intmax_t"
                                        :type "int")
                                        (reparse-symbol classsubparts) [6658 6685])
                                    ("SafeIntIterator" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("Value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6785 6793]))                                          
                                        :type ("SafeIntIterator" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [6769 6829])
                                    ("SafeIntIterator" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:constant-flag t
                                                :type ("SafeIntIterator" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [6885 6907])
                                            ("" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6907 6909])
                                            ("" variable (:type ("IsReverse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6911 6921])
                                            ("" variable (:type ("O" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6923 6925]))                                          
                                        :type ("SafeIntIterator" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [6869 6939])
                                    ("" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :function-pointer t
                                        :type ("value_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [6960 7011])
                                    ("[]" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("Offset" variable (:type ("intmax_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7050 7066]))                                          
                                        :type ("value_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7028 7102])
                                    ("==" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("O" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("SafeIntIterator" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7200 7225]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [7184 7254])
                                    ("!=" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("O" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("SafeIntIterator" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7273 7298]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [7257 7327])
                                    ("<" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("O" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("SafeIntIterator" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7361 7386]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [7346 7420])
                                    (">" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("O" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("SafeIntIterator" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7438 7463]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [7423 7497])
                                    ("<=" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("O" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("SafeIntIterator" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7516 7541]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [7500 7576])
                                    (">=" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("O" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("SafeIntIterator" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7595 7620]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [7579 7655])
                                    ("++" function
                                       (:operator-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [7688 7720])
                                    ("--" function
                                       (:operator-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [7723 7756])
                                    ("++" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [7817 7821]))                                          
                                        :type ("SafeIntIterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7790 7886])
                                    ("--" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [7916 7920]))                                          
                                        :type ("SafeIntIterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7889 7985])
                                    ("+=" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("Offset" variable (:type ("intmax_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8040 8056]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [8024 8076])
                                    ("-=" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("Offset" variable (:type ("intmax_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8095 8111]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [8079 8132])
                                    ("+" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("Offset" variable (:type ("intmax_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8178 8194]))                                          
                                        :type ("SafeIntIterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [8152 8224])
                                    ("-" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("Offset" variable (:type ("intmax_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8253 8269]))                                          
                                        :type ("SafeIntIterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [8227 8300])
                                    ("-" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("O" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("SafeIntIterator" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [8339 8364]))                                          
                                        :type ("intmax_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [8320 8422])
                                    ("private" label nil (reparse-symbol classsubparts) [8424 8432])
                                    ("SafeIntIterator" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("SI" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("CheckedInt" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [8451 8472]))                                          
                                        :type ("SafeIntIterator" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [8435 8484])
                                    ("getOffset" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("Offset" variable (:type ("intmax_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8514 8530]))                                          
                                        :type ("intmax_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [8488 8577])
                                    ("add" function
                                       (:methodconst-flag t
                                        :arguments 
                                          ( ("Offset" variable (:type ("intmax_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8596 8612]))                                          
                                        :type ("CheckedInt" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [8581 8653])
                                    ("offset" function
                                       (:arguments 
                                          ( ("Offset" variable (:type ("intmax_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8669 8685]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [8657 8718])
                                    ("SI" variable (:type ("CheckedInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8722 8736])
                                    ("SafeIntIterator" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol classsubparts) [8826 8849]))                                  )
                                (reparse-symbol namespacesubparts) [6502 8852]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [3681 8855])
                    ("iota_range" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("value_type" variable
                               (:default-value "T"
                                :type "int")
                                (reparse-symbol classsubparts) [8927 8942])
                            ("detail::SafeIntIterator" variable (:type "int") (reparse-symbol classsubparts) [9024 9067])
                            ("const_iterator" variable
                               (:default-value "iterator"
                                :type "int")
                                (reparse-symbol classsubparts) [9076 9102])
                            ("detail::SafeIntIterator" variable (:type "int") (reparse-symbol classsubparts) [9130 9172])
                            ("const_reverse_iterator" variable
                               (:default-value "reverse_iterator"
                                :type "int")
                                (reparse-symbol classsubparts) [9181 9223])
                            ("difference_type" variable
                               (:default-value "intmax_t"
                                :type "int")
                                (reparse-symbol classsubparts) [9232 9259])
                            ("std::size_t" variable (:type "int") (reparse-symbol classsubparts) [9280 9292])
                            ("iota_range" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Begin" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9316 9324])
                                    ("End" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9325 9331])
                                    ("Inclusive" variable (:type "bool") (reparse-symbol arg-sub-list) [9332 9347]))                                  
                                :type ("iota_range" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [9305 9506])
                            ("size" function
                               (:methodconst-flag t
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9510 9567])
                            ("empty" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [9570 9627])
                            ("begin" function
                               (:methodconst-flag t
                                :type ("auto" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9631 9688])
                            ("end" function
                               (:methodconst-flag t
                                :type ("auto" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9691 9748])
                            ("rbegin" function
                               (:methodconst-flag t
                                :type ("auto" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9752 9824])
                            ("rend" function
                               (:methodconst-flag t
                                :type ("auto" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9827 9895])
                            ("private" label nil (reparse-symbol classsubparts) [9897 9905])
                            ("static_assert" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("std::is_integral::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9922 9950])
                                    ("" variable (:type ("std::is_enum::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9952 9975]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [9908 10030])
                            ("static_assert" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("std::is_same::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10047 10091]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [10033 10144])
                            ("BeginValue" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10148 10168])
                            ("PastEndValue" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10171 10193]))                          )
                        (reparse-symbol namespacesubparts) [8877 10196])
                    ("seq" function
                       (:arguments 
                          ( ("Begin" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10605 10613])
                            ("End" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10614 10620]))                          
                        :type ("auto" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [10596 10667])
                    ("seq_inclusive" function
                       (:arguments 
                          ( ("Begin" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11079 11087])
                            ("End" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11088 11094]))                          
                        :type ("auto" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [11060 11140])
                    ("enum_seq" function
                       (:arguments 
                          ( ("Begin" variable (:type ("EnumT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11596 11608])
                            ("End" variable (:type ("EnumT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11609 11619]))                          
                        :type ("auto" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [11582 11786])
                    ("enum_seq" function
                       (:arguments 
                          ( ("Begin" variable (:type ("EnumT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12325 12337])
                            ("End" variable (:type ("EnumT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12338 12348])
                            ("" variable (:type ("force_iteration_on_noniterable_enum_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12349 12387]))                          
                        :type ("auto" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [12311 12438])
                    ("enum_seq_inclusive" function
                       (:arguments 
                          ( ("Begin" variable (:type ("EnumT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12907 12919])
                            ("End" variable (:type ("EnumT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12920 12930]))                          
                        :type ("auto" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [12883 13096])
                    ("enum_seq_inclusive" function
                       (:arguments 
                          ( ("Begin" variable (:type ("EnumT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13648 13660])
                            ("End" variable (:type ("EnumT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13661 13671])
                            ("" variable (:type ("force_iteration_on_noniterable_enum_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13696 13734]))                          
                        :type ("auto" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [13624 13784]))                  
                :type "namespace")
                nil [2896 13787]))          
      :file "Sequence.h"
      :pointmax 13841
      :fsize 13840
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 13622 . 13623) (punctuation 13621 . 13622) (symbol 13616 . 13621) (punctuation 13615 . 13616) (punctuation 13614 . 13615) (punctuation 13613 . 13614) (symbol 13608 . 13613) (punctuation 13607 . 13608) (symbol 13600 . 13607) (punctuation 13599 . 13600) (punctuation 13598 . 13599) (symbol 13595 . 13598) (punctuation 13594 . 13595) (symbol 13583 . 13594) (punctuation 13582 . 13583) (punctuation 13581 . 13582) (symbol 13578 . 13581) (punctuation 13576 . 13577) (TYPENAME 13567 . 13575) (punctuation 13555 . 13556) (symbol 13550 . 13555) (TYPENAME 13541 . 13549) (punctuation 13540 . 13541) (TEMPLATE 13531 . 13539) (punctuation 12881 . 12882) (punctuation 12880 . 12881) (symbol 12875 . 12880) (punctuation 12874 . 12875) (punctuation 12873 . 12874) (punctuation 12872 . 12873) (symbol 12867 . 12872) (punctuation 12866 . 12867) (symbol 12859 . 12866) (punctuation 12858 . 12859) (punctuation 12857 . 12858) (symbol 12854 . 12857) (punctuation 12853 . 12854) (symbol 12842 . 12853) (punctuation 12841 . 12842) (punctuation 12840 . 12841) (symbol 12837 . 12840) (punctuation 12835 . 12836) (TYPENAME 12826 . 12834) (punctuation 12814 . 12815) (symbol 12809 . 12814) (TYPENAME 12800 . 12808) (punctuation 12799 . 12800) (TEMPLATE 12790 . 12798) (punctuation 12309 . 12310) (punctuation 12308 . 12309) (symbol 12303 . 12308) (punctuation 12302 . 12303) (punctuation 12301 . 12302) (punctuation 12300 . 12301) (symbol 12295 . 12300) (punctuation 12294 . 12295) (symbol 12287 . 12294) (punctuation 12286 . 12287) (punctuation 12285 . 12286) (symbol 12282 . 12285) (punctuation 12281 . 12282) (symbol 12270 . 12281) (punctuation 12269 . 12270) (punctuation 12268 . 12269) (symbol 12265 . 12268) (punctuation 12263 . 12264) (TYPENAME 12254 . 12262) (punctuation 12242 . 12243) (symbol 12237 . 12242) (TYPENAME 12228 . 12236) (punctuation 12227 . 12228) (TEMPLATE 12218 . 12226) (punctuation 11580 . 11581) (punctuation 11579 . 11580) (symbol 11574 . 11579) (punctuation 11573 . 11574) (punctuation 11572 . 11573) (punctuation 11571 . 11572) (symbol 11566 . 11571) (punctuation 11565 . 11566) (symbol 11558 . 11565) (punctuation 11557 . 11558) (punctuation 11556 . 11557) (symbol 11553 . 11556) (punctuation 11552 . 11553) (symbol 11541 . 11552) (punctuation 11540 . 11541) (punctuation 11539 . 11540) (symbol 11536 . 11539) (punctuation 11534 . 11535) (TYPENAME 11525 . 11533) (punctuation 11513 . 11514) (symbol 11508 . 11513) (TYPENAME 11499 . 11507) (punctuation 11498 . 11499) (TEMPLATE 11489 . 11497) (punctuation 11058 . 11059) (punctuation 11057 . 11058) (symbol 11052 . 11057) (punctuation 11051 . 11052) (punctuation 11050 . 11051) (punctuation 11049 . 11050) (symbol 11048 . 11049) (punctuation 11047 . 11048) (symbol 11040 . 11047) (punctuation 11039 . 11040) (punctuation 11038 . 11039) (symbol 11035 . 11038) (punctuation 11034 . 11035) (punctuation 10982 . 10983) (punctuation 10981 . 10982) (symbol 10975 . 10980) (punctuation 10974 . 10975) (punctuation 10973 . 10974) (punctuation 10972 . 10973) (symbol 10971 . 10972) (punctuation 10970 . 10971) (symbol 10959 . 10970) (punctuation 10958 . 10959) (punctuation 10957 . 10958) (symbol 10954 . 10957) (punctuation 10953 . 10954) (symbol 10942 . 10953) (punctuation 10941 . 10942) (punctuation 10940 . 10941) (symbol 10937 . 10940) (punctuation 10935 . 10936) (TYPENAME 10926 . 10934) (punctuation 10924 . 10925) (symbol 10923 . 10924) (TYPENAME 10914 . 10922) (punctuation 10913 . 10914) (TEMPLATE 10904 . 10912) (punctuation 10594 . 10595) (punctuation 10593 . 10594) (symbol 10588 . 10593) (punctuation 10587 . 10588) (punctuation 10586 . 10587) (punctuation 10585 . 10586) (symbol 10584 . 10585) (punctuation 10583 . 10584) (symbol 10576 . 10583) (punctuation 10575 . 10576) (punctuation 10574 . 10575) (symbol 10571 . 10574) (punctuation 10570 . 10571) (punctuation 10518 . 10519) (punctuation 10517 . 10518) (symbol 10511 . 10516) (punctuation 10510 . 10511) (punctuation 10509 . 10510) (punctuation 10508 . 10509) (symbol 10507 . 10508) (punctuation 10506 . 10507) (symbol 10495 . 10506) (punctuation 10494 . 10495) (punctuation 10493 . 10494) (symbol 10490 . 10493) (punctuation 10489 . 10490) (symbol 10478 . 10489) (punctuation 10477 . 10478) (punctuation 10476 . 10477) (symbol 10473 . 10476) (punctuation 10471 . 10472) (TYPENAME 10462 . 10470) (punctuation 10460 . 10461) (symbol 10459 . 10460) (TYPENAME 10450 . 10458) (punctuation 10449 . 10450) (TEMPLATE 10440 . 10448) (string 10108 . 10142) (string 9992 . 10028) (punctuation 9950 . 9951) (punctuation 9949 . 9950) (EXPLICIT 9296 . 9304) (punctuation 9278 . 9279) (symbol 9268 . 9277) (USING 9262 . 9267) (USING 9226 . 9231) (USING 9175 . 9180) (punctuation 9128 . 9129) (symbol 9111 . 9127) (USING 9105 . 9110) (USING 9070 . 9075) (punctuation 9022 . 9023) (symbol 9013 . 9021) (USING 9007 . 9012) (punctuation 9003 . 9004) (punctuation 9002 . 9003) (symbol 9000 . 9001) (CONST 8994 . 8999) (punctuation 8992 . 8993) (symbol 8976 . 8991) (USING 8970 . 8975) (punctuation 8966 . 8967) (punctuation 8965 . 8966) (symbol 8963 . 8964) (punctuation 8961 . 8962) (symbol 8951 . 8960) (USING 8945 . 8950) (USING 8921 . 8926) (FRIEND 8819 . 8825) (punctuation 8817 . 8818) (BOOL 8813 . 8817) (punctuation 8811 . 8812) (TYPENAME 8803 . 8811) (punctuation 8802 . 8803) (TEMPLATE 8793 . 8801) (punctuation 6922 . 6923) (punctuation 6920 . 6921) (punctuation 6910 . 6911) (punctuation 6906 . 6907) (EXPLICIT 6760 . 6768) (punctuation 6732 . 6733) (punctuation 6731 . 6732) (symbol 6729 . 6730) (punctuation 6727 . 6728) (symbol 6717 . 6726) (USING 6711 . 6716) (punctuation 6707 . 6708) (punctuation 6706 . 6707) (symbol 6704 . 6705) (punctuation 6702 . 6703) (symbol 6694 . 6701) (USING 6688 . 6693) (USING 6652 . 6657) (USING 6628 . 6633) (punctuation 6591 . 6592) (symbol 6573 . 6590) (USING 6567 . 6572) (punctuation 6282 . 6283) (number 6281 . 6282) (punctuation 6279 . 6280) (punctuation 6277 . 6278) (BOOL 6273 . 6277) (punctuation 6271 . 6272) (symbol 6266 . 6271) (punctuation 6265 . 6266) (punctuation 6264 . 6265) (punctuation 6263 . 6264) (symbol 6259 . 6263) (punctuation 6258 . 6259) (symbol 6251 . 6258) (punctuation 6250 . 6251) (punctuation 6249 . 6250) (symbol 6246 . 6249) (punctuation 6245 . 6246) (symbol 6234 . 6245) (punctuation 6233 . 6234) (punctuation 6232 . 6233) (symbol 6229 . 6232) (TYPENAME 6220 . 6228) (punctuation 6206 . 6207) (symbol 6202 . 6206) (TYPENAME 6193 . 6201) (punctuation 6192 . 6193) (TEMPLATE 6183 . 6191) (punctuation 5946 . 5947) (number 5945 . 5946) (punctuation 5943 . 5944) (punctuation 5941 . 5942) (BOOL 5937 . 5941) (punctuation 5935 . 5936) (symbol 5930 . 5935) (punctuation 5929 . 5930) (punctuation 5928 . 5929) (punctuation 5927 . 5928) (symbol 5919 . 5927) (punctuation 5918 . 5919) (symbol 5907 . 5918) (punctuation 5906 . 5907) (punctuation 5905 . 5906) (symbol 5902 . 5905) (punctuation 5865 . 5866) (symbol 5854 . 5865) (punctuation 5853 . 5854) (punctuation 5852 . 5853) (symbol 5849 . 5852) (TYPENAME 5840 . 5848) (punctuation 5838 . 5839) (symbol 5830 . 5838) (TYPENAME 5821 . 5829) (punctuation 5820 . 5821) (TEMPLATE 5811 . 5819) (punctuation 5065 . 5066) (number 5064 . 5065) (punctuation 5062 . 5063) (punctuation 5060 . 5061) (BOOL 5056 . 5060) (punctuation 5054 . 5055) (symbol 5049 . 5054) (punctuation 5048 . 5049) (punctuation 5047 . 5048) (punctuation 5046 . 5047) (symbol 5042 . 5046) (punctuation 5041 . 5042) (symbol 5034 . 5041) (punctuation 5033 . 5034) (punctuation 5032 . 5033) (symbol 5029 . 5032) (punctuation 5028 . 5029) (symbol 5017 . 5028) (punctuation 5016 . 5017) (punctuation 5015 . 5016) (symbol 5012 . 5015) (TYPENAME 5003 . 5011) (punctuation 4989 . 4990) (symbol 4985 . 4989) (TYPENAME 4976 . 4984) (punctuation 4975 . 4976) (TEMPLATE 4966 . 4974) (punctuation 4666 . 4667) (number 4665 . 4666) (punctuation 4663 . 4664) (punctuation 4661 . 4662) (BOOL 4657 . 4661) (punctuation 4655 . 4656) (symbol 4650 . 4655) (punctuation 4649 . 4650) (punctuation 4648 . 4649) (punctuation 4647 . 4648) (symbol 4639 . 4647) (punctuation 4638 . 4639) (symbol 4627 . 4638) (punctuation 4626 . 4627) (punctuation 4625 . 4626) (symbol 4622 . 4625) (punctuation 4585 . 4586) (symbol 4574 . 4585) (punctuation 4573 . 4574) (punctuation 4572 . 4573) (symbol 4569 . 4572) (TYPENAME 4560 . 4568) (punctuation 4558 . 4559) (symbol 4550 . 4558) (TYPENAME 4541 . 4549) (punctuation 4540 . 4541) (TEMPLATE 4531 . 4539) (symbol 3591 . 3600) (punctuation 3508 . 3509) (DEFAULT 3501 . 3508) (punctuation 3499 . 3500) (semantic-list 3496 . 3498) (symbol 3459 . 3496) (EXPLICIT 3450 . 3458) (symbol 3361 . 3370) (STATIC 3354 . 3360))
      :lexical-table 
        '(("LLVM_ADT_SEQUENCE_H")
          )
)
    (semanticdb-table "semanticdb-table-155561fb5226"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_STRINGMAPENTRY_H" variable (:constant-flag t) nil [724 749])
            ("llvm/ADT/None.h" include nil nil [751 777])
            ("llvm/ADT/StringRef.h" include nil nil [778 809])
            ("llvm/ADT/STLFunctionalExtras.h" include nil nil [810 851])
            ("llvm" type
               (:members 
                  ( ("StringMapEntryBase" type
                       (:members 
                          ( ("keyLength" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [972 989])
                            ("public" label nil (reparse-symbol classsubparts) [991 998])
                            ("StringMapEntryBase" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("keyLength" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1029 1046]))                                  
                                :type ("StringMapEntryBase" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1010 1072])
                            ("getKeyLength" function
                               (:methodconst-flag t
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1076 1125])
                            ("protected" label nil (reparse-symbol classsubparts) [1127 1137])
                            ("allocateWithKey" function
                               (:template 
                                  ( ("AllocatorTy" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("EntrySize" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1415 1432])
                                    ("EntryAlign" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1433 1451])
                                    ("Key" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1483 1497])
                                    ("Allocator" variable
                                       (:reference 1
                                        :type ("AllocatorTy" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1498 1521]))                                  
                                :typemodifiers ("static")
                                :pointer 1
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [1352 1522]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [943 1525])
                    ("allocateWithKey" function
                       (:template 
                          ( ("AllocatorTy" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("EntrySize" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1645 1662])
                            ("EntryAlign" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1663 1681])
                            ("Key" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1724 1738])
                            ("Allocator" variable
                               (:reference 1
                                :type ("AllocatorTy" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1781 1804]))                          
                        :parent "StringMapEntryBase"
                        :pointer 1)
                        (reparse-symbol namespacesubparts) [1571 2355])
                    ("StringMapEntryStorage" type
                       (:template 
                          ( ("ValueTy" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [2688 2695])
                            ("second" variable (:type ("ValueTy" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2698 2713])
                            ("StringMapEntryStorage" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("keyLength" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2748 2765]))                                  
                                :type ("StringMapEntryStorage" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2726 2816])
                            ("StringMapEntryStorage" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("keyLength" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2873 2890])
                                    ("" variable
                                       (:reference 1
                                        :type ("InitTy" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2891 2900])
                                    ("" variable (:type ("initVals" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2904 2913]))                                  
                                :type ("StringMapEntryStorage" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2851 3005])
                            ("getValue" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("ValueTy" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3069 3119])
                            ("getValue" function (:type ("ValueTy" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3122 3160])
                            ("setValue" function
                               (:arguments 
                                  ( ("V" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("ValueTy" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3178 3195]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [3164 3211]))                          
                        :superclasses 
                          ( ("StringMapEntryBase" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [2602 3214])
                    ("StringMapEntryStorage" type
                       (:type "class"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [3296 3303])
                            ("StringMapEntryStorage" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("keyLength" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3337 3354])
                                    ("" variable (:type ("NoneType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3355 3370]))                                  
                                :type ("StringMapEntryStorage" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3315 3412])
                            ("getValue" function
                               (:methodconst-flag t
                                :type ("NoneType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3480 3522]))                          
                        :superclasses 
                          ( ("StringMapEntryBase" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :template-specifier 
                          ( ("NoneType" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [3216 3525])
                    ("StringMapEntryStorage" variable (:type "int") (reparse-symbol namespacesubparts) [3762 5602]))                  
                :type "namespace")
                nil [853 5605]))          
      :file "StringMapEntry.h"
      :pointmax 5665
      :fsize 5664
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((PUBLIC 3755 . 3761) (punctuation 3753 . 3754) (symbol 3747 . 3752) (symbol 3732 . 3746) (CLASS 3726 . 3731) (punctuation 3724 . 3725) (symbol 3717 . 3724) (TYPENAME 3708 . 3716) (punctuation 3707 . 3708) (TEMPLATE 3698 . 3706) (punctuation 3475 . 3476) (DELETE 3469 . 3475) (punctuation 3467 . 3468) (semantic-list 3436 . 3466) (symbol 3415 . 3436) (EXPLICIT 3306 . 3314) (punctuation 3064 . 3065) (DELETE 3058 . 3064) (punctuation 3056 . 3057) (semantic-list 3029 . 3055) (symbol 3008 . 3029) (punctuation 2902 . 2903) (punctuation 2901 . 2902) (punctuation 2900 . 2901) (punctuation 2899 . 2900) (punctuation 2847 . 2848) (symbol 2841 . 2847) (punctuation 2839 . 2840) (punctuation 2838 . 2839) (punctuation 2837 . 2838) (TYPENAME 2829 . 2837) (punctuation 2828 . 2829) (TEMPLATE 2819 . 2827) (EXPLICIT 2717 . 2725) (EXPLICIT 1001 . 1009))
      :lexical-table 
        '(("LLVM_ADT_STRINGMAPENTRY_H")
          )
)
    (semanticdb-table "semanticdb-table-155561c7ee02"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_FLOATINGPOINTMODE_H" variable (:constant-flag t) nil [592 620])
            ("llvm/ADT/StringSwitch.h" include nil nil [622 656])
            ("llvm/Support/raw_ostream.h" include nil nil [657 694])
            ("llvm" type
               (:members 
                  ( ("RoundingMode" type
                       (:superclasses 
                          ( ("int8_t" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1398 1857])
                    ("spell" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("RM" variable (:type ("RoundingMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1942 1958]))                          
                        :type ("StringRef" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1919 2347])
                    ("<<" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("OS" variable
                               (:reference 1
                                :type ("raw_ostream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2382 2398])
                            ("RM" variable (:type ("RoundingMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2399 2415]))                          
                        :type ("raw_ostream" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [2349 2451])
                    ("DenormalMode" type
                       (:members 
                          ( ("int8_t" variable (:type "int") (reparse-symbol classsubparts) [2700 2947])
                            ("DenormalModeKind::Invalid" variable (:type "int") (reparse-symbol classsubparts) [3094 3120])
                            ("DenormalModeKind::Invalid" variable (:type "int") (reparse-symbol classsubparts) [3378 3404])
                            ("DenormalMode" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Out" variable (:type ("DenormalModeKind" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3469 3490])
                                    ("In" variable (:type ("DenormalModeKind" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3491 3511]))                                  
                                :type ("constexpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3446 3543])
                            ("getInvalid" function (:type ("DenormalMode" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3565 3675])
                            ("getIEEE" function (:type ("DenormalMode" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3696 3797])
                            ("getPreserveSign" function (:type ("DenormalMode" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3818 3967])
                            ("getPositiveZero" function (:type ("DenormalMode" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3988 4137])
                            ("==" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("Other" variable (:type ("DenormalMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4157 4176]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [4141 4247])
                            ("!=" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("Other" variable (:type ("DenormalMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4267 4286]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [4251 4328])
                            ("isSimple" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [4332 4387])
                            ("isValid" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [4391 4514])
                            ("print" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("inline")
                                :arguments 
                                  ( ("OS" variable
                                       (:reference 1
                                        :type ("raw_ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4536 4552]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [4518 4559])
                            ("str" function
                               (:methodconst-flag t
                                :typemodifiers ("inline")
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4563 4696]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [2546 4699])
                    ("<<" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("OS" variable
                               (:reference 1
                                :type ("raw_ostream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4732 4748])
                            ("Mode" variable (:type ("DenormalMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4749 4767]))                          
                        :type ("raw_ostream" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [4701 4802])
                    ("parseDenormalFPAttributeComponent" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("Str" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4942 4956]))                          
                        :type ("DenormalMode::DenormalModeKind" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [4870 5252])
                    ("denormalModeKindName" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("Mode" variable (:type ("DenormalMode::DenormalModeKind" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5420 5456]))                          
                        :type ("StringRef" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [5382 5680])
                    ("parseDenormalFPAttribute" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("Str" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5788 5802]))                          
                        :type ("DenormalMode" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [5743 6199])
                    ("print" function
                       (:methodconst-flag t
                        :parent "DenormalMode"
                        :arguments 
                          ( ("OS" variable
                               (:reference 1
                                :type ("raw_ostream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6226 6242]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [6201 6328]))                  
                :type "namespace")
                nil [696 6331]))          
      :file "FloatingPointMode.h"
      :pointmax 6372
      :fsize 6371
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((symbol 3978 . 3987) (STATIC 3971 . 3977) (symbol 3808 . 3817) (STATIC 3801 . 3807) (symbol 3686 . 3695) (STATIC 3679 . 3685) (symbol 3555 . 3564) (STATIC 3548 . 3554) (punctuation 3442 . 3443) (DEFAULT 3435 . 3442) (punctuation 3433 . 3434) (semantic-list 3430 . 3432) (symbol 3418 . 3430) (symbol 3408 . 3417) (punctuation 3376 . 3377) (symbol 3370 . 3375) (symbol 3353 . 3369) (punctuation 3092 . 3093) (symbol 3085 . 3091) (symbol 3068 . 3084) (punctuation 2698 . 2699) (symbol 2681 . 2697) (ENUM 2676 . 2680) (number 1822 . 1823) (punctuation 1821 . 1822) (punctuation 1819 . 1820) (symbol 1811 . 1818) (punctuation 1761 . 1762) (number 1760 . 1761) (punctuation 1758 . 1759) (symbol 1750 . 1757) (punctuation 1699 . 1700) (number 1698 . 1699) (punctuation 1696 . 1697) (symbol 1678 . 1695) (punctuation 1645 . 1646) (number 1644 . 1645) (punctuation 1642 . 1643) (symbol 1624 . 1638) (punctuation 1591 . 1592) (number 1590 . 1591) (punctuation 1588 . 1589) (symbol 1570 . 1584) (punctuation 1541 . 1542) (number 1540 . 1541) (punctuation 1538 . 1539) (symbol 1520 . 1537) (punctuation 1491 . 1492) (number 1490 . 1491) (punctuation 1488 . 1489) (symbol 1470 . 1480) (ENUM 1393 . 1397))
      :lexical-table 
        '(("LLVM_ADT_FLOATINGPOINTMODE_H")
          )
)
    (semanticdb-table "semanticdb-table-155561fa8b30"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_PRIORITYWORKLIST_H" variable (:constant-flag t) nil [598 625])
            ("llvm/ADT/DenseMap.h" include nil nil [627 657])
            ("llvm/ADT/STLExtras.h" include nil nil [658 689])
            ("llvm/ADT/SmallVector.h" include nil nil [690 723])
            ("llvm/Support/Compiler.h" include nil nil [724 758])
            ("cassert" include (:system-flag t) nil [759 777])
            ("cstddef" include (:system-flag t) nil [778 796])
            ("iterator" include (:system-flag t) nil [797 816])
            ("type_traits" include (:system-flag t) nil [817 839])
            ("vector" include (:system-flag t) nil [840 857])
            ("llvm" type
               (:members 
                  ( ("PriorityWorklist" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [2281 2288])
                            ("value_type" variable
                               (:default-value "T"
                                :type "int")
                                (reparse-symbol classsubparts) [2297 2312])
                            ("key_type" variable
                               (:default-value "T"
                                :type "int")
                                (reparse-symbol classsubparts) [2321 2334])
                            ("MapT::size_type" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [2415 2440])
                            ("empty" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [2576 2622])
                            ("size" function
                               (:methodconst-flag t
                                :type ("size_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2680 2729])
                            ("count" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("key" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("key_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2900 2920]))                                  
                                :type ("size_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2884 2957])
                            ("back" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3016 3137])
                            ("insert" function
                               (:arguments 
                                  ( ("X" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3282 3293]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [3270 3898])
                            ("insert" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("SequenceT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4070 4082])
                                    ("" variable (:type ("Input" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4082 4088]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [4063 5007])
                            ("pop_back" function (:type "void") (reparse-symbol classsubparts) [5066 5318])
                            ("pop_back_val" function (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5337 5411])
                            ("erase" function
                               (:arguments 
                                  ( ("X" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5559 5570]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [5548 5923])
                            ("erase_if" function
                               (:template 
                                  ( ("UnaryPredicate" type (:type "class") nil nil))                                  
                                :type "bool"
                                :arguments 
                                  ( ("P" variable (:type ("UnaryPredicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6408 6425]))                                  )
                                (reparse-symbol classsubparts) [6357 6709])
                            ("clear" function (:type "void") (reparse-symbol classsubparts) [6942 6990])
                            ("private" label nil (reparse-symbol classsubparts) [6992 7000])
                            ("TestAndEraseFromMap" type
                               (:template 
                                  ( ("UnaryPredicateT" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("P" variable (:type ("UnaryPredicateT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7386 7404])
                                    ("M" variable (:type ("MapT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7409 7417])
                                    ("public" label nil (reparse-symbol classsubparts) [7421 7428])
                                    ("TestAndEraseFromMap" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("P" variable (:type ("UnaryPredicateT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7453 7471])
                                            ("M" variable
                                               (:reference 1
                                                :type ("MapT" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7472 7480]))                                          
                                        :type ("TestAndEraseFromMap" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7433 7515])
                                    ("()" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("Arg" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7537 7550]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [7521 7747]))                                  )
                                (reparse-symbol classsubparts) [7316 7752])
                            ("M" variable (:type ("MapT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7805 7812])
                            ("V" variable (:type ("VectorT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7865 7875]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [2256 7878])
                    ("SmallPriorityWorklist" type
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("unsigned int" type (:typevar "N") nil nil))                          
                        :type "class"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [8170 8177]))                          
                        :superclasses 
                          ( ("PriorityWorklist" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [7995 8217]))                  
                :type "namespace")
                nil [859 8220]))          
      :file "PriorityWorklist.h"
      :pointmax 8282
      :fsize 8281
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 8213 . 8214) (DEFAULT 8206 . 8213) (punctuation 8204 . 8205) (semantic-list 8201 . 8203) (symbol 8180 . 8201) (symbol 5322 . 5336) (punctuation 4081 . 4082) (punctuation 4059 . 4060) (symbol 4054 . 4059) (punctuation 4053 . 4054) (punctuation 4052 . 4053) (punctuation 4051 . 4052) (symbol 4050 . 4051) (punctuation 4048 . 4049) (symbol 4039 . 4048) (punctuation 4038 . 4039) (symbol 4024 . 4038) (punctuation 4023 . 4024) (punctuation 4022 . 4023) (symbol 4019 . 4022) (punctuation 4018 . 4019) (punctuation 4017 . 4018) (symbol 4006 . 4017) (punctuation 4005 . 4006) (punctuation 4004 . 4005) (symbol 4001 . 4004) (punctuation 3997 . 3998) (symbol 3988 . 3997) (TYPENAME 3979 . 3987) (punctuation 3978 . 3979) (TEMPLATE 3969 . 3977) (punctuation 2514 . 2515) (DEFAULT 2507 . 2514) (punctuation 2505 . 2506) (semantic-list 2502 . 2504) (symbol 2486 . 2502) (punctuation 2413 . 2414) (symbol 2403 . 2412) (USING 2397 . 2402) (punctuation 2393 . 2394) (punctuation 2392 . 2393) (symbol 2391 . 2392) (CONST 2385 . 2390) (punctuation 2383 . 2384) (symbol 2367 . 2382) (USING 2361 . 2366) (punctuation 2357 . 2358) (punctuation 2356 . 2357) (symbol 2355 . 2356) (punctuation 2353 . 2354) (symbol 2343 . 2352) (USING 2337 . 2342) (USING 2315 . 2320) (USING 2291 . 2296) (punctuation 2254 . 2255) (punctuation 2253 . 2254) (symbol 2244 . 2253) (punctuation 2242 . 2243) (symbol 2241 . 2242) (punctuation 2240 . 2241) (symbol 2232 . 2240) (punctuation 2230 . 2231) (symbol 2225 . 2229) (TYPENAME 2216 . 2224) (punctuation 2204 . 2205) (punctuation 2203 . 2204) (symbol 2202 . 2203) (punctuation 2201 . 2202) (symbol 2195 . 2201) (punctuation 2194 . 2195) (punctuation 2193 . 2194) (symbol 2190 . 2193) (punctuation 2188 . 2189) (symbol 2180 . 2187) (TYPENAME 2171 . 2179) (punctuation 2169 . 2170) (symbol 2168 . 2169) (TYPENAME 2159 . 2167) (punctuation 2158 . 2159) (TEMPLATE 2149 . 2157))
      :lexical-table 
        '(("LLVM_ADT_PRIORITYWORKLIST_H")
          )
)
    (semanticdb-table "semanticdb-table-155562102720"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_DEPTHFIRSTITERATOR_H" variable (:constant-flag t) nil [1488 1517])
            ("llvm/ADT/GraphTraits.h" include nil nil [1519 1552])
            ("llvm/ADT/None.h" include nil nil [1553 1579])
            ("llvm/ADT/Optional.h" include nil nil [1580 1610])
            ("llvm/ADT/SmallPtrSet.h" include nil nil [1611 1644])
            ("llvm/ADT/iterator_range.h" include nil nil [1645 1681])
            ("iterator" include (:system-flag t) nil [1682 1701])
            ("utility" include (:system-flag t) nil [1702 1720])
            ("vector" include (:system-flag t) nil [1721 1738])
            ("llvm" type
               (:members 
                  ( ("df_iterator_storage" type
                       (:template 
                          ( ("SetType" type (:type "class") nil nil)
                            ("bool" type (:typevar "External") nil nil))                          
                        :type "class"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [1951 1958])
                            ("Visited" variable (:type ("SetType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1961 1977]))                          )
                        (reparse-symbol namespacesubparts) [1862 1980])
                    ("df_iterator_storage" type
                       (:template 
                          ( ("SetType" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [2049 2056])
                            ("df_iterator_storage" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("VSet" variable
                                       (:reference 1
                                        :type ("SetType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2079 2093]))                                  
                                :type ("df_iterator_storage" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2059 2112])
                            ("df_iterator_storage" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("S" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("df_iterator_storage" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2135 2164]))                                  
                                :type ("df_iterator_storage" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2115 2188])
                            ("Visited" variable (:type ("SetType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2192 2209]))                          
                        :template-specifier 
                          ( ("SetType" type nil nil nil)
                            ("true" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [1982 2212])
                    ("df_iterator_default_set" type
                       (:superclasses 
                          ( ("SmallPtrSet" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("SmallPtrSet" variable (:type "int") (reparse-symbol classsubparts) [2641 2673])
                            ("BaseSet::iterator" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [2693 2720])
                            ("insert" function
                               (:arguments 
                                  ( ("N" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2756 2766]))                                  
                                :type ("std::pair" type
                                     (:template-specifier 
                                        ( ("iterator" type nil nil nil)
                                          ("bool" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [2724 2797])
                            ("insert" function
                               (:template 
                                  ( ("IterT" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("Begin" variable (:type ("IterT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2840 2852])
                                    ("End" variable (:type ("IterT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2853 2863]))                                  )
                                (reparse-symbol classsubparts) [2800 2895])
                            ("completed" function
                               (:arguments 
                                  ( ("" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2914 2922]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [2899 2925]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [2549 2928])
                    ("df_iterator" type
                       (:superclasses 
                          ( ("df_iterator_storage" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [3227 3234])
                            ("std::forward_iterator_tag" variable (:type "int") (reparse-symbol classsubparts) [3263 3289])
                            ("GT::NodeRef" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [3311 3332])
                            ("std::ptrdiff_t" variable (:type "int") (reparse-symbol classsubparts) [3359 3374])
                            ("private" label nil (reparse-symbol classsubparts) [3442 3450])
                            ("GT::NodeRef" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [3469 3490])
                            ("GT::ChildIteratorType" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [3511 3542])
                            ("std::pair" variable (:type "int") (reparse-symbol classsubparts) [3732 3772])
                            ("VisitStack" variable (:type ("std::vector" type
                                 (:template-specifier 
                                    ( ("StackElement" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [3846 3883])
                            ("df_iterator" function
                               (:constructor-flag t
                                :typemodifiers ("inline")
                                :arguments 
                                  ( ("Node" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3906 3919]))                                  
                                :type ("df_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3887 4009])
                            ("df_iterator" function
                               (:constructor-flag t
                                :typemodifiers ("inline")
                                :arguments 
                                  ( ("Node" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4097 4110])
                                    ("S" variable
                                       (:reference 1
                                        :type ("SetType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4111 4122]))                                  
                                :type ("df_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4078 4277])
                            ("df_iterator" function
                               (:constructor-flag t
                                :typemodifiers ("inline")
                                :arguments 
                                  ( ("S" variable
                                       (:reference 1
                                        :type ("SetType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4300 4311]))                                  
                                :type ("df_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4281 4401])
                            ("toNext" function
                               (:typemodifiers ("inline")
                                :type "void")
                                (reparse-symbol classsubparts) [4405 5223])
                            ("public" label nil (reparse-symbol classsubparts) [5225 5232])
                            ("begin" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("G" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("GraphT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5331 5347]))                                  
                                :type ("df_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5306 5398])
                            ("end" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("G" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("GraphT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5424 5440]))                                  
                                :type ("df_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5401 5466])
                            ("begin" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("G" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("GraphT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5572 5588])
                                    ("S" variable
                                       (:reference 1
                                        :type ("SetType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5589 5600]))                                  
                                :type ("df_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5547 5654])
                            ("end" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("G" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("GraphT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5680 5696])
                                    ("S" variable
                                       (:reference 1
                                        :type ("SetType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5697 5708]))                                  
                                :type ("df_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5657 5735])
                            ("==" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("x" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("df_iterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5755 5776]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [5739 5827])
                            ("!=" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("x" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("df_iterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5846 5867]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [5830 5899])
                            ("" function
                               (:methodconst-flag t
                                :operator-flag t
                                :function-pointer t
                                :constant-flag t
                                :type ("NodeRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5903 5971])
                            ("->" function
                               (:methodconst-flag t
                                :operator-flag t
                                :type ("NodeRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6207 6252])
                            ("++" function
                               (:operator-flag t
                                :type ("df_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6256 6335])
                            ("skipChildren" function (:type ("df_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6568 6691])
                            ("++" function
                               (:operator-flag t
                                :arguments 
                                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [6718 6722]))                                  
                                :type ("df_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6695 6803])
                            ("nodeVisited" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Node" variable (:type ("NodeRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7057 7070]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [7040 7123])
                            ("getPathLength" function
                               (:methodconst-flag t
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [7247 7307])
                            ("getPath" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("n" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [7423 7434]))                                  
                                :type ("NodeRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7407 7472]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [3157 7475])
                    ("df_begin" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("df_iterator" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("G" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7601 7612]))                          )
                        (reparse-symbol namespacesubparts) [7558 7651])
                    ("df_end" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("df_iterator" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("G" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7694 7705]))                          )
                        (reparse-symbol namespacesubparts) [7653 7742])
                    ("depth_first" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("iterator_range" type
                             (:template-specifier 
                                ( ("df_iterator" type (:template-specifier 
                                    ( ("T" type nil nil nil))                                    ) nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("G" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7873 7884]))                          )
                        (reparse-symbol namespacesubparts) [7811 7933])
                    ("df_ext_iterator" type
                       (:superclasses 
                          ( ("df_iterator" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("df_ext_iterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("df_iterator" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil)
                                                  ("SetTy" type nil nil nil)
                                                  ("true" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [8174 8211]))                                  
                                :type ("df_ext_iterator" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [8158 8251]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [8094 8254])
                    ("df_ext_begin" function
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("SetTy" type (:type "class") nil nil))                          
                        :type ("df_ext_iterator" type
                             (:template-specifier 
                                ( ("T" type nil nil nil)
                                  ("SetTy" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("G" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8327 8338])
                            ("S" variable
                               (:reference 1
                                :type ("SetTy" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8339 8348]))                          )
                        (reparse-symbol namespacesubparts) [8256 8401])
                    ("df_ext_end" function
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("SetTy" type (:type "class") nil nil))                          
                        :type ("df_ext_iterator" type
                             (:template-specifier 
                                ( ("T" type nil nil nil)
                                  ("SetTy" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("G" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8472 8483])
                            ("S" variable
                               (:reference 1
                                :type ("SetTy" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8484 8493]))                          )
                        (reparse-symbol namespacesubparts) [8403 8544])
                    ("depth_first_ext" function
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("SetTy" type (:type "class") nil nil))                          
                        :type ("iterator_range" type
                             (:template-specifier 
                                ( ("df_ext_iterator" type (:template-specifier 
                                    ( ("T" type nil nil nil)
                                      ("SetTy" type nil nil nil))                                    ) nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("G" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8636 8647])
                            ("S" variable
                               (:reference 1
                                :type ("SetTy" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8706 8715]))                          )
                        (reparse-symbol namespacesubparts) [8546 8778])
                    ("idf_iterator" type
                       (:superclasses 
                          ( ("df_iterator" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("idf_iterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("df_iterator" type
                                             (:template-specifier 
                                                ( ("Inverse" type (:template-specifier 
                                                    ( ("T" type nil nil nil))                                                    ) nil nil)
                                                  ("SetTy" type nil nil nil)
                                                  ("External" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [9082 9132]))                                  
                                :type ("idf_iterator" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [9069 9185]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [8995 9188])
                    ("idf_begin" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("idf_iterator" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("G" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9235 9246]))                          )
                        (reparse-symbol namespacesubparts) [9190 9298])
                    ("idf_end" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("idf_iterator" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("G" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9343 9354]))                          )
                        (reparse-symbol namespacesubparts) [9300 9403])
                    ("inverse_depth_first" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("iterator_range" type
                             (:template-specifier 
                                ( ("idf_iterator" type (:template-specifier 
                                    ( ("T" type nil nil nil))                                    ) nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("G" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9543 9554]))                          )
                        (reparse-symbol namespacesubparts) [9472 9605])
                    ("idf_ext_iterator" type
                       (:superclasses 
                          ( ("idf_iterator" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("idf_ext_iterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("idf_iterator" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil)
                                                  ("SetTy" type nil nil nil)
                                                  ("true" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [9857 9895]))                                  
                                :type ("idf_ext_iterator" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [9840 9936])
                            ("idf_ext_iterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("df_iterator" type
                                             (:template-specifier 
                                                ( ("Inverse" type (:template-specifier 
                                                    ( ("T" type nil nil nil))                                                    ) nil nil)
                                                  ("SetTy" type nil nil nil)
                                                  ("true" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [9956 10002]))                                  
                                :type ("idf_ext_iterator" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [9939 10043]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [9774 10046])
                    ("idf_ext_begin" function
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("SetTy" type (:type "class") nil nil))                          
                        :type ("idf_ext_iterator" type
                             (:template-specifier 
                                ( ("T" type nil nil nil)
                                  ("SetTy" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("G" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10121 10132])
                            ("S" variable
                               (:reference 1
                                :type ("SetTy" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10133 10142]))                          )
                        (reparse-symbol namespacesubparts) [10048 10208])
                    ("idf_ext_end" function
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("SetTy" type (:type "class") nil nil))                          
                        :type ("idf_ext_iterator" type
                             (:template-specifier 
                                ( ("T" type nil nil nil)
                                  ("SetTy" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("G" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10281 10292])
                            ("S" variable
                               (:reference 1
                                :type ("SetTy" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10293 10302]))                          )
                        (reparse-symbol namespacesubparts) [10210 10366])
                    ("inverse_depth_first_ext" function
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("SetTy" type (:type "class") nil nil))                          
                        :type ("iterator_range" type
                             (:template-specifier 
                                ( ("idf_ext_iterator" type (:template-specifier 
                                    ( ("T" type nil nil nil)
                                      ("SetTy" type nil nil nil))                                    ) nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("G" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10467 10478])
                            ("S" variable
                               (:reference 1
                                :type ("SetTy" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10546 10555]))                          )
                        (reparse-symbol namespacesubparts) [10368 10620]))                  
                :type "namespace")
                nil [1740 10623]))          
      :file "DepthFirstIterator.h"
      :pointmax 10687
      :fsize 10686
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 9772 . 9773) (punctuation 9771 . 9772) (symbol 9764 . 9771) (punctuation 9763 . 9764) (punctuation 9762 . 9763) (punctuation 9761 . 9762) (symbol 9760 . 9761) (punctuation 9759 . 9760) (symbol 9748 . 9759) (TYPENAME 9739 . 9747) (punctuation 9738 . 9739) (symbol 9715 . 9738) (punctuation 9713 . 9714) (symbol 9707 . 9712) (CLASS 9701 . 9706) (punctuation 9699 . 9700) (symbol 9698 . 9699) (CLASS 9692 . 9697) (punctuation 9691 . 9692) (TEMPLATE 9682 . 9690) (punctuation 8993 . 8994) (symbol 8988 . 8993) (punctuation 8986 . 8987) (symbol 8977 . 8985) (BOOL 8972 . 8976) (punctuation 8960 . 8961) (punctuation 8959 . 8960) (symbol 8952 . 8959) (punctuation 8951 . 8952) (punctuation 8950 . 8951) (punctuation 8949 . 8950) (symbol 8948 . 8949) (punctuation 8947 . 8948) (symbol 8936 . 8947) (TYPENAME 8927 . 8935) (punctuation 8926 . 8927) (symbol 8903 . 8926) (punctuation 8887 . 8888) (symbol 8881 . 8886) (CLASS 8875 . 8880) (punctuation 8863 . 8864) (symbol 8862 . 8863) (CLASS 8856 . 8861) (punctuation 8855 . 8856) (TEMPLATE 8846 . 8854) (punctuation 8092 . 8093) (punctuation 8091 . 8092) (symbol 8084 . 8091) (punctuation 8083 . 8084) (punctuation 8082 . 8083) (punctuation 8081 . 8082) (symbol 8080 . 8081) (punctuation 8079 . 8080) (symbol 8068 . 8079) (TYPENAME 8059 . 8067) (punctuation 8058 . 8059) (symbol 8035 . 8058) (punctuation 8033 . 8034) (symbol 8027 . 8032) (CLASS 8021 . 8026) (punctuation 8019 . 8020) (symbol 8018 . 8019) (CLASS 8012 . 8017) (punctuation 8011 . 8012) (TEMPLATE 8002 . 8010) (punctuation 4043 . 4044) (DEFAULT 4036 . 4043) (punctuation 4034 . 4035) (semantic-list 4031 . 4033) (symbol 4020 . 4031) (INLINE 4013 . 4019) (punctuation 3730 . 3731) (symbol 3717 . 3729) (USING 3711 . 3716) (punctuation 3509 . 3510) (symbol 3499 . 3508) (USING 3493 . 3498) (punctuation 3467 . 3468) (symbol 3459 . 3466) (USING 3453 . 3458) (punctuation 3439 . 3440) (punctuation 3438 . 3439) (symbol 3427 . 3437) (punctuation 3425 . 3426) (symbol 3415 . 3424) (USING 3409 . 3414) (punctuation 3405 . 3406) (punctuation 3404 . 3405) (symbol 3393 . 3403) (punctuation 3391 . 3392) (symbol 3383 . 3390) (USING 3377 . 3382) (punctuation 3357 . 3358) (symbol 3341 . 3356) (USING 3335 . 3340) (punctuation 3309 . 3310) (symbol 3298 . 3308) (USING 3292 . 3297) (punctuation 3261 . 3262) (symbol 3243 . 3260) (USING 3237 . 3242) (punctuation 3155 . 3156) (punctuation 3154 . 3155) (symbol 3148 . 3154) (punctuation 3147 . 3148) (symbol 3136 . 3147) (punctuation 3134 . 3135) (symbol 3131 . 3133) (CLASS 3125 . 3130) (punctuation 3123 . 3124) (symbol 3118 . 3123) (punctuation 3116 . 3117) (symbol 3105 . 3115) (BOOL 3100 . 3104) (punctuation 3088 . 3089) (punctuation 3087 . 3088) (symbol 3080 . 3087) (punctuation 3079 . 3080) (punctuation 3078 . 3079) (punctuation 3077 . 3078) (symbol 3071 . 3077) (punctuation 3070 . 3071) (symbol 3059 . 3070) (TYPENAME 3050 . 3058) (punctuation 3049 . 3050) (symbol 3026 . 3049) (punctuation 3010 . 3011) (symbol 3002 . 3009) (CLASS 2996 . 3001) (punctuation 2984 . 2985) (symbol 2978 . 2984) (CLASS 2972 . 2977) (punctuation 2971 . 2972) (TEMPLATE 2962 . 2970) (punctuation 2691 . 2692) (symbol 2682 . 2690) (USING 2676 . 2681) (punctuation 2639 . 2640) (symbol 2631 . 2638) (USING 2625 . 2630) (punctuation 2547 . 2548) (number 2546 . 2547) (punctuation 2545 . 2546) (symbol 2536 . 2545) (UNSIGNED 2527 . 2535) (punctuation 2525 . 2526) (symbol 2518 . 2525) (TYPENAME 2509 . 2517) (punctuation 2508 . 2509) (TEMPLATE 2499 . 2507))
      :lexical-table 
        '(("LLVM_ADT_DEPTHFIRSTITERATOR_H")
          )
)
    (semanticdb-table "semanticdb-table-155561eb43ba"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_SMALLSTRING_H" variable (:constant-flag t) nil [554 576])
            ("llvm/ADT/SmallVector.h" include nil nil [578 611])
            ("llvm/ADT/StringRef.h" include nil nil [612 643])
            ("cstddef" include (:system-flag t) nil [644 662])
            ("llvm" type
               (:members 
                  ( ("SmallString" type
                       (:template 
                          ( ("unsigned int" type (:typevar "InternalLen") nil nil))                          
                        :type "class"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [917 924])
                            ("SmallString" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("S" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1044 1056]))                                  
                                :type ("SmallString" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1032 1112])
                            ("SmallString" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Refs" variable (:type ("std::initializer_list" type
                                         (:template-specifier 
                                            ( ("StringRef" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [1184 1222]))                                  
                                :type ("SmallString" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1172 1293])
                            ("SmallString" function
                               (:template 
                                  ( ("ItTy" type (:type "class") nil nil))                                  
                                :type ("SmallString" type (:type "class") nil nil)
                                :arguments 
                                  ( ("S" variable (:type ("ItTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1366 1373])
                                    ("E" variable (:type ("ItTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1374 1381]))                                  
                                :constructor-flag t)
                                (reparse-symbol classsubparts) [1328 1423])
                            ("SmallVector::assign" variable (:type "int") (reparse-symbol classsubparts) [1482 1521])
                            ("assign" function
                               (:arguments 
                                  ( ("RHS" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1568 1582]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [1556 1647])
                            ("assign" function
                               (:arguments 
                                  ( ("Refs" variable (:type ("std::initializer_list" type
                                         (:template-specifier 
                                            ( ("StringRef" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [1703 1741]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [1691 1784])
                            ("SmallVector::append" variable (:type "int") (reparse-symbol classsubparts) [1846 1885])
                            ("append" function
                               (:arguments 
                                  ( ("RHS" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1932 1946]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [1920 2011])
                            ("append" function
                               (:arguments 
                                  ( ("Refs" variable (:type ("std::initializer_list" type
                                         (:template-specifier 
                                            ( ("StringRef" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [2067 2105]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [2055 2491])
                            ("equals" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("RHS" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2694 2708]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [2682 2750])
                            ("equals_insensitive" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("RHS" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2826 2840]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [2802 2894])
                            ("compare" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("RHS" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3054 3068]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [3042 3111])
                            ("compare_insensitive" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("RHS" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3203 3217]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [3179 3272])
                            ("compare_numeric" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("RHS" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3388 3402]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [3368 3453])
                            ("startswith" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Prefix" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3595 3612]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [3579 3661])
                            ("endswith" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Suffix" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3748 3765]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [3734 3812])
                            ("find" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("C" variable (:type "char") (reparse-symbol arg-sub-list) [4033 4040])
                                    ("From" variable
                                       (:default-value "0"
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4041 4056]))                                  
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4021 4101])
                            ("find" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Str" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4267 4281])
                                    ("From" variable
                                       (:default-value "0"
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4282 4297]))                                  
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4255 4344])
                            ("rfind" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("C" variable (:type "char") (reparse-symbol arg-sub-list) [4508 4515])
                                    ("From" variable
                                       (:default-value "StringRef"
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4516 4539])
                                    ("" variable (:type ("npos" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4541 4546]))                                  
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4495 4591])
                            ("rfind" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Str" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4756 4770]))                                  
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4743 4811])
                            ("find_first_of" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("C" variable (:type "char") (reparse-symbol arg-sub-list) [4937 4944])
                                    ("From" variable
                                       (:default-value "0"
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4945 4960]))                                  
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4916 5014])
                            ("find_first_of" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Chars" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5182 5198])
                                    ("From" variable
                                       (:default-value "0"
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5199 5214]))                                  
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5161 5272])
                            ("find_first_not_of" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("C" variable (:type "char") (reparse-symbol arg-sub-list) [5391 5398])
                                    ("From" variable
                                       (:default-value "0"
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5399 5414]))                                  
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5366 5472])
                            ("find_first_not_of" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Chars" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5659 5675])
                                    ("From" variable
                                       (:default-value "0"
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5676 5691]))                                  
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5634 5753])
                            ("find_last_of" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("C" variable (:type "char") (reparse-symbol arg-sub-list) [5863 5870])
                                    ("From" variable
                                       (:default-value "StringRef"
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5871 5894])
                                    ("" variable (:type ("npos" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5896 5901]))                                  
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5843 5953])
                            ("find_last_of" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Chars" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6122 6138])
                                    ("From" variable
                                       (:default-value "StringRef"
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6139 6162])
                                    ("" variable (:type ("npos" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6164 6169]))                                  
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6095 6225])
                            ("count" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("C" variable (:type "char") (reparse-symbol arg-sub-list) [6354 6361]))                                  
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6341 6400])
                            ("count" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Str" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6502 6516]))                                  
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6489 6557])
                            ("substr" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Start" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7108 7121])
                                    ("N" variable
                                       (:default-value "StringRef"
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7122 7142])
                                    ("" variable (:type ("npos" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7144 7149]))                                  
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7091 7196])
                            ("slice" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("Start" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7744 7757])
                                    ("End" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7758 7769]))                                  
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7728 7817])
                            ("str" function
                               (:methodconst-flag t
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7882 7953])
                            ("c_str" function
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol classsubparts) [8001 8097])
                            ("StringRef" function
                               (:methodconst-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [8150 8185])
                            ("string" function
                               (:methodconst-flag t
                                :parent "std"
                                :type "int")
                                (reparse-symbol classsubparts) [8207 8284])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("RHS" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8333 8347]))                                  
                                :type ("SmallString" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8310 8394])
                            ("+=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("RHS" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8422 8436]))                                  
                                :type ("SmallString" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8398 8502])
                            ("+=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("C" variable (:type "char") (reparse-symbol arg-sub-list) [8529 8536]))                                  
                                :type ("SmallString" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8505 8584]))                          
                        :superclasses 
                          ( ("SmallVector" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [826 8587]))                  
                :type "namespace")
                nil [664 8590]))          
      :file "SmallString.h"
      :pointmax 8647
      :fsize 8646
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((OPERATOR 8198 . 8206) (EXPLICIT 8189 . 8197) (OPERATOR 8141 . 8149) (punctuation 7143 . 7144) (punctuation 7142 . 7143) (punctuation 6163 . 6164) (punctuation 6162 . 6163) (punctuation 5895 . 5896) (punctuation 5894 . 5895) (punctuation 4540 . 4541) (punctuation 4539 . 4540) (USING 1840 . 1845) (USING 1476 . 1481) (punctuation 992 . 993) (DEFAULT 985 . 992) (punctuation 983 . 984) (semantic-list 980 . 982) (symbol 969 . 980))
      :lexical-table 
        '(("LLVM_ADT_SMALLSTRING_H")
          )
)
    (semanticdb-table "semanticdb-table-155561eb441a"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_STRINGEXTRAS_H" variable (:constant-flag t) nil [591 614])
            ("llvm/ADT/APSInt.h" include nil nil [616 644])
            ("llvm/ADT/ArrayRef.h" include nil nil [645 675])
            ("llvm/ADT/SmallString.h" include nil nil [676 709])
            ("llvm/ADT/StringRef.h" include nil nil [710 741])
            ("llvm/ADT/Twine.h" include nil nil [742 769])
            ("cassert" include (:system-flag t) nil [770 788])
            ("cstddef" include (:system-flag t) nil [789 807])
            ("cstdint" include (:system-flag t) nil [808 826])
            ("cstdlib" include (:system-flag t) nil [827 845])
            ("cstring" include (:system-flag t) nil [846 864])
            ("iterator" include (:system-flag t) nil [865 884])
            ("string" include (:system-flag t) nil [885 902])
            ("utility" include (:system-flag t) nil [903 921])
            ("llvm" type
               (:members 
                  ( ("raw_ostream" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [941 959])
                    ("hexdigit" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("X" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [1092 1103])
                            ("LowerCase" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [1104 1126]))                          
                        :type "char")
                        (reparse-symbol namespacesubparts) [1071 1268])
                    ("toStringRefArray" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("Strings" variable
                               (:pointer 2
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [1493 1520]))                          
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("StringRef" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [1446 1627])
                    ("toStringRef" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("B" variable (:type "bool") (reparse-symbol arg-sub-list) [1701 1708]))                          
                        :type ("StringRef" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1672 1752])
                    ("toStringRef" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("Input" variable (:type ("ArrayRef" type
                                 (:template-specifier 
                                    ( ("uint8_t" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [1847 1871]))                          
                        :type ("StringRef" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1818 1956])
                    ("arrayRefFromStringRef" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("Input" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2069 2085]))                          
                        :type ("ArrayRef" type
                             (:template-specifier 
                                ( ("uint8_t" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [2022 2140])
                    ("hexDigitValue" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("C" variable (:type "char") (reparse-symbol arg-sub-list) [2319 2326]))                          
                        :type "unsigned int")
                        (reparse-symbol namespacesubparts) [2289 3592])
                    ("isDigit" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("C" variable (:type "char") (reparse-symbol arg-sub-list) [3676 3683]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [3656 3716])
                    ("isHexDigit" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("C" variable (:type "char") (reparse-symbol arg-sub-list) [3806 3813]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [3783 3849])
                    ("isAlpha" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("C" variable (:type "char") (reparse-symbol arg-sub-list) [3947 3954]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [3927 4017])
                    ("isAlnum" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("C" variable (:type "char") (reparse-symbol arg-sub-list) [4168 4175]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [4148 4212])
                    ("isASCII" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("C" variable (:type "char") (reparse-symbol arg-sub-list) [4303 4310]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [4283 4359])
                    ("isASCII" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("S" variable (:type ("llvm::StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4431 4449]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [4411 4543])
                    ("isPrint" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("C" variable (:type "char") (reparse-symbol arg-sub-list) [4735 4742]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [4715 4837])
                    ("isSpace" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("C" variable (:type "char") (reparse-symbol arg-sub-list) [4996 5003]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [4976 5100])
                    ("toLower" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("x" variable (:type "char") (reparse-symbol arg-sub-list) [5194 5201]))                          
                        :type "char")
                        (reparse-symbol namespacesubparts) [5174 5271])
                    ("toUpper" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("x" variable (:type "char") (reparse-symbol arg-sub-list) [5365 5372]))                          
                        :type "char")
                        (reparse-symbol namespacesubparts) [5345 5442])
                    ("utohexstr" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("X" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5473 5484])
                            ("LowerCase" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [5485 5507])
                            ("Width" variable
                               (:default-value "0"
                                :type "unsigned int")
                                (reparse-symbol arg-sub-list) [5538 5556]))                          
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [5444 5871])
                    ("toHex" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("Input" variable (:type ("ArrayRef" type
                                 (:template-specifier 
                                    ( ("uint8_t" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [6010 6034])
                            ("LowerCase" variable (:type "bool") (reparse-symbol arg-sub-list) [6035 6050])
                            ("Output" variable
                               (:reference 1
                                :type ("SmallVectorImpl" type
                                     (:template-specifier 
                                        ( ("char" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [6069 6099]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [5992 6367])
                    ("toHex" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("Input" variable (:type ("ArrayRef" type
                                 (:template-specifier 
                                    ( ("uint8_t" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [6394 6418])
                            ("LowerCase" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [6419 6441]))                          
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [6369 6537])
                    ("toHex" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("Input" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6564 6580])
                            ("LowerCase" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [6581 6603]))                          
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [6539 6665])
                    ("tryGetHexFromNibbles" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("MSB" variable (:type "char") (reparse-symbol arg-sub-list) [6976 6985])
                            ("LSB" variable (:type "char") (reparse-symbol arg-sub-list) [6986 6995])
                            ("Hex" variable
                               (:reference 1
                                :type ("uint8_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6996 7009]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [6943 7195])
                    ("hexFromNibbles" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("MSB" variable (:type "char") (reparse-symbol arg-sub-list) [7364 7373])
                            ("LSB" variable (:type "char") (reparse-symbol arg-sub-list) [7374 7383]))                          
                        :type ("uint8_t" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [7334 7559])
                    ("tryGetFromHex" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("Input" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7900 7916])
                            ("Output" variable
                               (:reference 1
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7917 7937]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [7874 9037])
                    ("fromHex" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("Input" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9188 9204]))                          
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [9161 9353])
                    ("to_integer" function
                       (:template 
                          ( ("N" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("S" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9604 9616])
                            ("Num" variable
                               (:reference 1
                                :type ("N" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9617 9624])
                            ("Base" variable
                               (:default-value "0"
                                :type "unsigned int")
                                (reparse-symbol arg-sub-list) [9625 9642]))                          )
                        (reparse-symbol namespacesubparts) [9566 9684])
                    ("detail" type
                       (:members 
                          ( ("to_float" function
                               (:template 
                                  ( ("N" type (:type "class") nil nil))                                  
                                :type "bool"
                                :arguments 
                                  ( ("T" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Twine" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9748 9763])
                                    ("Num" variable
                                       (:reference 1
                                        :type ("N" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9764 9771])
                                    ("StrTo" function
                                       (:function-pointer t
                                        :arguments 
                                          ( ("" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [9783 9796])
                                            ("" variable
                                               (:pointer 2
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [9797 9805]))                                          
                                        :type ("N" type (:type "class") nil nil))
                                        nil nil))                                  
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [9705 10005]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [9686 10007])
                    ("to_float" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("T" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10030 10045])
                            ("Num" variable
                               (:reference 1
                                :type "float")
                                (reparse-symbol arg-sub-list) [10046 10057]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [10009 10104])
                    ("to_float" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("T" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10127 10142])
                            ("Num" variable
                               (:reference 1
                                :type "double")
                                (reparse-symbol arg-sub-list) [10143 10155]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [10106 10202])
                    ("to_float" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("T" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Twine" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10225 10240])
                            ("Num" variable
                               (:reference 1
                                :type "long double")
                                (reparse-symbol arg-sub-list) [10241 10258]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [10204 10306])
                    ("utostr" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("X" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10334 10345])
                            ("isNeg" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [10346 10364]))                          
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [10308 10655])
                    ("itostr" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("X" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10683 10693]))                          
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [10657 10841])
                    ("toString" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("I" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10871 10886])
                            ("Radix" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [10887 10902])
                            ("Signed" variable (:type "bool") (reparse-symbol arg-sub-list) [10903 10915])
                            ("formatAsCLiteral" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [10944 10973]))                          
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [10843 11080])
                    ("toString" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("I" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APSInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11110 11126])
                            ("Radix" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [11127 11142]))                          
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [11082 11189])
                    ("StrInStrNoCase" function
                       (:prototype-flag t
                        :arguments 
                          ( ("s1" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11427 11440])
                            ("s2" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11441 11454]))                          
                        :type ("StringRef::size_type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [11391 11455])
                    ("getToken" function
                       (:prototype-flag t
                        :arguments 
                          ( ("Source" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11898 11915])
                            ("Delimiters" variable
                               (:default-value "\" \\t\\n\\v\\f\\r\""
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11957 11993]))                          
                        :type ("std::pair" type
                             (:template-specifier 
                                ( ("StringRef" type nil nil nil)
                                  ("StringRef" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [11857 11995])
                    ("SplitString" function
                       (:prototype-flag t
                        :arguments 
                          ( ("Source" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12156 12173])
                            ("OutFragments" variable
                               (:reference 1
                                :type ("SmallVectorImpl" type
                                     (:template-specifier 
                                        ( ("StringRef" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [12191 12232])
                            ("Delimiters" variable
                               (:default-value "\" \\t\\n\\v\\f\\r\""
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12250 12286]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [12139 12288])
                    ("getOrdinalSuffix" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("Val" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [12400 12413]))                          
                        :type ("StringRef" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [12366 12758])
                    ("printEscapedString" function
                       (:prototype-flag t
                        :arguments 
                          ( ("Name" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12901 12916])
                            ("Out" variable
                               (:reference 1
                                :type ("raw_ostream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12917 12934]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [12877 12935])
                    ("printHTMLEscaped" function
                       (:prototype-flag t
                        :arguments 
                          ( ("String" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13047 13064])
                            ("Out" variable
                               (:reference 1
                                :type ("raw_ostream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13065 13082]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [13025 13083])
                    ("printLowerCase" function
                       (:prototype-flag t
                        :arguments 
                          ( ("String" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13180 13197])
                            ("Out" variable
                               (:reference 1
                                :type ("raw_ostream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13198 13215]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [13160 13216])
                    ("convertToSnakeFromCamelCase" function
                       (:prototype-flag t
                        :arguments 
                          ( ("input" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13468 13484]))                          
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [13428 13485])
                    ("convertToCamelFromSnakeCase" function
                       (:prototype-flag t
                        :arguments 
                          ( ("input" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13770 13786])
                            ("capitalizeFirst" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [13827 13855]))                          
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [13730 13857])
                    ("detail" type
                       (:members 
                          ( ("join_impl" function
                               (:template 
                                  ( ("IteratorT" type (:type "class") nil nil))                                  
                                :type ("std::string" type (:type "class") nil nil)
                                :arguments 
                                  ( ("Begin" variable (:type ("IteratorT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13938 13954])
                                    ("End" variable (:type ("IteratorT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13955 13969])
                                    ("Separator" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13999 14019])
                                    ("" variable (:type ("std::input_iterator_tag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14020 14044]))                                  
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [13879 14199])
                            ("join_impl" function
                               (:template 
                                  ( ("IteratorT" type (:type "class") nil nil))                                  
                                :type ("std::string" type (:type "class") nil nil)
                                :arguments 
                                  ( ("Begin" variable (:type ("IteratorT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14260 14276])
                                    ("End" variable (:type ("IteratorT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14277 14291])
                                    ("Separator" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14321 14341])
                                    ("" variable (:type ("std::forward_iterator_tag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14342 14368]))                                  
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [14201 14808])
                            ("join_items_impl" function
                               (:template 
                                  ( ("Sep" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("Result" variable
                                       (:reference 1
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14862 14882])
                                    ("Separator" variable (:type ("Sep" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14883 14897]))                                  
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [14810 14900])
                            ("join_items_impl" function
                               (:template 
                                  ( ("Sep" type (:type "class") nil nil)
                                    ("Arg" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("Result" variable
                                       (:reference 1
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14968 14988])
                                    ("Separator" variable (:type ("Sep" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14989 15003])
                                    ("Item" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15032 15048]))                                  
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [14902 15070])
                            ("join_items_impl" function
                               (:typemodifiers ("inline")
                                :arguments 
                                  ( ("Result" variable
                                       (:reference 1
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15157 15177])
                                    ("Separator" variable (:type ("Sep" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15178 15192])
                                    ("A1" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15193 15208])
                                    ("" variable
                                       (:reference 1
                                        :type ("Args" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15237 15244])
                                    ("" variable (:type ("Items" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15248 15254]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [15129 15365])
                            ("join_one_item_size" function
                               (:typemodifiers ("inline")
                                :arguments 
                                  ( ("" variable (:type "char") (reparse-symbol arg-sub-list) [15400 15405]))                                  
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [15367 15419])
                            ("join_one_item_size" function
                               (:typemodifiers ("inline")
                                :arguments 
                                  ( ("S" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [15453 15467]))                                  
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [15420 15499])
                            ("join_one_item_size" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("size_t" type (:type "class") nil nil)
                                :arguments 
                                  ( ("Str" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15556 15569]))                                  
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [15501 15594])
                            ("join_items_size" function
                               (:typemodifiers ("inline")
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [15596 15641])
                            ("join_items_size" function
                               (:template 
                                  ( ("A1" type (:type "class") nil nil))                                  
                                :type ("size_t" type (:type "class") nil nil)
                                :arguments 
                                  ( ("A" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("A1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15696 15708]))                                  
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [15643 15744])
                            ("join_items_size" function
                               (:typemodifiers ("inline")
                                :arguments 
                                  ( ("A" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("A1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15816 15828])
                                    ("" variable
                                       (:reference 1
                                        :type ("Args" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15829 15836])
                                    ("" variable (:type ("Items" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15840 15846]))                                  
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [15786 15930]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [13859 15933])
                    ("join" function
                       (:template 
                          ( ("IteratorT" type (:type "class") nil nil))                          
                        :type ("std::string" type (:type "class") nil nil)
                        :arguments 
                          ( ("Begin" variable (:type ("IteratorT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16105 16121])
                            ("End" variable (:type ("IteratorT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16122 16136])
                            ("Separator" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16137 16157]))                          
                        :typemodifiers ("inline"))
                        (reparse-symbol namespacesubparts) [16051 16294])
                    ("join" function
                       (:template 
                          ( ("Range" type (:type "class") nil nil))                          
                        :type ("std::string" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("Range" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [16446 16454])
                            ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16454 16456])
                            ("Separator" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16457 16477]))                          
                        :typemodifiers ("inline"))
                        (reparse-symbol namespacesubparts) [16396 16527])
                    ("join_items" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("Separator" variable (:type ("Sep" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16869 16883])
                            ("" variable
                               (:reference 1
                                :type ("Args" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [16884 16891])
                            ("" variable (:type ("Items" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16895 16901]))                          
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [16839 17247])
                    ("ListSeparator" type
                       (:members 
                          ( ("First" variable
                               (:default-value "true"
                                :type "bool")
                                (reparse-symbol classsubparts) [17559 17577])
                            ("Separator" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol classsubparts) [17580 17600])
                            ("public" label nil (reparse-symbol classsubparts) [17602 17609])
                            ("ListSeparator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Separator" variable
                                       (:default-value "\", \""
                                        :type ("StringRef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17626 17652]))                                  
                                :type ("ListSeparator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [17612 17679])
                            ("StringRef" function (:type "int") (reparse-symbol classsubparts) [17691 17791]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [17535 17794])
                    ("SplittingIterator" type
                       (:superclasses 
                          ( ("iterator_facade_base" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("SeparatorStorage" variable (:type "char") (reparse-symbol classsubparts) [18016 18038])
                            ("Current" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol classsubparts) [18041 18059])
                            ("Next" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol classsubparts) [18062 18077])
                            ("Separator" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol classsubparts) [18080 18100])
                            ("public" label nil (reparse-symbol classsubparts) [18102 18109])
                            ("SplittingIterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Str" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18130 18144])
                                    ("Separator" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18145 18165]))                                  
                                :type ("SplittingIterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18112 18224])
                            ("SplittingIterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Str" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18246 18260])
                                    ("Separator" variable (:type "char") (reparse-symbol arg-sub-list) [18261 18276]))                                  
                                :type ("SplittingIterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18228 18383])
                            ("SplittingIterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("R" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SplittingIterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18405 18432]))                                  
                                :type ("SplittingIterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18387 18651])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("R" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SplittingIterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18684 18711]))                                  
                                :type ("SplittingIterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18655 18994])
                            ("==" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("R" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SplittingIterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19014 19041]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [18998 19138])
                            ("" function
                               (:methodconst-flag t
                                :operator-flag t
                                :function-pointer t
                                :constant-flag t
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [19142 19196])
                            ("" function
                               (:operator-flag t
                                :function-pointer t
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [19200 19242])
                            ("++" function
                               (:operator-flag t
                                :type ("SplittingIterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [19246 19354]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [17863 19357])
                    ("split" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("Str" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19783 19797])
                            ("Separator" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19798 19818]))                          
                        :type ("iterator_range" type
                             (:template-specifier 
                                ( ("SplittingIterator" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [19736 19921])
                    ("split" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("Str" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19970 19984])
                            ("Separator" variable (:type "char") (reparse-symbol arg-sub-list) [19985 20000]))                          
                        :type ("iterator_range" type
                             (:template-specifier 
                                ( ("SplittingIterator" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [19923 20103]))                  
                :type "namespace")
                nil [923 20106]))          
      :file "StringExtras.h"
      :pointmax 20164
      :fsize 20163
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((OPERATOR 17682 . 17690) (punctuation 16893 . 16894) (punctuation 16892 . 16893) (punctuation 16891 . 16892) (punctuation 16890 . 16891) (punctuation 16837 . 16838) (symbol 16833 . 16837) (punctuation 16831 . 16832) (punctuation 16830 . 16831) (punctuation 16829 . 16830) (TYPENAME 16821 . 16829) (punctuation 16819 . 16820) (symbol 16816 . 16819) (TYPENAME 16807 . 16815) (punctuation 16806 . 16807) (TEMPLATE 16797 . 16805) (punctuation 16453 . 16454) (punctuation 15838 . 15839) (punctuation 15837 . 15838) (punctuation 15836 . 15837) (punctuation 15835 . 15836) (punctuation 15784 . 15785) (symbol 15780 . 15784) (punctuation 15778 . 15779) (punctuation 15777 . 15778) (punctuation 15776 . 15777) (TYPENAME 15768 . 15776) (punctuation 15766 . 15767) (symbol 15764 . 15766) (TYPENAME 15755 . 15763) (punctuation 15754 . 15755) (TEMPLATE 15745 . 15753) (punctuation 15246 . 15247) (punctuation 15245 . 15246) (punctuation 15244 . 15245) (punctuation 15243 . 15244) (punctuation 15127 . 15128) (symbol 15123 . 15127) (punctuation 15121 . 15122) (punctuation 15120 . 15121) (punctuation 15119 . 15120) (TYPENAME 15111 . 15119) (punctuation 15109 . 15110) (symbol 15105 . 15109) (TYPENAME 15096 . 15104) (punctuation 15094 . 15095) (symbol 15091 . 15094) (TYPENAME 15082 . 15090) (punctuation 15081 . 15082) (TEMPLATE 15072 . 15080))
      :lexical-table 
        '(("LLVM_ADT_STRINGEXTRAS_H")
          )
)
    (semanticdb-table "semanticdb-table-15556111711c"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_ILIST_H" variable (:constant-flag t) nil [1126 1142])
            ("llvm/ADT/simple_ilist.h" include nil nil [1144 1178])
            ("cassert" include (:system-flag t) nil [1179 1197])
            ("cstddef" include (:system-flag t) nil [1198 1216])
            ("iterator" include (:system-flag t) nil [1217 1236])
            ("llvm" type
               (:members 
                  ( ("ilist_alloc_traits" type
                       (:template 
                          ( ("NodeTy" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("deleteNode" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :type ("NodeTy" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1615 1625]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [1592 1639]))                          )
                        (reparse-symbol namespacesubparts) [1535 1642])
                    ("ilist_noalloc_traits" type
                       (:template 
                          ( ("NodeTy" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("deleteNode" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("V" variable
                                       (:pointer 1
                                        :type ("NodeTy" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2135 2145]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [2112 2148]))                          )
                        (reparse-symbol namespacesubparts) [2053 2151])
                    ("ilist_callback_traits" type
                       (:template 
                          ( ("NodeTy" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("addNodeToList" function
                               (:arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("NodeTy" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2383 2392]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [2364 2395])
                            ("removeNodeFromList" function
                               (:arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("NodeTy" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2422 2431]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [2398 2434])
                            ("transferNodesFromList" function
                               (:template 
                                  ( ("Iterator" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("OldList" variable
                                       (:reference 1
                                        :type ("ilist_callback_traits" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2598 2629])
                                    ("" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2630 2649])
                                    ("" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2679 2697]))                                  )
                                (reparse-symbol classsubparts) [2543 2722]))                          )
                        (reparse-symbol namespacesubparts) [2304 2725])
                    ("ilist_node_traits" type
                       (:template 
                          ( ("NodeTy" type (:type "class") nil nil))                          
                        :type "struct"
                        :superclasses 
                          ( ("ilist_alloc_traits" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil)
                            ("ilist_callback_traits" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [2901 3043])
                    ("ilist_traits" type
                       (:template 
                          ( ("NodeTy" type (:type "class") nil nil))                          
                        :type "struct"
                        :superclasses 
                          ( ("ilist_node_traits" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [3139 3224])
                    ("ilist_traits" type
                       (:template 
                          ( ("Ty" type (:type "class") nil nil))                          
                        :type "struct"
                        :template-specifier 
                          ( ("Ty" type (:constant-flag t) nil nil))                          )
                        (reparse-symbol namespacesubparts) [3273 3329])
                    ("ilist_detail" type
                       (:members 
                          ( ("make" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("T" type (:type "class") nil nil)
                                :prototype-flag t)
                                (reparse-symbol namespacesubparts) [3357 3386])
                            ("HasGetNext" type
                               (:template 
                                  ( ("TraitsT" type (:type "class") nil nil)
                                    ("NodeT" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("Yes" type
                                       (:typedef ("char")
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [3577 3597])
                                    ("No" type
                                       (:typedef ("char")
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [3600 3619])
                                    ("SFINAE" type
                                       (:template 
                                          ( ("size_t" type (:typevar "N") nil nil))                                          
                                        :type "struct")
                                        (reparse-symbol classsubparts) [3622 3659])
                                    ("test" function
                                       (:template 
                                          ( ("U" type (:type "class") nil nil))                                          
                                        :type ("Yes" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("I" variable
                                               (:pointer 1
                                                :type ("U" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3701 3706])
                                            ("" variable (:type ("decltype" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3707 3743])
                                            ("" variable (:type ("nullptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3748 3756]))                                          
                                        :typemodifiers ("static")
                                        :prototype-flag t)
                                        (reparse-symbol classsubparts) [3663 3757])
                                    ("test" function
                                       (:template 
                                          ( ("" type nil nil nil))                                          
                                        :type ("No" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [3793 3797]))                                          
                                        :typemodifiers ("static")
                                        :prototype-flag t)
                                        (reparse-symbol classsubparts) [3760 3798])
                                    ("public" label nil (reparse-symbol classsubparts) [3800 3807]))                                  )
                                (reparse-symbol namespacesubparts) [3517 3885])
                            ("HasCreateSentinel" type
                               (:template 
                                  ( ("TraitsT" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("Yes" type
                                       (:typedef ("char")
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [4077 4097])
                                    ("No" type
                                       (:typedef ("char")
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [4100 4119])
                                    ("test" function
                                       (:template 
                                          ( ("U" type (:type "class") nil nil))                                          
                                        :type ("Yes" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("I" variable
                                               (:pointer 1
                                                :type ("U" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4161 4166])
                                            ("" variable (:type ("decltype" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4167 4196])
                                            ("" variable (:type ("nullptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4201 4209]))                                          
                                        :typemodifiers ("static")
                                        :prototype-flag t)
                                        (reparse-symbol classsubparts) [4123 4210])
                                    ("test" function
                                       (:template 
                                          ( ("" type nil nil nil))                                          
                                        :type ("No" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [4246 4250]))                                          
                                        :typemodifiers ("static")
                                        :prototype-flag t)
                                        (reparse-symbol classsubparts) [4213 4251])
                                    ("public" label nil (reparse-symbol classsubparts) [4253 4260]))                                  )
                                (reparse-symbol namespacesubparts) [4023 4338])
                            ("HasCreateNode" type
                               (:template 
                                  ( ("TraitsT" type (:type "class") nil nil)
                                    ("NodeT" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("Yes" type
                                       (:typedef ("char")
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [4561 4581])
                                    ("No" type
                                       (:typedef ("char")
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [4584 4603])
                                    ("SFINAE" type
                                       (:template 
                                          ( ("size_t" type (:typevar "N") nil nil))                                          
                                        :type "struct")
                                        (reparse-symbol classsubparts) [4606 4643])
                                    ("test" function
                                       (:template 
                                          ( ("U" type (:type "class") nil nil))                                          
                                        :type ("Yes" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("I" variable
                                               (:pointer 1
                                                :type ("U" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4685 4690])
                                            ("" variable (:type ("decltype" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4691 4729]))                                          
                                        :typemodifiers ("static")
                                        :prototype-flag t)
                                        (reparse-symbol classsubparts) [4647 4737])
                                    ("test" function
                                       (:template 
                                          ( ("" type nil nil nil))                                          
                                        :type ("No" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [4773 4777]))                                          
                                        :typemodifiers ("static")
                                        :prototype-flag t)
                                        (reparse-symbol classsubparts) [4740 4778])
                                    ("public" label nil (reparse-symbol classsubparts) [4780 4787]))                                  )
                                (reparse-symbol namespacesubparts) [4498 4865])
                            ("HasObsoleteCustomization" type
                               (:template 
                                  ( ("TraitsT" type (:type "class") nil nil)
                                    ("NodeT" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("HasCreateNode::value" variable (:type "int") (reparse-symbol classsubparts) [5097 5134]))                                  )
                                (reparse-symbol namespacesubparts) [4867 5137]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [3331 5140])
                    ("iplist_impl" type
                       (:template 
                          ( ("IntrusiveListT" type (:type "class") nil nil)
                            ("TraitsT" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("base_list_type" type
                               (:typedef ("IntrusiveListT" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [5949 5987])
                            ("public" label nil (reparse-symbol classsubparts) [5989 5996])
                            ("pointer" type
                               (:typedef ("base_list_type::pointer" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [5999 6048])
                            ("const_pointer" type
                               (:typedef ("base_list_type::const_pointer" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [6051 6112])
                            ("reference" type
                               (:typedef ("base_list_type::reference" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [6115 6168])
                            ("const_reference" type
                               (:typedef ("base_list_type::const_reference" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [6171 6236])
                            ("value_type" type
                               (:typedef ("base_list_type::value_type" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [6239 6294])
                            ("size_type" type
                               (:typedef ("base_list_type::size_type" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [6297 6350])
                            ("difference_type" type
                               (:typedef ("base_list_type::difference_type" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [6353 6418])
                            ("iterator" type
                               (:typedef ("base_list_type::iterator" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [6421 6472])
                            ("const_iterator" type
                               (:typedef ("base_list_type::const_iterator" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [6475 6538])
                            ("reverse_iterator" type
                               (:typedef ("base_list_type::reverse_iterator" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [6541 6608])
                            ("const_reverse_iterator" type
                               (:typedef ("base_list_type::const_reverse_iterator" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [6611 6696])
                            ("private" label nil (reparse-symbol classsubparts) [6698 6706])
                            ("static_assert" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("ilist_detail::HasObsoleteCustomization::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6901 6968]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [6879 7019])
                            ("op_less" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("L" variable (:type ("const_reference" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7043 7061])
                                    ("R" variable (:type ("const_reference" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7062 7080]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [7023 7098])
                            ("op_equal" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("L" variable (:type ("const_reference" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7122 7140])
                                    ("R" variable (:type ("const_reference" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7141 7159]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [7101 7178])
                            ("public" label nil (reparse-symbol classsubparts) [7180 7187])
                            ("iplist_impl" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("iplist_impl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7332 7346])
                                    ("" variable (:type ("X" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7346 7348]))                                  
                                :type ("iplist_impl" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7320 7474])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("iplist_impl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7500 7514])
                                    ("" variable (:type ("X" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7514 7516]))                                  
                                :type ("iplist_impl" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7477 7710])
                            ("iplist_impl" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [7714 7741])
                            ("max_size" function
                               (:methodconst-flag t
                                :type ("size_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7785 7837])
                            ("base_list_type::begin" variable (:type "int") (reparse-symbol classsubparts) [7847 7869])
                            ("base_list_type::end" variable (:type "int") (reparse-symbol classsubparts) [7878 7898])
                            ("base_list_type::rbegin" variable (:type "int") (reparse-symbol classsubparts) [7907 7930])
                            ("base_list_type::rend" variable (:type "int") (reparse-symbol classsubparts) [7939 7960])
                            ("base_list_type::empty" variable (:type "int") (reparse-symbol classsubparts) [7969 7991])
                            ("base_list_type::front" variable (:type "int") (reparse-symbol classsubparts) [8000 8022])
                            ("base_list_type::back" variable (:type "int") (reparse-symbol classsubparts) [8031 8052])
                            ("swap" function
                               (:arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :type ("iplist_impl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8066 8083]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [8056 8194])
                            ("insert" function
                               (:arguments 
                                  ( ("where" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8214 8229])
                                    ("New" variable (:type ("pointer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8230 8242]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8198 8367])
                            ("insert" function
                               (:arguments 
                                  ( ("where" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8387 8402])
                                    ("New" variable (:type ("const_reference" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8403 8423]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8371 8482])
                            ("insertAfter" function
                               (:arguments 
                                  ( ("where" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8507 8522])
                                    ("New" variable (:type ("pointer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8523 8535]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8486 8637])
                            ("cloneFrom" function
                               (:template 
                                  ( ("Cloner" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("L2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("iplist_impl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8706 8728])
                                    ("clone" variable (:type ("Cloner" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8729 8742]))                                  )
                                (reparse-symbol classsubparts) [8667 8821])
                            ("remove" function
                               (:arguments 
                                  ( ("IT" variable
                                       (:reference 1
                                        :type ("iterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8840 8853]))                                  
                                :type ("pointer" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8825 9017])
                            ("remove" function
                               (:arguments 
                                  ( ("IT" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("iterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9036 9055]))                                  
                                :type ("pointer" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9021 9112])
                            ("remove" function
                               (:arguments 
                                  ( ("IT" variable (:type ("pointer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9131 9142]))                                  
                                :type ("pointer" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9116 9175])
                            ("remove" function
                               (:arguments 
                                  ( ("IT" variable (:type ("reference" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9193 9206]))                                  
                                :type ("pointer" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9178 9239])
                            ("erase" function
                               (:arguments 
                                  ( ("where" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9332 9347]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9317 9408])
                            ("erase" function
                               (:arguments 
                                  ( ("IT" variable (:type ("pointer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9427 9438]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9412 9470])
                            ("erase" function
                               (:arguments 
                                  ( ("IT" variable (:type ("reference" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9488 9501]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9473 9533])
                            ("clearAndLeakNodesUnsafely" function (:type "void") (reparse-symbol classsubparts) [9800 9861])
                            ("private" label nil (reparse-symbol classsubparts) [9863 9871])
                            ("transfer" function
                               (:arguments 
                                  ( ("position" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10006 10024])
                                    ("L2" variable
                                       (:reference 1
                                        :type ("iplist_impl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10025 10041])
                                    ("first" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10042 10057])
                                    ("last" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10058 10072]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [9992 10268])
                            ("public" label nil (reparse-symbol classsubparts) [10270 10277])
                            ("base_list_type::size" variable (:type "int") (reparse-symbol classsubparts) [10438 10459])
                            ("erase" function
                               (:arguments 
                                  ( ("first" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10478 10493])
                                    ("last" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10494 10508]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10463 10585])
                            ("clear" function (:type "void") (reparse-symbol classsubparts) [10589 10628])
                            ("push_front" function
                               (:arguments 
                                  ( ("val" variable (:type ("pointer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10681 10693]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [10665 10719])
                            ("push_back" function
                               (:arguments 
                                  ( ("val" variable (:type ("pointer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10737 10749]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [10722 10773])
                            ("pop_front" function (:type "void") (reparse-symbol classsubparts) [10776 10872])
                            ("pop_back" function (:type "void") (reparse-symbol classsubparts) [10875 10985])
                            ("insert" function
                               (:template 
                                  ( ("InIt" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("where" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11054 11069])
                                    ("first" variable (:type ("InIt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11070 11081])
                                    ("last" variable (:type ("InIt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11082 11092]))                                  )
                                (reparse-symbol classsubparts) [11021 11156])
                            ("splice" function
                               (:arguments 
                                  ( ("where" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11226 11241])
                                    ("L2" variable
                                       (:reference 1
                                        :type ("iplist_impl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11242 11258]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [11214 11334])
                            ("splice" function
                               (:arguments 
                                  ( ("where" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11349 11364])
                                    ("L2" variable
                                       (:reference 1
                                        :type ("iplist_impl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11365 11381])
                                    ("first" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11382 11397]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [11337 11538])
                            ("splice" function
                               (:arguments 
                                  ( ("where" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11553 11568])
                                    ("L2" variable
                                       (:reference 1
                                        :type ("iplist_impl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11569 11585])
                                    ("first" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11586 11601])
                                    ("last" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11602 11616]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [11541 11679])
                            ("splice" function
                               (:arguments 
                                  ( ("where" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11694 11709])
                                    ("L2" variable
                                       (:reference 1
                                        :type ("iplist_impl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11710 11726])
                                    ("N" variable (:type ("reference" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11727 11739]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [11682 11781])
                            ("splice" function
                               (:arguments 
                                  ( ("where" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11796 11811])
                                    ("L2" variable
                                       (:reference 1
                                        :type ("iplist_impl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11812 11828])
                                    ("N" variable (:type ("pointer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11829 11839]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [11784 11881])
                            ("merge" function
                               (:template 
                                  ( ("Compare" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("Right" variable
                                       (:reference 1
                                        :type ("iplist_impl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11923 11942])
                                    ("comp" variable (:type ("Compare" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11943 11956]))                                  )
                                (reparse-symbol classsubparts) [11885 12108])
                            ("merge" function
                               (:arguments 
                                  ( ("Right" variable
                                       (:reference 1
                                        :type ("iplist_impl" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12122 12141]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [12111 12175])
                            ("base_list_type::sort" variable (:type "int") (reparse-symbol classsubparts) [12185 12206])
                            ("getPrevNode" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("N" variable (:type ("reference" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12292 12304]))                                  
                                :type ("pointer" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12272 12417])
                            ("getPrevNode" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("N" variable (:type ("const_reference" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12508 12526]))                                  
                                :type ("const_pointer" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12482 12589])
                            ("getNextNode" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("N" variable (:type ("reference" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12671 12683]))                                  
                                :type ("pointer" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12651 12803])
                            ("getNextNode" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("N" variable (:type ("const_reference" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12890 12908]))                                  
                                :type ("const_pointer" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12864 12971]))                          
                        :superclasses 
                          ( ("TraitsT" type
                               (:protection "public"
                                :type "class")
                                nil nil)
                            ("IntrusiveListT" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [5847 12974]))                  
                :type "namespace")
                nil [1238 13790])
            ("std" type
               (:members 
                  ( ("swap" function
                       (:template 
                          ( ("Ty" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("Left" variable
                               (:reference 1
                                :type ("llvm::iplist" type
                                     (:template-specifier 
                                        ( ("Ty" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [13913 13936])
                            ("Right" variable
                               (:reference 1
                                :type ("llvm::iplist" type
                                     (:template-specifier 
                                        ( ("Ty" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [13937 13961]))                          )
                        (reparse-symbol namespacesubparts) [13882 13989]))                  
                :type "namespace")
                nil [13814 13992]))          
      :file "ilist.h"
      :pointmax 14042
      :fsize 14041
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 13786 . 13787) (punctuation 13785 . 13786) (punctuation 13784 . 13785) (punctuation 13783 . 13784) (punctuation 13782 . 13783) (symbol 13775 . 13782) (punctuation 13773 . 13774) (symbol 13772 . 13773) (punctuation 13771 . 13772) (symbol 13765 . 13771) (punctuation 13763 . 13764) (symbol 13757 . 13762) (USING 13751 . 13756) (punctuation 13749 . 13750) (symbol 13742 . 13749) (punctuation 13740 . 13741) (punctuation 13739 . 13740) (punctuation 13738 . 13739) (CLASS 13733 . 13738) (punctuation 13731 . 13732) (symbol 13730 . 13731) (CLASS 13724 . 13729) (punctuation 13723 . 13724) (TEMPLATE 13714 . 13722) (punctuation 13711 . 13712) (semantic-list 13363 . 13711) (punctuation 13361 . 13362) (punctuation 13360 . 13361) (symbol 13359 . 13360) (punctuation 13358 . 13359) (symbol 13346 . 13358) (punctuation 13344 . 13345) (punctuation 13343 . 13344) (punctuation 13342 . 13343) (punctuation 13341 . 13342) (punctuation 13340 . 13341) (symbol 13333 . 13340) (punctuation 13331 . 13332) (symbol 13330 . 13331) (punctuation 13329 . 13330) (symbol 13317 . 13329) (punctuation 13316 . 13317) (symbol 13305 . 13316) (PUBLIC 13298 . 13304) (punctuation 13296 . 13297) (symbol 13285 . 13291) (CLASS 13279 . 13284) (punctuation 13277 . 13278) (symbol 13270 . 13277) (punctuation 13268 . 13269) (punctuation 13267 . 13268) (punctuation 13266 . 13267) (CLASS 13261 . 13266) (punctuation 13259 . 13260) (symbol 13258 . 13259) (CLASS 13252 . 13257) (punctuation 13251 . 13252) (TEMPLATE 13242 . 13250) (USING 12179 . 12184) (USING 10432 . 10437) (USING 8025 . 8030) (USING 7994 . 7999) (USING 7963 . 7968) (USING 7933 . 7938) (USING 7901 . 7906) (USING 7872 . 7877) (USING 7841 . 7846) (punctuation 7513 . 7514) (punctuation 7345 . 7346) (punctuation 7315 . 7316) (DELETE 7309 . 7315) (punctuation 7307 . 7308) (semantic-list 7285 . 7306) (punctuation 7284 . 7285) (OPERATOR 7276 . 7284) (punctuation 7275 . 7276) (symbol 7263 . 7274) (punctuation 7259 . 7260) (DELETE 7253 . 7259) (punctuation 7251 . 7252) (semantic-list 7229 . 7250) (symbol 7218 . 7229) (punctuation 7213 . 7214) (DEFAULT 7206 . 7213) (punctuation 7204 . 7205) (semantic-list 7201 . 7203) (symbol 7190 . 7201) (string 6975 . 7017) (punctuation 6900 . 6901) (punctuation 5067 . 5068) (punctuation 5066 . 5067) (symbol 5060 . 5065) (punctuation 5059 . 5060) (punctuation 5058 . 5059) (punctuation 5057 . 5058) (symbol 5050 . 5057) (punctuation 5049 . 5050) (symbol 5032 . 5049) (punctuation 5002 . 5003) (punctuation 5001 . 5002) (symbol 4995 . 5000) (punctuation 4994 . 4995) (punctuation 4993 . 4994) (punctuation 4992 . 4993) (symbol 4987 . 4992) (punctuation 4985 . 4986) (symbol 4978 . 4985) (punctuation 4977 . 4978) (symbol 4967 . 4977) (punctuation 4965 . 4966) (symbol 4959 . 4964) (BOOL 4954 . 4958) (CONST 4948 . 4953) (STATIC 4941 . 4947) (punctuation 4861 . 4862) (semantic-list 4856 . 4861) (SIZEOF 4850 . 4856) (punctuation 4848 . 4849) (punctuation 4847 . 4848) (semantic-list 4822 . 4846) (SIZEOF 4816 . 4822) (punctuation 4814 . 4815) (symbol 4808 . 4813) (BOOL 4803 . 4807) (CONST 4797 . 4802) (STATIC 4790 . 4796) (number 4734 . 4735) (punctuation 4732 . 4733) (punctuation 4730 . 4731) (semantic-list 4699 . 4729) (punctuation 4334 . 4335) (semantic-list 4329 . 4334) (SIZEOF 4323 . 4329) (punctuation 4321 . 4322) (punctuation 4320 . 4321) (semantic-list 4295 . 4319) (SIZEOF 4289 . 4295) (punctuation 4287 . 4288) (symbol 4281 . 4286) (BOOL 4276 . 4280) (CONST 4270 . 4275) (STATIC 4263 . 4269) (punctuation 4199 . 4200) (punctuation 4197 . 4198) (semantic-list 4175 . 4196) (punctuation 3881 . 3882) (semantic-list 3876 . 3881) (SIZEOF 3870 . 3876) (punctuation 3868 . 3869) (punctuation 3867 . 3868) (semantic-list 3842 . 3866) (SIZEOF 3836 . 3842) (punctuation 3834 . 3835) (symbol 3828 . 3833) (BOOL 3823 . 3827) (CONST 3817 . 3822) (STATIC 3810 . 3816) (punctuation 3746 . 3747) (punctuation 3744 . 3745) (semantic-list 3715 . 3743))
      :lexical-table 
        '(("LLVM_ADT_ILIST_H")
          )
)
    (semanticdb-table "semanticdb-table-15556113f37a"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_SMALLSET_H" variable (:constant-flag t) nil [548 567])
            ("llvm/ADT/None.h" include nil nil [569 595])
            ("llvm/ADT/SmallPtrSet.h" include nil nil [596 629])
            ("llvm/ADT/SmallVector.h" include nil nil [630 663])
            ("llvm/ADT/STLExtras.h" include nil nil [664 695])
            ("llvm/ADT/iterator.h" include nil nil [696 726])
            ("llvm/Support/Compiler.h" include nil nil [727 761])
            ("llvm/Support/type_traits.h" include nil nil [762 799])
            ("cstddef" include (:system-flag t) nil [800 818])
            ("functional" include (:system-flag t) nil [819 840])
            ("set" include (:system-flag t) nil [841 855])
            ("type_traits" include (:system-flag t) nil [856 878])
            ("utility" include (:system-flag t) nil [879 897])
            ("llvm" type
               (:members 
                  ( ("SmallSetIterator" type
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("unsigned int" type (:typevar "N") nil nil)
                            ("C" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("private" label nil (reparse-symbol classsubparts) [1254 1262])
                            ("std::set::const_iterator" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [1283 1323])
                            ("SmallVector::const_iterator" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [1344 1387])
                            ("SmallSetIterator" variable (:type "int") (reparse-symbol classsubparts) [1405 1431])
                            ("" type
                               (:members 
                                  ( ("SetIter" variable (:type ("SetIterTy" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1554 1572])
                                    ("VecIter" variable (:type ("VecIterTy" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1577 1595]))                                  
                                :type "union")
                                (reparse-symbol classsubparts) [1542 1600])
                            ("isSmall" variable (:type "bool") (reparse-symbol classsubparts) [1604 1617])
                            ("public" label nil (reparse-symbol classsubparts) [1619 1626])
                            ("SmallSetIterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("SetIter" variable (:type ("SetIterTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1646 1664]))                                  
                                :type ("SmallSetIterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1629 1702])
                            ("SmallSetIterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("VecIter" variable (:type ("VecIterTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1723 1741]))                                  
                                :type ("SmallSetIterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1706 1778])
                            ("SmallSetIterator" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [1941 2048])
                            ("SmallSetIterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("Other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SmallSetIterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2069 2099]))                                  
                                :type ("SmallSetIterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2052 2371])
                            ("SmallSetIterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("SmallSetIterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2392 2411])
                                    ("" variable (:type ("Other" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2411 2417]))                                  
                                :type ("SmallSetIterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2375 2711])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("Other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SmallSetIterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2743 2773]))                                  
                                :type ("SmallSetIterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2715 3118])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("SmallSetIterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3150 3168])
                                    ("" variable (:type ("Other" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3169 3175]))                                  
                                :type ("SmallSetIterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3122 3542])
                            ("==" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SmallSetIterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3562 3590]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [3546 3743])
                            ("++" function
                               (:operator-flag t
                                :type ("SmallSetIterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3747 3877])
                            ("" function
                               (:methodconst-flag t
                                :operator-flag t
                                :function-pointer t
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3881 3949]))                          
                        :superclasses 
                          ( ("iterator_facade_base" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [1058 3952])
                    ("SmallSet" type
                       (:members 
                          ( ("Vector" variable (:type ("SmallVector" type
                                 (:template-specifier 
                                    ( ("T" type nil nil nil)
                                      ("N" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [4491 4516])
                            ("Set" variable (:type ("std::set" type
                                 (:template-specifier 
                                    ( ("T" type nil nil nil)
                                      ("C" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [4519 4538])
                            ("SmallVector::const_iterator" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [4560 4603])
                            ("SmallVector::iterator" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [4631 4668])
                            ("static_assert" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("N" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4904 4907]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [4890 4934])
                            ("public" label nil (reparse-symbol classsubparts) [4936 4943])
                            ("size_type" variable
                               (:default-value "size_t"
                                :type "int")
                                (reparse-symbol classsubparts) [4952 4971])
                            ("SmallSetIterator" variable (:type "int") (reparse-symbol classsubparts) [4997 5023])
                            ("empty" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [5067 5133])
                            ("size" function
                               (:methodconst-flag t
                                :type ("size_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5137 5216])
                            ("count" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5302 5313]))                                  
                                :type ("size_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5286 5504])
                            ("insert" function
                               (:arguments 
                                  ( ("V" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5962 5973]))                                  
                                :type ("std::pair" type
                                     (:template-specifier 
                                        ( ("NoneType" type nil nil nil)
                                          ("bool" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [5929 6496])
                            ("insert" function
                               (:template 
                                  ( ("IterT" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("I" variable (:type ("IterT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6540 6548])
                                    ("E" variable (:type ("IterT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6549 6557]))                                  )
                                (reparse-symbol classsubparts) [6500 6605])
                            ("erase" function
                               (:arguments 
                                  ( ("V" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6620 6631]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [6609 6854])
                            ("clear" function (:type "void") (reparse-symbol classsubparts) [6858 6913])
                            ("begin" function
                               (:methodconst-flag t
                                :type ("const_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6917 7027])
                            ("end" function
                               (:methodconst-flag t
                                :type ("const_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7031 7135])
                            ("contains" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7209 7220]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [7195 7327])
                            ("private" label nil (reparse-symbol classsubparts) [7329 7337])
                            ("isSmall" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [7340 7384])
                            ("vfind" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("V" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7404 7415]))                                  
                                :type ("VIterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7388 7559]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [4292 7562])
                    ("SmallSet" type
                       (:template 
                          ( ("PointeeType" type (:type "class") nil nil)
                            ("unsigned int" type (:typevar "N") nil nil))                          
                        :type "class"
                        :superclasses 
                          ( ("SmallPtrSet" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :template-specifier 
                          ( ("PointeeType" type (:pointer 1) nil nil)
                            ("N" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [7670 7787])
                    ("==" function
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("unsigned int" type (:typevar "LN") nil nil)
                            ("unsigned int" type (:typevar "RN") nil nil)
                            ("C" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("LHS" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SmallSet" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("LN" type nil nil nil)
                                          ("C" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [8243 8273])
                            ("RHS" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SmallSet" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("RN" type nil nil nil)
                                          ("C" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [8274 8304]))                          
                        :operator-flag t)
                        (reparse-symbol namespacesubparts) [8167 8471])
                    ("!=" function
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("unsigned int" type (:typevar "LN") nil nil)
                            ("unsigned int" type (:typevar "RN") nil nil)
                            ("C" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("LHS" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SmallSet" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("LN" type nil nil nil)
                                          ("C" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [8664 8694])
                            ("RHS" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SmallSet" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("RN" type nil nil nil)
                                          ("C" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [8695 8725]))                          
                        :operator-flag t)
                        (reparse-symbol namespacesubparts) [8588 8753]))                  
                :type "namespace")
                nil [899 8756]))          
      :file "SmallSet.h"
      :pointmax 8810
      :fsize 8809
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((symbol 5052 . 5066) (punctuation 5047 . 5048) (DEFAULT 5040 . 5047) (punctuation 5038 . 5039) (semantic-list 5035 . 5037) (symbol 5027 . 5035) (punctuation 4995 . 4996) (symbol 4980 . 4994) (USING 4974 . 4979) (USING 4946 . 4951) (string 4913 . 4932) (number 4909 . 4911) (punctuation 4907 . 4908) (punctuation 4906 . 4907) (punctuation 4629 . 4630) (symbol 4612 . 4628) (USING 4606 . 4611) (punctuation 4558 . 4559) (symbol 4548 . 4557) (USING 4542 . 4547) (punctuation 4290 . 4291) (punctuation 4289 . 4290) (symbol 4288 . 4289) (punctuation 4287 . 4288) (symbol 4283 . 4287) (punctuation 4282 . 4283) (punctuation 4281 . 4282) (symbol 4278 . 4281) (punctuation 4276 . 4277) (symbol 4274 . 4275) (TYPENAME 4265 . 4273) (punctuation 4263 . 4264) (symbol 4262 . 4263) (UNSIGNED 4253 . 4261) (punctuation 4251 . 4252) (symbol 4250 . 4251) (TYPENAME 4241 . 4249) (punctuation 4240 . 4241) (TEMPLATE 4231 . 4239) (punctuation 3167 . 3168) (punctuation 2410 . 2411) (punctuation 1403 . 1404) (symbol 1396 . 1402) (USING 1390 . 1395) (punctuation 1342 . 1343) (symbol 1332 . 1341) (USING 1326 . 1331) (punctuation 1281 . 1282) (symbol 1271 . 1280) (USING 1265 . 1270))
      :lexical-table 
        '(("LLVM_ADT_SMALLSET_H")
          )
)
    (semanticdb-table "semanticdb-table-155562321948"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_POINTERUNION_H" variable (:constant-flag t) nil [609 632])
            ("llvm/ADT/DenseMapInfo.h" include nil nil [634 668])
            ("llvm/ADT/PointerIntPair.h" include nil nil [669 705])
            ("llvm/ADT/STLExtras.h" include nil nil [706 737])
            ("llvm/Support/PointerLikeTypeTraits.h" include nil nil [738 785])
            ("algorithm" include (:system-flag t) nil [786 806])
            ("cassert" include (:system-flag t) nil [807 825])
            ("cstddef" include (:system-flag t) nil [826 844])
            ("cstdint" include (:system-flag t) nil [845 863])
            ("llvm" type
               (:members 
                  ( ("pointer_union_detail" type
                       (:members 
                          ( ("bitsRequired" function
                               (:arguments 
                                  ( ("n" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [1053 1064]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [1036 1124])
                            ("lowBitsAvailable" function (:type "int") (reparse-symbol namespacesubparts) [1164 1271])
                            ("GetFirstType" type
                               (:members 
                                  ( ("type" variable
                                       (:default-value "T"
                                        :type "int")
                                        (reparse-symbol classsubparts) [1388 1397]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [1356 1402])
                            ("PointerUnionUIntTraits" type
                               (:members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [1575 1582])
                                    ("getAsVoidPointer" function
                                       (:pointer 1
                                        :typemodifiers ("static" "inline")
                                        :arguments 
                                          ( ("P" variable
                                               (:pointer 1
                                                :type "void")
                                                (reparse-symbol arg-sub-list) [1624 1632]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [1587 1646])
                                    ("getFromVoidPointer" function
                                       (:pointer 1
                                        :typemodifiers ("static" "inline")
                                        :arguments 
                                          ( ("P" variable
                                               (:pointer 1
                                                :type "void")
                                                (reparse-symbol arg-sub-list) [1690 1698]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [1651 1712]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [1542 1792])
                            ("PointerUnionMembers" type
                               (:prototype t
                                :type "class")
                                (reparse-symbol namespacesubparts) [1868 1894])
                            ("PointerUnionMembers" type
                               (:template 
                                  ( ("Derived" type (:type "class") nil nil)
                                    ("ValTy" type (:type "class") nil nil)
                                    ("int" type (:typevar "I") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("protected" label nil (reparse-symbol classsubparts) [2000 2010])
                                    ("Val" variable (:type ("ValTy" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2015 2025])
                                    ("PointerUnionMembers" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("Val" variable (:type ("ValTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2087 2097]))                                          
                                        :type ("PointerUnionMembers" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2067 2111])
                                    ("PointerLikeTypeTraits" type
                                       (:prototype t
                                        :template-specifier 
                                          ( ("Derived" type nil nil nil))                                          
                                        :type "struct")
                                        (reparse-symbol classsubparts) [2124 2162]))                                  
                                :template-specifier 
                                  ( ("Derived" type nil nil nil)
                                    ("ValTy" type nil nil nil)
                                    ("I" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [1898 2167]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [883 2955])
                    ("==" function
                       (:operator-flag t
                        :arguments 
                          ( ("" variable (:type ("PointerUnion" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6827 6840])
                            ("" variable (:type ("PTs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6840 6844])
                            ("" variable (:type ("lhs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6848 6852])
                            ("" variable (:type ("PointerUnion" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6853 6866])
                            ("" variable (:type ("PTs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6866 6870])
                            ("" variable (:type ("rhs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6874 6878]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [6811 6937])
                    ("!=" function
                       (:operator-flag t
                        :arguments 
                          ( ("" variable (:type ("PointerUnion" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6982 6995])
                            ("" variable (:type ("PTs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6995 6999])
                            ("" variable (:type ("lhs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7003 7007])
                            ("" variable (:type ("PointerUnion" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7008 7021])
                            ("" variable (:type ("PTs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7021 7025])
                            ("" variable (:type ("rhs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7029 7033]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [6966 7092])
                    ("<" function
                       (:operator-flag t
                        :arguments 
                          ( ("" variable (:type ("PointerUnion" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7136 7149])
                            ("" variable (:type ("PTs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7149 7153])
                            ("" variable (:type ("lhs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7157 7161])
                            ("" variable (:type ("PointerUnion" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7162 7175])
                            ("" variable (:type ("PTs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7175 7179])
                            ("" variable (:type ("rhs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7183 7187]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [7121 7245]))                  
                :type "namespace")
                nil [865 8641]))          
      :file "PointerUnion.h"
      :pointmax 8699
      :fsize 8698
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 8637 . 8638) (semantic-list 8062 . 8637) (punctuation 8060 . 8061) (punctuation 8059 . 8060) (punctuation 8058 . 8059) (punctuation 8057 . 8058) (punctuation 8056 . 8057) (symbol 8053 . 8056) (punctuation 8052 . 8053) (symbol 8040 . 8052) (punctuation 8039 . 8040) (symbol 8027 . 8039) (STRUCT 8020 . 8026) (punctuation 8018 . 8019) (symbol 8015 . 8018) (punctuation 8014 . 8015) (punctuation 8013 . 8014) (punctuation 8012 . 8013) (TYPENAME 8003 . 8011) (punctuation 8002 . 8003) (TEMPLATE 7993 . 8001) (punctuation 7938 . 7939) (semantic-list 7449 . 7938) (punctuation 7447 . 7448) (punctuation 7446 . 7447) (punctuation 7445 . 7446) (punctuation 7444 . 7445) (punctuation 7443 . 7444) (symbol 7440 . 7443) (punctuation 7439 . 7440) (symbol 7427 . 7439) (punctuation 7426 . 7427) (symbol 7405 . 7426) (STRUCT 7398 . 7404) (punctuation 7396 . 7397) (symbol 7393 . 7396) (punctuation 7392 . 7393) (punctuation 7391 . 7392) (punctuation 7390 . 7391) (TYPENAME 7381 . 7389) (punctuation 7380 . 7381) (TEMPLATE 7371 . 7379) (punctuation 7181 . 7182) (punctuation 7180 . 7181) (punctuation 7179 . 7180) (punctuation 7178 . 7179) (punctuation 7174 . 7175) (punctuation 7155 . 7156) (punctuation 7154 . 7155) (punctuation 7153 . 7154) (punctuation 7152 . 7153) (punctuation 7148 . 7149) (punctuation 7119 . 7120) (symbol 7116 . 7119) (punctuation 7115 . 7116) (punctuation 7114 . 7115) (punctuation 7113 . 7114) (TYPENAME 7104 . 7112) (punctuation 7103 . 7104) (TEMPLATE 7094 . 7102) (punctuation 7027 . 7028) (punctuation 7026 . 7027) (punctuation 7025 . 7026) (punctuation 7024 . 7025) (punctuation 7020 . 7021) (punctuation 7001 . 7002) (punctuation 7000 . 7001) (punctuation 6999 . 7000) (punctuation 6998 . 6999) (punctuation 6994 . 6995) (punctuation 6964 . 6965) (symbol 6961 . 6964) (punctuation 6960 . 6961) (punctuation 6959 . 6960) (punctuation 6958 . 6959) (TYPENAME 6949 . 6957) (punctuation 6948 . 6949) (TEMPLATE 6939 . 6947) (punctuation 6872 . 6873) (punctuation 6871 . 6872) (punctuation 6870 . 6871) (punctuation 6869 . 6870) (punctuation 6865 . 6866) (punctuation 6846 . 6847) (punctuation 6845 . 6846) (punctuation 6844 . 6845) (punctuation 6843 . 6844) (punctuation 6839 . 6840) (punctuation 6809 . 6810) (symbol 6806 . 6809) (punctuation 6805 . 6806) (punctuation 6804 . 6805) (punctuation 6803 . 6804) (TYPENAME 6794 . 6802) (punctuation 6793 . 6794) (TEMPLATE 6784 . 6792) (punctuation 6781 . 6782) (semantic-list 4072 . 6781) (punctuation 4070 . 4071) (punctuation 4069 . 4070) (punctuation 4068 . 4069) (punctuation 4067 . 4068) (symbol 4064 . 4067) (punctuation 4062 . 4063) (number 4061 . 4062) (punctuation 4049 . 4050) (punctuation 4048 . 4049) (punctuation 4047 . 4048) (punctuation 4046 . 4047) (punctuation 4045 . 4046) (punctuation 4044 . 4045) (symbol 4041 . 4044) (punctuation 4040 . 4041) (symbol 4018 . 4040) (punctuation 4017 . 4018) (punctuation 4016 . 4017) (symbol 3996 . 4016) (punctuation 3980 . 3981) (INT 3977 . 3980) (punctuation 3975 . 3976) (semantic-list 3959 . 3975) (symbol 3947 . 3959) (semantic-list 3969 . 3974) (punctuation 3968 . 3969) (punctuation 3967 . 3968) (punctuation 3966 . 3967) (SIZEOF 3960 . 3966) (punctuation 3946 . 3947) (punctuation 3945 . 3946) (symbol 3925 . 3945) (semantic-list 3969 . 3974) (punctuation 3968 . 3969) (punctuation 3967 . 3968) (punctuation 3966 . 3967) (SIZEOF 3960 . 3966) (punctuation 3923 . 3924) (punctuation 3922 . 3923) (VOID 3917 . 3921) (punctuation 3901 . 3902) (symbol 3887 . 3901) (punctuation 3875 . 3876) (punctuation 3874 . 3875) (punctuation 3873 . 3874) (punctuation 3872 . 3873) (punctuation 3871 . 3872) (symbol 3868 . 3871) (punctuation 3867 . 3868) (symbol 3855 . 3867) (punctuation 3843 . 3844) (symbol 3824 . 3843) (punctuation 3823 . 3824) (punctuation 3822 . 3823) (symbol 3802 . 3822) (PUBLIC 3795 . 3801) (punctuation 3793 . 3794) (symbol 3776 . 3788) (CLASS 3770 . 3775) (punctuation 3768 . 3769) (symbol 3765 . 3768) (punctuation 3763 . 3764) (punctuation 3762 . 3763) (punctuation 3761 . 3762) (TYPENAME 3753 . 3761) (punctuation 3752 . 3753) (TEMPLATE 3743 . 3751) (punctuation 2952 . 2953) (semantic-list 2399 . 2952) (punctuation 2397 . 2398) (punctuation 2396 . 2397) (punctuation 2395 . 2396) (punctuation 2394 . 2395) (symbol 2389 . 2394) (punctuation 2387 . 2388) (number 2386 . 2387) (punctuation 2384 . 2385) (symbol 2382 . 2383) (punctuation 2380 . 2381) (symbol 2375 . 2380) (punctuation 2373 . 2374) (symbol 2366 . 2373) (punctuation 2365 . 2366) (symbol 2346 . 2365) (PUBLIC 2339 . 2345) (punctuation 2337 . 2338) (punctuation 2329 . 2330) (punctuation 2328 . 2329) (punctuation 2327 . 2328) (punctuation 2326 . 2327) (symbol 2321 . 2326) (punctuation 2319 . 2320) (symbol 2315 . 2319) (punctuation 2313 . 2314) (symbol 2312 . 2313) (punctuation 2310 . 2311) (symbol 2305 . 2310) (punctuation 2303 . 2304) (symbol 2296 . 2303) (punctuation 2295 . 2296) (symbol 2276 . 2295) (CLASS 2270 . 2275) (punctuation 2266 . 2267) (symbol 2261 . 2266) (punctuation 2260 . 2261) (punctuation 2259 . 2260) (punctuation 2258 . 2259) (TYPENAME 2249 . 2257) (punctuation 2235 . 2236) (symbol 2231 . 2235) (TYPENAME 2222 . 2230) (punctuation 2220 . 2221) (symbol 2219 . 2220) (INT 2215 . 2218) (punctuation 2213 . 2214) (symbol 2208 . 2213) (TYPENAME 2199 . 2207) (punctuation 2197 . 2198) (symbol 2190 . 2197) (TYPENAME 2181 . 2189) (punctuation 2180 . 2181) (TEMPLATE 2171 . 2179) (FRIEND 2117 . 2123) (punctuation 2061 . 2062) (DEFAULT 2054 . 2061) (punctuation 2052 . 2053) (semantic-list 2049 . 2051) (symbol 2030 . 2049) (punctuation 1864 . 1865) (symbol 1859 . 1864) (punctuation 1858 . 1859) (punctuation 1857 . 1858) (punctuation 1856 . 1857) (TYPENAME 1847 . 1855) (punctuation 1845 . 1846) (symbol 1844 . 1845) (INT 1840 . 1843) (punctuation 1838 . 1839) (symbol 1833 . 1838) (TYPENAME 1824 . 1832) (punctuation 1822 . 1823) (symbol 1815 . 1822) (TYPENAME 1806 . 1814) (punctuation 1805 . 1806) (TEMPLATE 1796 . 1804) (punctuation 1786 . 1787) (semantic-list 1784 . 1786) (punctuation 1783 . 1784) (punctuation 1782 . 1783) (punctuation 1781 . 1782) (punctuation 1780 . 1781) (symbol 1777 . 1780) (punctuation 1776 . 1777) (symbol 1760 . 1776) (punctuation 1758 . 1759) (symbol 1738 . 1757) (INT 1734 . 1737) (symbol 1724 . 1733) (STATIC 1717 . 1723) (punctuation 1540 . 1541) (symbol 1537 . 1540) (punctuation 1536 . 1537) (punctuation 1535 . 1536) (punctuation 1534 . 1535) (TYPENAME 1525 . 1533) (punctuation 1524 . 1525) (TEMPLATE 1515 . 1523) (USING 1382 . 1387) (punctuation 1354 . 1355) (punctuation 1353 . 1354) (punctuation 1352 . 1353) (punctuation 1351 . 1352) (TYPENAME 1343 . 1351) (punctuation 1341 . 1342) (symbol 1340 . 1341) (TYPENAME 1331 . 1339) (punctuation 1330 . 1331) (TEMPLATE 1321 . 1329) (symbol 1154 . 1163) (punctuation 1152 . 1153) (symbol 1150 . 1152) (punctuation 1148 . 1149) (punctuation 1147 . 1148) (punctuation 1146 . 1147) (TYPENAME 1138 . 1146) (punctuation 1137 . 1138) (TEMPLATE 1128 . 1136) (symbol 1026 . 1035))
      :lexical-table 
        '(("LLVM_ADT_POINTERUNION_H")
          )
)
    (semanticdb-table "semanticdb-table-15556236f938"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_ANY_H" variable (:constant-flag t) nil [726 740])
            ("llvm/ADT/STLForwardCompat.h" include nil nil [742 780])
            ("llvm/Support/Compiler.h" include nil nil [781 815])
            ("cassert" include (:system-flag t) nil [817 835])
            ("memory" include (:system-flag t) nil [836 853])
            ("type_traits" include (:system-flag t) nil [854 876])
            ("llvm" type
               (:members 
                  ( ("Any" variable (:type ("LLVM_EXTERNAL_VISIBILITY" type
                         (:prototype t
                          :type "class")
                          nil nil)) (reparse-symbol namespacesubparts) [896 4204])
                    ("Any::TypeId::Id" variable
                       (:constant-flag t
                        :default-value "0"
                        :type "char")
                        (reparse-symbol namespacesubparts) [4206 4262])
                    ("any_isa" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("Value" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Any" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4300 4317]))                          )
                        (reparse-symbol namespacesubparts) [4265 4430])
                    ("any_cast" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("T" type (:type "class") nil nil)
                        :arguments 
                          ( ("Value" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Any" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4462 4479]))                          )
                        (reparse-symbol namespacesubparts) [4432 4546])
                    ("any_cast" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("T" type (:type "class") nil nil)
                        :arguments 
                          ( ("Value" variable
                               (:reference 1
                                :type ("Any" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4578 4589]))                          )
                        (reparse-symbol namespacesubparts) [4548 4656])
                    ("any_cast" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("T" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("Any" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4688 4694])
                            ("" variable (:type ("Value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4694 4700]))                          )
                        (reparse-symbol namespacesubparts) [4658 4778])
                    ("any_cast" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("T" type (:type "class") nil nil)
                        :arguments 
                          ( ("Value" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("Any" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4817 4834]))                          
                        :constant-flag t
                        :pointer 1)
                        (reparse-symbol namespacesubparts) [4780 5053])
                    ("any_cast" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("T" type (:type "class") nil nil)
                        :arguments 
                          ( ("Value" variable
                               (:pointer 1
                                :type ("Any" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5086 5097]))                          
                        :pointer 1)
                        (reparse-symbol namespacesubparts) [5055 5314]))                  
                :type "namespace")
                nil [878 5317]))          
      :file "Any.h"
      :pointmax 5366
      :fsize 5365
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 4693 . 4694))
      :lexical-table 
        '(("LLVM_ADT_ANY_H")
          )
)
    (semanticdb-table "semanticdb-table-15556236f998"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_FUNCTIONEXTRAS_H" variable (:constant-flag t) nil [1446 1471])
            ("llvm/ADT/PointerIntPair.h" include nil nil [1473 1509])
            ("llvm/ADT/PointerUnion.h" include nil nil [1510 1544])
            ("llvm/ADT/STLForwardCompat.h" include nil nil [1545 1583])
            ("llvm/Support/MemAlloc.h" include nil nil [1584 1618])
            ("llvm/Support/type_traits.h" include nil nil [1619 1656])
            ("cstring" include (:system-flag t) nil [1657 1675])
            ("memory" include (:system-flag t) nil [1676 1693])
            ("type_traits" include (:system-flag t) nil [1694 1716])
            ("llvm" type
               (:members 
                  ( ("unique_function" type
                       (:template 
                          ( ("FunctionT" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [2252 2304])
                    ("detail" type
                       (:members 
                          ( ("UniqueFunctionBase" type
                               (:members 
                                  ( ("protected" label nil (reparse-symbol classsubparts) [3278 3288])
                                    ("IsSizeLessThanThresholdT" type
                                       (:superclasses 
                                          ( ("std::false_type" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :type "struct")
                                        (reparse-symbol classsubparts) [3396 3449])
                                    ("std::true_type" variable (:type "int") (reparse-symbol classsubparts) [3572 3590])
                                    ("AdjustedParamTBase" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("static_assert" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("std::is_reference::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4272 4300]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [4257 4378])
                                            ("type" variable (:type "int") (reparse-symbol classsubparts) [4610 4615]))                                          )
                                        (reparse-symbol classsubparts) [4203 4620])
                                    ("AdjustedParamTBase" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :template-specifier 
                                          ( ("T" type (:reference 1) nil nil))                                          )
                                        (reparse-symbol classsubparts) [4815 4890])
                                    ("AdjustedParamTBase::type" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [5020 5057])
                                    ("" function
                                       (:prototype-flag t
                                        :operator-flag t
                                        :function-pointer t
                                        :arguments 
                                          ( ("CallableAddr" variable
                                               (:pointer 1
                                                :type "void")
                                                (reparse-symbol arg-sub-list) [5236 5255])
                                            ("" variable (:type ("AdjustedParamT" type
                                                 (:template-specifier 
                                                    ( ("ParamTs" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [5287 5311])
                                            ("" variable (:type ("Params" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5314 5321]))                                          
                                        :type ("ReturnT" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [5224 5322])
                                    ("" function
                                       (:prototype-flag t
                                        :operator-flag t
                                        :function-pointer t
                                        :arguments 
                                          ( ("LHSCallableAddr" variable
                                               (:pointer 1
                                                :type "void")
                                                (reparse-symbol arg-sub-list) [5351 5373])
                                            ("RHSCallableAddr" variable
                                               (:pointer 1
                                                :type "void")
                                                (reparse-symbol arg-sub-list) [5374 5396]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [5342 5397])
                                    ("" function
                                       (:prototype-flag t
                                        :operator-flag t
                                        :function-pointer t
                                        :arguments 
                                          ( ("CallableAddr" variable
                                               (:pointer 1
                                                :type "void")
                                                (reparse-symbol arg-sub-list) [5429 5448]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [5420 5449])
                                    ("TrivialCallback" variable (:type ("alignas" type (:type "struct") nil nil)) (reparse-symbol classsubparts) [5554 5616])
                                    ("NonTrivialCallbacks" variable (:type ("alignas" type (:type "struct") nil nil)) (reparse-symbol classsubparts) [5714 5830])
                                    ("PointerUnion" variable (:type "int") (reparse-symbol classsubparts) [6051 6106])
                                    ("StorageUnion" variable (:type ("StorageUnionT" type
                                         (:prototype t
                                          :type "union")
                                          nil nil)) (reparse-symbol classsubparts) [6242 7069])
                                    ("StorageUnionT" type
                                       (:members 
                                          ( ("OutOfLineStorage" variable (:type ("OutOfLineStorageT" type
                                                 (:prototype t
                                                  :type "struct")
                                                  nil nil)) (reparse-symbol classsubparts) [6405 6522])
                                            ("OutOfLineStorageT" type
                                               (:members 
                                                  ( ("StoragePtr" variable
                                                       (:pointer 1
                                                        :type "void")
                                                        (reparse-symbol classsubparts) [6438 6455])
                                                    ("Size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6462 6474])
                                                    ("Alignment" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6481 6498]))                                                  
                                                :type "struct")
                                                (reparse-symbol classsubparts) [6405 6522])
                                            ("static_assert" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("InlineStorageSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6579 6597]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [6527 6678])
                                            ("InlineStorage" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7020 7051]))                                          
                                        :type "union")
                                        (reparse-symbol classsubparts) [6242 7069])
                                    ("CallbackAndInlineFlag" variable (:type ("PointerIntPair" type
                                         (:template-specifier 
                                            ( ("CallbackPointerUnionT" type nil nil nil)
                                              ("1")
                                              ("bool" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [7252 7321])
                                    ("isInlineStorage" function
                                       (:methodconst-flag t
                                        :type "bool")
                                        (reparse-symbol classsubparts) [7325 7396])
                                    ("isTrivialCallback" function
                                       (:methodconst-flag t
                                        :type "bool")
                                        (reparse-symbol classsubparts) [7400 7516])
                                    ("getTrivialCallback" function
                                       (:methodconst-flag t
                                        :type ("CallPtrT" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7520 7651])
                                    ("getNonTrivialCallbacks" function
                                       (:methodconst-flag t
                                        :pointer 1
                                        :type ("NonTrivialCallbacks" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7655 7806])
                                    ("getCallPtr" function
                                       (:methodconst-flag t
                                        :type ("CallPtrT" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7810 7965])
                                    ("getCalleePtr" function
                                       (:methodconst-flag t
                                        :pointer 1
                                        :type "void")
                                        (reparse-symbol classsubparts) [8292 8399])
                                    ("getInlineStorage" function
                                       (:methodconst-flag t
                                        :pointer 1
                                        :type "void")
                                        (reparse-symbol classsubparts) [8402 8472])
                                    ("getOutOfLineStorage" function
                                       (:methodconst-flag t
                                        :pointer 1
                                        :type "void")
                                        (reparse-symbol classsubparts) [8475 8567])
                                    ("getOutOfLineStorageSize" function
                                       (:methodconst-flag t
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [8571 8662])
                                    ("getOutOfLineStorageAlignment" function
                                       (:methodconst-flag t
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [8665 8766])
                                    ("setOutOfLineStorage" function
                                       (:arguments 
                                          ( ("Ptr" variable
                                               (:pointer 1
                                                :type "void")
                                                (reparse-symbol arg-sub-list) [8795 8805])
                                            ("Size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8806 8818])
                                            ("Alignment" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8819 8836]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [8770 8902])
                                    ("CallImpl" function
                                       (:template 
                                          ( ("CalledAsT" type (:type "class") nil nil))                                          
                                        :type ("ReturnT" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("CallableAddr" variable
                                               (:pointer 1
                                                :type "void")
                                                (reparse-symbol arg-sub-list) [8962 8981])
                                            ("" variable (:type ("AdjustedParamT" type
                                                 (:template-specifier 
                                                    ( ("ParamTs" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [9008 9032])
                                            ("" variable (:type ("Params" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9035 9042]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [8906 9162])
                                    ("CallbacksHolder" type
                                       (:members 
                                          ( ("Callbacks" variable
                                               (:typemodifiers ("static")
                                                :type ("NonTrivialCallbacks" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [10101 10138]))                                          
                                        :type "struct")
                                        (reparse-symbol classsubparts) [10072 10143])
                                    ("CallbacksHolder" type
                                       (:template 
                                          ( ("CallableT" type (:type "class") nil nil)
                                            ("CalledAs" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("Callbacks" variable
                                               (:typemodifiers ("static")
                                                :type ("TrivialCallback" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [10473 10506]))                                          
                                        :template-specifier 
                                          ( ("CallableT" type nil nil nil)
                                            ("CalledAs" type nil nil nil)
                                            ("EnableIfTrivial" type (:template-specifier 
                                              ( ("CallableT" type nil nil nil))                                              ) nil nil))                                          )
                                        (reparse-symbol classsubparts) [10344 10511])
                                    ("CalledAs" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct")
                                        (reparse-symbol classsubparts) [10591 10632])
                                    ("UniqueFunctionBase" function
                                       (:template 
                                          ( ("CallableT" type (:type "class") nil nil)
                                            ("CalledAsT" type (:type "class") nil nil))                                          
                                        :type ("UniqueFunctionBase" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("Callable" variable (:type ("CallableT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10912 10931])
                                            ("" variable (:type ("CalledAs" type
                                                 (:template-specifier 
                                                    ( ("CalledAsT" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [10932 10952]))                                          
                                        :constructor-flag t)
                                        (reparse-symbol classsubparts) [10841 11710])
                                    ("UniqueFunctionBase" function
                                       (:destructor-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [11714 12231])
                                    ("public" label nil (reparse-symbol classsubparts) [13762 13769]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [3251 13864])
                            ("CallbacksHolder::Callbacks" variable
                               (:default-value "{
    &CallImpl<CalledAsT>, &MoveImpl<CallableT>, &DestroyImpl<CallableT>}"
                                :type "int")
                                (reparse-symbol namespacesubparts) [14062 14196])
                            ("CallbacksHolder::Callbacks" variable (:type "int") (reparse-symbol namespacesubparts) [14372 14489]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [2306 14492]))                  
                :type "namespace")
                nil [1718 16347]))          
      :file "FunctionExtras.h"
      :pointmax 16407
      :fsize 16406
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 16343 . 16344) (semantic-list 15539 . 16343) (punctuation 15537 . 15538) (punctuation 15536 . 15537) (punctuation 15535 . 15536) (punctuation 15534 . 15535) (symbol 15533 . 15534) (punctuation 15531 . 15532) (symbol 15530 . 15531) (punctuation 15529 . 15530) (symbol 15511 . 15529) (punctuation 15510 . 15511) (punctuation 15509 . 15510) (symbol 15503 . 15509) (PUBLIC 15496 . 15502) (punctuation 15494 . 15495) (punctuation 15488 . 15489) (CONST 15483 . 15488) (semantic-list 15476 . 15482) (symbol 15475 . 15476) (punctuation 15474 . 15475) (symbol 15459 . 15474) (CLASS 15453 . 15458) (punctuation 15451 . 15452) (symbol 15450 . 15451) (punctuation 15448 . 15449) (punctuation 15447 . 15448) (punctuation 15446 . 15447) (TYPENAME 15438 . 15446) (punctuation 15436 . 15437) (symbol 15435 . 15436) (TYPENAME 15426 . 15434) (punctuation 15425 . 15426) (TEMPLATE 15416 . 15424) (punctuation 15413 . 15414) (semantic-list 14627 . 15413) (punctuation 14625 . 14626) (punctuation 14624 . 14625) (punctuation 14623 . 14624) (punctuation 14622 . 14623) (symbol 14621 . 14622) (punctuation 14619 . 14620) (symbol 14618 . 14619) (punctuation 14617 . 14618) (symbol 14599 . 14617) (punctuation 14598 . 14599) (punctuation 14597 . 14598) (symbol 14591 . 14597) (PUBLIC 14584 . 14590) (punctuation 14582 . 14583) (punctuation 14580 . 14581) (semantic-list 14574 . 14580) (symbol 14573 . 14574) (punctuation 14572 . 14573) (symbol 14557 . 14572) (CLASS 14551 . 14556) (punctuation 14549 . 14550) (symbol 14548 . 14549) (punctuation 14546 . 14547) (punctuation 14545 . 14546) (punctuation 14544 . 14545) (TYPENAME 14536 . 14544) (punctuation 14534 . 14535) (symbol 14533 . 14534) (TYPENAME 14524 . 14532) (punctuation 14523 . 14524) (TEMPLATE 14514 . 14522) (punctuation 14371 . 14372) (punctuation 14370 . 14371) (punctuation 14369 . 14370) (punctuation 14368 . 14369) (punctuation 14367 . 14368) (punctuation 14366 . 14367) (symbol 14365 . 14366) (punctuation 14363 . 14364) (symbol 14362 . 14363) (punctuation 14361 . 14362) (symbol 14343 . 14361) (symbol 14323 . 14338) (punctuation 14322 . 14323) (punctuation 14321 . 14322) (punctuation 14320 . 14321) (punctuation 14319 . 14320) (punctuation 14318 . 14319) (punctuation 14317 . 14318) (symbol 14316 . 14317) (punctuation 14314 . 14315) (symbol 14313 . 14314) (punctuation 14312 . 14313) (symbol 14294 . 14312) (TYPENAME 14285 . 14293) (punctuation 14283 . 14284) (symbol 14274 . 14283) (TYPENAME 14265 . 14273) (punctuation 14263 . 14264) (symbol 14254 . 14263) (TYPENAME 14245 . 14253) (punctuation 14244 . 14245) (TEMPLATE 14235 . 14243) (punctuation 14233 . 14234) (symbol 14232 . 14233) (punctuation 14230 . 14231) (punctuation 14229 . 14230) (punctuation 14228 . 14229) (TYPENAME 14220 . 14228) (punctuation 14218 . 14219) (symbol 14217 . 14218) (TYPENAME 14208 . 14216) (punctuation 14207 . 14208) (TEMPLATE 14198 . 14206) (punctuation 14061 . 14062) (punctuation 14060 . 14061) (punctuation 14059 . 14060) (punctuation 14058 . 14059) (punctuation 14057 . 14058) (punctuation 14056 . 14057) (symbol 14055 . 14056) (punctuation 14053 . 14054) (symbol 14052 . 14053) (punctuation 14046 . 14047) (symbol 14028 . 14046) (symbol 14008 . 14027) (punctuation 14007 . 14008) (punctuation 14006 . 14007) (punctuation 14005 . 14006) (punctuation 14004 . 14005) (punctuation 14003 . 14004) (punctuation 14002 . 14003) (symbol 14001 . 14002) (punctuation 13999 . 14000) (symbol 13998 . 13999) (punctuation 13997 . 13998) (symbol 13979 . 13997) (TYPENAME 13970 . 13978) (punctuation 13968 . 13969) (symbol 13962 . 13968) (TYPENAME 13953 . 13961) (punctuation 13951 . 13952) (symbol 13942 . 13951) (TYPENAME 13933 . 13941) (punctuation 13931 . 13932) (symbol 13922 . 13931) (TYPENAME 13913 . 13921) (punctuation 13912 . 13913) (TEMPLATE 13903 . 13911) (punctuation 13901 . 13902) (symbol 13900 . 13901) (punctuation 13898 . 13899) (punctuation 13897 . 13898) (punctuation 13896 . 13897) (TYPENAME 13888 . 13896) (punctuation 13886 . 13887) (symbol 13885 . 13886) (TYPENAME 13876 . 13884) (punctuation 13875 . 13876) (TEMPLATE 13866 . 13874) (semantic-list 13803 . 13861) (CONST 13797 . 13802) (semantic-list 13794 . 13796) (BOOL 13790 . 13794) (OPERATOR 13781 . 13789) (EXPLICIT 13772 . 13780) (punctuation 13759 . 13760) (DEFAULT 13752 . 13759) (punctuation 13750 . 13751) (semantic-list 13747 . 13749) (symbol 13729 . 13747) (semantic-list 13363 . 13725) (symbol 13354 . 13362) (semantic-list 13327 . 13353) (punctuation 13326 . 13327) (OPERATOR 13318 . 13326) (punctuation 13348 . 13349) (punctuation 13317 . 13318) (symbol 13298 . 13316) (punctuation 13348 . 13349) (semantic-list 12289 . 13294) (symbol 12280 . 12288) (semantic-list 12253 . 12279) (symbol 12235 . 12253) (punctuation 12274 . 12275) (punctuation 10068 . 10069) (VOID 10064 . 10068) (punctuation 10062 . 10063) (symbol 10055 . 10061) (TYPENAME 10046 . 10054) (punctuation 10044 . 10045) (symbol 10036 . 10044) (TYPENAME 10027 . 10035) (punctuation 10025 . 10026) (symbol 10016 . 10025) (TYPENAME 10007 . 10015) (punctuation 10006 . 10007) (TEMPLATE 9997 . 10005) (semantic-list 9473 . 9541) (symbol 9464 . 9472) (semantic-list 9443 . 9463) (symbol 9432 . 9443) (VOID 9427 . 9431) (STATIC 9420 . 9426) (punctuation 9416 . 9417) (symbol 9407 . 9416) (TYPENAME 9398 . 9406) (punctuation 9397 . 9398) (TEMPLATE 9388 . 9396) (semantic-list 9274 . 9384) (symbol 9265 . 9273) (semantic-list 9218 . 9264) (symbol 9210 . 9218) (VOID 9205 . 9209) (STATIC 9198 . 9204) (punctuation 9194 . 9195) (symbol 9185 . 9194) (TYPENAME 9176 . 9184) (punctuation 9175 . 9176) (TEMPLATE 9166 . 9174) (punctuation 9033 . 9034) (punctuation 9032 . 9033) (punctuation 9031 . 9032) (punctuation 7019 . 7020) (punctuation 7018 . 7019) (punctuation 7017 . 7018) (semantic-list 7009 . 7017) (symbol 7002 . 7009) (punctuation 7000 . 7001) (symbol 6983 . 7000) (punctuation 6982 . 6983) (symbol 6967 . 6982) (punctuation 6966 . 6967) (punctuation 6965 . 6966) (symbol 6962 . 6965) (TYPENAME 6953 . 6961) (MUTABLE 6937 . 6944) (string 6606 . 6676) (punctuation 6577 . 6578) (punctuation 6576 . 6577) (semantic-list 6556 . 6575) (SIZEOF 6550 . 6556) (punctuation 6043 . 6044) (symbol 6021 . 6042) (USING 6015 . 6020) (close-paren 5730 . 5731) (number 5729 . 5730) (open-paren 5728 . 5729) (close-paren 5570 . 5571) (number 5569 . 5570) (open-paren 5568 . 5569) (punctuation 5418 . 5419) (symbol 5406 . 5417) (USING 5400 . 5405) (punctuation 5340 . 5341) (symbol 5331 . 5339) (USING 5325 . 5330) (punctuation 5312 . 5313) (punctuation 5311 . 5312) (punctuation 5310 . 5311) (punctuation 5222 . 5223) (symbol 5213 . 5221) (USING 5207 . 5212) (punctuation 5018 . 5019) (symbol 5003 . 5017) (USING 4997 . 5002) (punctuation 4993 . 4994) (symbol 4992 . 4993) (TYPENAME 4983 . 4991) (punctuation 4982 . 4983) (TEMPLATE 4973 . 4981) (punctuation 4968 . 4969) (semantic-list 4947 . 4968) (punctuation 4945 . 4946) (punctuation 4944 . 4945) (punctuation 4943 . 4944) (symbol 4941 . 4942) (punctuation 4940 . 4941) (symbol 4922 . 4940) (STRUCT 4915 . 4921) (punctuation 4913 . 4914) (symbol 4912 . 4913) (TYPENAME 4903 . 4911) (punctuation 4902 . 4903) (TEMPLATE 4893 . 4901) (punctuation 4886 . 4887) (punctuation 4885 . 4886) (symbol 4883 . 4884) (punctuation 4881 . 4882) (symbol 4876 . 4880) (USING 4870 . 4875) (punctuation 4609 . 4610) (punctuation 4608 . 4609) (punctuation 4607 . 4608) (punctuation 4606 . 4607) (symbol 4604 . 4605) (punctuation 4602 . 4603) (symbol 4601 . 4602) (punctuation 4591 . 4592) (symbol 4586 . 4591) (punctuation 4585 . 4586) (punctuation 4584 . 4585) (punctuation 4583 . 4584) (symbol 4582 . 4583) (punctuation 4581 . 4582) (symbol 4557 . 4581) (punctuation 4543 . 4544) (punctuation 4542 . 4543) (symbol 4536 . 4541) (punctuation 4535 . 4536) (punctuation 4534 . 4535) (punctuation 4533 . 4534) (symbol 4532 . 4533) (punctuation 4531 . 4532) (symbol 4500 . 4531) (punctuation 4499 . 4500) (punctuation 4498 . 4499) (symbol 4494 . 4498) (punctuation 4480 . 4481) (punctuation 4479 . 4480) (symbol 4473 . 4478) (punctuation 4472 . 4473) (punctuation 4471 . 4472) (punctuation 4470 . 4471) (symbol 4469 . 4470) (punctuation 4468 . 4469) (symbol 4437 . 4468) (punctuation 4436 . 4437) (punctuation 4435 . 4436) (symbol 4431 . 4435) (punctuation 4421 . 4422) (symbol 4410 . 4421) (punctuation 4409 . 4410) (punctuation 4408 . 4409) (symbol 4405 . 4408) (TYPENAME 4396 . 4404) (punctuation 4394 . 4395) (symbol 4389 . 4393) (USING 4383 . 4388) (string 4319 . 4376) (punctuation 4271 . 4272) (punctuation 3570 . 3571) (punctuation 3568 . 3569) (punctuation 3567 . 3568) (semantic-list 3559 . 3567) (SIZEOF 3553 . 3559) (punctuation 3551 . 3552) (number 3549 . 3550) (punctuation 3547 . 3548) (punctuation 3546 . 3547) (semantic-list 3542 . 3545) (SIZEOF 3536 . 3542) (punctuation 3535 . 3536) (symbol 3524 . 3535) (punctuation 3523 . 3524) (punctuation 3522 . 3523) (symbol 3519 . 3522) (punctuation 3517 . 3518) (symbol 3516 . 3517) (punctuation 3508 . 3509) (symbol 3484 . 3508) (STRUCT 3477 . 3483) (punctuation 3473 . 3474) (symbol 3472 . 3473) (TYPENAME 3463 . 3471) (punctuation 3462 . 3463) (TEMPLATE 3453 . 3461) (punctuation 3392 . 3393) (VOID 3388 . 3392) (punctuation 3386 . 3387) (CLASS 3380 . 3385) (punctuation 3378 . 3379) (symbol 3377 . 3378) (TYPENAME 3368 . 3376) (punctuation 3367 . 3368) (TEMPLATE 3358 . 3366) (punctuation 3353 . 3354) (number 3352 . 3353) (punctuation 3350 . 3351) (semantic-list 3341 . 3349) (SIZEOF 3335 . 3341) (punctuation 3333 . 3334) (symbol 3315 . 3332) (symbol 3308 . 3314) (symbol 3298 . 3307) (STATIC 3291 . 3297) (punctuation 3249 . 3250) (symbol 3242 . 3249) (punctuation 3240 . 3241) (punctuation 3239 . 3240) (punctuation 3238 . 3239) (TYPENAME 3230 . 3238) (punctuation 3228 . 3229) (symbol 3221 . 3228) (TYPENAME 3212 . 3220) (punctuation 3211 . 3212) (TEMPLATE 3202 . 3210) (punctuation 3199 . 3200) (punctuation 3198 . 3199) (symbol 3193 . 3198) (punctuation 3192 . 3193) (punctuation 3191 . 3192) (punctuation 3190 . 3191) (punctuation 3189 . 3190) (symbol 3186 . 3189) (punctuation 3160 . 3161) (semantic-list 3077 . 3160) (symbol 3069 . 3077) (semantic-list 3153 . 3155) (punctuation 3068 . 3069) (symbol 3054 . 3068) (punctuation 3053 . 3054) (punctuation 3052 . 3053) (symbol 3049 . 3052) (punctuation 3043 . 3044) (punctuation 3042 . 3043) (symbol 3039 . 3042) (punctuation 3020 . 3021) (semantic-list 2944 . 3020) (symbol 2936 . 2944) (semantic-list 3013 . 3015) (CONST 2930 . 2935) (semantic-list 3013 . 3015) (punctuation 2929 . 2930) (symbol 2922 . 2929) (punctuation 2921 . 2922) (punctuation 2920 . 2921) (symbol 2917 . 2920) (punctuation 2911 . 2912) (punctuation 2910 . 2911) (symbol 2907 . 2910) (punctuation 2888 . 2889) (semantic-list 2834 . 2888) (symbol 2826 . 2834) (semantic-list 2881 . 2883) (punctuation 2825 . 2826) (symbol 2818 . 2825) (punctuation 2817 . 2818) (punctuation 2816 . 2817) (symbol 2813 . 2816) (punctuation 2807 . 2808) (punctuation 2806 . 2807) (symbol 2803 . 2806) (punctuation 2802 . 2803) (symbol 2795 . 2802) (punctuation 2794 . 2795) (punctuation 2793 . 2794) (symbol 2790 . 2793) (punctuation 2784 . 2785) (symbol 2773 . 2784) (punctuation 2772 . 2773) (punctuation 2771 . 2772) (symbol 2767 . 2771) (punctuation 2766 . 2767) (symbol 2755 . 2766) (punctuation 2754 . 2755) (punctuation 2753 . 2754) (symbol 2750 . 2753) (punctuation 2748 . 2749) (symbol 2731 . 2747) (USING 2725 . 2730) (punctuation 2723 . 2724) (symbol 2717 . 2723) (punctuation 2715 . 2716) (punctuation 2714 . 2715) (punctuation 2713 . 2714) (TYPENAME 2705 . 2713) (punctuation 2703 . 2704) (symbol 2700 . 2703) (TYPENAME 2691 . 2699) (punctuation 2689 . 2690) (symbol 2680 . 2689) (TYPENAME 2671 . 2679) (punctuation 2670 . 2671) (TEMPLATE 2661 . 2669) (punctuation 2659 . 2660) (punctuation 2658 . 2659) (symbol 2653 . 2658) (punctuation 2652 . 2653) (punctuation 2651 . 2652) (punctuation 2650 . 2651) (symbol 2645 . 2650) (punctuation 2643 . 2644) (punctuation 2642 . 2643) (symbol 2633 . 2642) (punctuation 2632 . 2633) (symbol 2618 . 2632) (punctuation 2617 . 2618) (symbol 2610 . 2617) (punctuation 2609 . 2610) (punctuation 2608 . 2609) (symbol 2605 . 2608) (punctuation 2604 . 2605) (punctuation 2603 . 2604) (symbol 2592 . 2603) (punctuation 2591 . 2592) (punctuation 2590 . 2591) (symbol 2587 . 2590) (punctuation 2581 . 2582) (symbol 2560 . 2580) (USING 2554 . 2559) (punctuation 2552 . 2553) (symbol 2547 . 2552) (TYPENAME 2538 . 2546) (punctuation 2536 . 2537) (symbol 2527 . 2536) (TYPENAME 2518 . 2526) (punctuation 2517 . 2518) (TEMPLATE 2508 . 2516) (punctuation 2506 . 2507) (punctuation 2505 . 2506) (symbol 2500 . 2505) (punctuation 2499 . 2500) (punctuation 2498 . 2499) (punctuation 2497 . 2498) (symbol 2496 . 2497) (punctuation 2495 . 2496) (symbol 2470 . 2495) (punctuation 2469 . 2470) (punctuation 2468 . 2469) (symbol 2465 . 2468) (punctuation 2442 . 2443) (punctuation 2441 . 2442) (symbol 2435 . 2440) (punctuation 2434 . 2435) (punctuation 2433 . 2434) (punctuation 2432 . 2433) (symbol 2431 . 2432) (punctuation 2430 . 2431) (symbol 2399 . 2430) (punctuation 2398 . 2399) (punctuation 2397 . 2398) (symbol 2393 . 2397) (punctuation 2392 . 2393) (symbol 2381 . 2392) (punctuation 2380 . 2381) (punctuation 2379 . 2380) (symbol 2376 . 2379) (punctuation 2370 . 2371) (symbol 2354 . 2369) (USING 2348 . 2353) (punctuation 2346 . 2347) (symbol 2345 . 2346) (TYPENAME 2336 . 2344) (punctuation 2335 . 2336) (TEMPLATE 2326 . 2334))
      :lexical-table 
        '(("LLVM_ADT_FUNCTIONEXTRAS_H")
          )
)
    (semanticdb-table "semanticdb-table-1555623080f6"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_ILIST_NODE_BASE_H" variable (:constant-flag t) nil [414 440])
            ("llvm/ADT/PointerIntPair.h" include nil nil [442 478])
            ("llvm" type
               (:members 
                  ( ("ilist_node_base" type
                       (:template 
                          ( ("bool" type (:typevar "EnableSentinelTracking") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [591 652])
                    ("ilist_node_base" type
                       (:type "class"
                        :members 
                          ( ("Prev" variable
                               (:pointer 1
                                :default-value "nullptr"
                                :type ("ilist_node_base" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [699 731])
                            ("Next" variable
                               (:pointer 1
                                :default-value "nullptr"
                                :type ("ilist_node_base" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [734 766])
                            ("public" label nil (reparse-symbol classsubparts) [768 775])
                            ("setPrev" function
                               (:arguments 
                                  ( ("Prev" variable
                                       (:pointer 1
                                        :type ("ilist_node_base" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [791 813]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [778 836])
                            ("setNext" function
                               (:arguments 
                                  ( ("Next" variable
                                       (:pointer 1
                                        :type ("ilist_node_base" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [852 874]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [839 897])
                            ("getPrev" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("ilist_node_base" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [900 949])
                            ("getNext" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("ilist_node_base" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [952 1001])
                            ("isKnownSentinel" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [1005 1051])
                            ("initializeSentinel" function (:type "void") (reparse-symbol classsubparts) [1054 1082]))                          
                        :template-specifier 
                          ( ("false" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [654 1085])
                    ("ilist_node_base" type
                       (:type "class"
                        :members 
                          ( ("PrevAndSentinel" variable (:type ("PointerIntPair" type
                                 (:template-specifier 
                                    ( ("ilist_node_base" type (:pointer 1) nil nil)
                                      ("1"))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1131 1184])
                            ("Next" variable
                               (:pointer 1
                                :default-value "nullptr"
                                :type ("ilist_node_base" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1187 1219])
                            ("public" label nil (reparse-symbol classsubparts) [1221 1228])
                            ("setPrev" function
                               (:arguments 
                                  ( ("Prev" variable
                                       (:pointer 1
                                        :type ("ilist_node_base" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1244 1266]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [1231 1304])
                            ("setNext" function
                               (:arguments 
                                  ( ("Next" variable
                                       (:pointer 1
                                        :type ("ilist_node_base" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1320 1342]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [1307 1365])
                            ("getPrev" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("ilist_node_base" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1368 1441])
                            ("getNext" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("ilist_node_base" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1444 1493])
                            ("isSentinel" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [1497 1557])
                            ("isKnownSentinel" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [1560 1613])
                            ("initializeSentinel" function (:type "void") (reparse-symbol classsubparts) [1616 1675]))                          
                        :template-specifier 
                          ( ("true" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [1087 1678]))                  
                :type "namespace")
                nil [480 1681]))          
      :file "ilist_node_base.h"
      :pointmax 1742
      :fsize 1741
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("LLVM_ADT_ILIST_NODE_BASE_H")
          )
)
    (semanticdb-table "semanticdb-table-155562308156"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_ILIST_NODE_OPTIONS_H" variable (:constant-flag t) nil [417 446])
            ("llvm/Config/abi-breaking.h" include nil nil [448 485])
            ("type_traits" include (:system-flag t) nil [487 509])
            ("llvm" type
               (:members 
                  ( ("ilist_node_base" type
                       (:template 
                          ( ("bool" type (:typevar "EnableSentinelTracking") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [529 590])
                    ("ilist_base" type
                       (:template 
                          ( ("bool" type (:typevar "EnableSentinelTracking") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [591 647])
                    ("ilist_sentinel_tracking" type
                       (:template 
                          ( ("bool" type (:typevar "EnableSentinelTracking") nil nil))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [900 973])
                    ("ilist_tag" type
                       (:template 
                          ( ("Tag" type (:type "class") nil nil))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [1161 1202])
                    ("ilist_detail" type
                       (:members 
                          ( ("explicitness" type
                               (:template 
                                  ( ("bool" type (:typevar "IsExplicit") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("is_explicit" variable
                                       (:typemodifiers ("static")
                                        :constant-flag t
                                        :default-value "IsExplicit"
                                        :type "bool")
                                        (reparse-symbol classsubparts) [1355 1398]))                                  )
                                (reparse-symbol namespacesubparts) [1304 1401])
                            ("is_explicit" type
                               (:typedef ("explicitness" type
                                     (:template-specifier 
                                        ( ("true" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [1402 1441])
                            ("is_implicit" type
                               (:typedef ("explicitness" type
                                     (:template-specifier 
                                        ( ("false" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [1442 1482])
                            ("is_valid_option" type
                               (:template 
                                  ( ("Option" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("std::false_type" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [2070 2138])
                            ("extract_sentinel_tracking" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [2348 2381])
                            ("std::integral_constant" variable (:type "int") (reparse-symbol namespacesubparts) [2544 2613])
                            ("is_explicit" variable (:type "int") (reparse-symbol namespacesubparts) [2544 2613])
                            ("extract_sentinel_tracking" type
                               (:type "struct"
                                :superclasses 
                                  ( ("std::false_type" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil)
                                    ("is_implicit" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [2882 2963])
                            ("is_valid_option" type
                               (:template 
                                  ( ("bool" type (:typevar "EnableSentinelTracking") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("std::true_type" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("ilist_sentinel_tracking" type (:template-specifier 
                                      ( ("EnableSentinelTracking" type nil nil nil))                                      ) nil nil))                                  )
                                (reparse-symbol namespacesubparts) [2971 3106])
                            ("extract_tag" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [3290 3309])
                            ("extract_tag" type
                               (:type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("void")
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [3569 3587]))                                  )
                                (reparse-symbol namespacesubparts) [3534 3590])
                            ("is_valid_option" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("std::true_type" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("ilist_tag" type (:template-specifier 
                                      ( ("Tag" type nil nil nil))                                      ) nil nil))                                  )
                                (reparse-symbol namespacesubparts) [3591 3671])
                            ("check_options" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [3811 3832])
                            ("check_options" type
                               (:type "struct"
                                :superclasses 
                                  ( ("std::true_type" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [3833 3888])
                            ("node_options" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("bool" type (:typevar "EnableSentinelTracking") nil nil)
                                    ("bool" type (:typevar "IsSentinelTrackingExplicit") nil nil)
                                    ("TagT" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("value_type" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [4353 4374])
                                    ("pointer" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :pointer 1
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [4377 4396])
                                    ("reference" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4407 4420])
                                    ("const_pointer" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :pointer 1
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [4423 4454])
                                    ("const_reference" variable
                                       (:constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [4465 4490])
                                    ("enable_sentinel_tracking" variable
                                       (:typemodifiers ("static")
                                        :constant-flag t
                                        :default-value "EnableSentinelTracking"
                                        :type "bool")
                                        (reparse-symbol classsubparts) [4494 4562])
                                    ("is_sentinel_tracking_explicit" variable
                                       (:typemodifiers ("static")
                                        :constant-flag t
                                        :default-value "IsSentinelTrackingExplicit"
                                        :type "bool")
                                        (reparse-symbol classsubparts) [4565 4642])
                                    ("tag" type
                                       (:typedef ("TagT" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [4645 4662])
                                    ("node_base_type" type
                                       (:typedef ("ilist_node_base" type
                                             (:template-specifier 
                                                ( ("enable_sentinel_tracking" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [4665 4730])
                                    ("list_base_type" type
                                       (:typedef ("ilist_base" type
                                             (:template-specifier 
                                                ( ("enable_sentinel_tracking" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [4733 4793]))                                  )
                                (reparse-symbol namespacesubparts) [4226 4796])
                            ("compute_node_options" type
                               (:members 
                                  ( ("type" variable (:type "int") (reparse-symbol classsubparts) [5081 5086]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [4835 5089]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1204 5092]))                  
                :type "namespace")
                nil [511 5124]))          
      :file "ilist_node_options.h"
      :pointmax 5188
      :fsize 5187
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 5073 . 5074) (symbol 5069 . 5073) (punctuation 5068 . 5069) (punctuation 5067 . 5068) (punctuation 5066 . 5067) (punctuation 5065 . 5066) (punctuation 5064 . 5065) (punctuation 5063 . 5064) (symbol 5056 . 5063) (punctuation 5055 . 5056) (symbol 5044 . 5055) (TYPENAME 5035 . 5043) (punctuation 5010 . 5011) (symbol 4999 . 5010) (punctuation 4998 . 4999) (punctuation 4997 . 4998) (punctuation 4996 . 4997) (punctuation 4995 . 4996) (punctuation 4994 . 4995) (punctuation 4993 . 4994) (symbol 4986 . 4993) (punctuation 4985 . 4986) (symbol 4960 . 4985) (punctuation 4935 . 4936) (symbol 4930 . 4935) (punctuation 4929 . 4930) (punctuation 4928 . 4929) (punctuation 4927 . 4928) (punctuation 4926 . 4927) (punctuation 4925 . 4926) (punctuation 4924 . 4925) (symbol 4917 . 4924) (punctuation 4916 . 4917) (symbol 4891 . 4916) (punctuation 4889 . 4890) (symbol 4888 . 4889) (punctuation 4887 . 4888) (symbol 4875 . 4887) (TYPEDEF 4867 . 4874) (punctuation 4833 . 4834) (symbol 4826 . 4833) (punctuation 4824 . 4825) (punctuation 4823 . 4824) (punctuation 4822 . 4823) (CLASS 4817 . 4822) (punctuation 4815 . 4816) (symbol 4814 . 4815) (CLASS 4808 . 4813) (punctuation 4807 . 4808) (TEMPLATE 4798 . 4806) (TYPEDEF 4457 . 4464) (TYPEDEF 4399 . 4406) (punctuation 4119 . 4120) (semantic-list 4117 . 4119) (punctuation 4115 . 4116) (symbol 4110 . 4115) (punctuation 4109 . 4110) (punctuation 4108 . 4109) (punctuation 4107 . 4108) (punctuation 4106 . 4107) (punctuation 4105 . 4106) (punctuation 4104 . 4105) (symbol 4097 . 4104) (punctuation 4096 . 4097) (symbol 4083 . 4096) (punctuation 4042 . 4043) (punctuation 4041 . 4042) (symbol 4035 . 4040) (punctuation 4034 . 4035) (punctuation 4033 . 4034) (punctuation 4032 . 4033) (symbol 4025 . 4032) (punctuation 4024 . 4025) (symbol 4009 . 4024) (punctuation 4007 . 4008) (BOOL 4003 . 4007) (punctuation 4002 . 4003) (symbol 3985 . 4002) (punctuation 3984 . 3985) (punctuation 3983 . 3984) (symbol 3980 . 3983) (punctuation 3978 . 3979) (punctuation 3972 . 3973) (punctuation 3971 . 3972) (punctuation 3970 . 3971) (punctuation 3969 . 3970) (symbol 3962 . 3969) (punctuation 3960 . 3961) (symbol 3953 . 3960) (punctuation 3952 . 3953) (symbol 3939 . 3952) (STRUCT 3932 . 3938) (punctuation 3930 . 3931) (symbol 3923 . 3930) (punctuation 3921 . 3922) (punctuation 3920 . 3921) (punctuation 3919 . 3920) (CLASS 3914 . 3919) (punctuation 3912 . 3913) (symbol 3905 . 3912) (CLASS 3899 . 3904) (punctuation 3898 . 3899) (TEMPLATE 3889 . 3897) (punctuation 3809 . 3810) (symbol 3802 . 3809) (punctuation 3800 . 3801) (punctuation 3799 . 3800) (punctuation 3798 . 3799) (CLASS 3793 . 3798) (punctuation 3792 . 3793) (TEMPLATE 3783 . 3791) (punctuation 3532 . 3533) (semantic-list 3530 . 3532) (punctuation 3528 . 3529) (punctuation 3527 . 3528) (punctuation 3526 . 3527) (punctuation 3525 . 3526) (symbol 3518 . 3525) (punctuation 3517 . 3518) (symbol 3506 . 3517) (punctuation 3504 . 3505) (punctuation 3502 . 3503) (punctuation 3501 . 3502) (punctuation 3500 . 3501) (punctuation 3499 . 3500) (symbol 3492 . 3499) (punctuation 3490 . 3491) (symbol 3483 . 3490) (punctuation 3482 . 3483) (symbol 3471 . 3482) (STRUCT 3464 . 3470) (punctuation 3462 . 3463) (symbol 3455 . 3462) (punctuation 3453 . 3454) (punctuation 3452 . 3453) (punctuation 3451 . 3452) (CLASS 3446 . 3451) (punctuation 3444 . 3445) (symbol 3437 . 3444) (CLASS 3431 . 3436) (punctuation 3430 . 3431) (TEMPLATE 3421 . 3429) (punctuation 3419 . 3420) (semantic-list 3396 . 3419) (punctuation 3394 . 3395) (punctuation 3393 . 3394) (punctuation 3392 . 3393) (punctuation 3391 . 3392) (symbol 3384 . 3391) (punctuation 3382 . 3383) (punctuation 3381 . 3382) (symbol 3378 . 3381) (punctuation 3377 . 3378) (symbol 3368 . 3377) (punctuation 3367 . 3368) (symbol 3356 . 3367) (STRUCT 3349 . 3355) (punctuation 3347 . 3348) (symbol 3340 . 3347) (punctuation 3338 . 3339) (punctuation 3337 . 3338) (punctuation 3336 . 3337) (CLASS 3331 . 3336) (punctuation 3329 . 3330) (symbol 3326 . 3329) (CLASS 3320 . 3325) (punctuation 3319 . 3320) (TEMPLATE 3310 . 3318) (punctuation 3288 . 3289) (symbol 3281 . 3288) (punctuation 3279 . 3280) (punctuation 3278 . 3279) (punctuation 3277 . 3278) (CLASS 3272 . 3277) (punctuation 3271 . 3272) (TEMPLATE 3262 . 3270) (punctuation 2757 . 2758) (semantic-list 2755 . 2757) (punctuation 2753 . 2754) (punctuation 2752 . 2753) (punctuation 2751 . 2752) (punctuation 2750 . 2751) (symbol 2743 . 2750) (punctuation 2742 . 2743) (symbol 2717 . 2742) (punctuation 2715 . 2716) (punctuation 2709 . 2710) (punctuation 2708 . 2709) (punctuation 2707 . 2708) (punctuation 2706 . 2707) (symbol 2699 . 2706) (punctuation 2697 . 2698) (symbol 2690 . 2697) (punctuation 2689 . 2690) (symbol 2664 . 2689) (STRUCT 2657 . 2663) (punctuation 2655 . 2656) (symbol 2648 . 2655) (punctuation 2646 . 2647) (punctuation 2645 . 2646) (punctuation 2644 . 2645) (CLASS 2639 . 2644) (punctuation 2637 . 2638) (symbol 2630 . 2637) (CLASS 2624 . 2629) (punctuation 2623 . 2624) (TEMPLATE 2614 . 2622) (punctuation 2542 . 2543) (punctuation 2536 . 2537) (punctuation 2535 . 2536) (punctuation 2534 . 2535) (punctuation 2533 . 2534) (symbol 2526 . 2533) (punctuation 2524 . 2525) (punctuation 2523 . 2524) (symbol 2501 . 2523) (punctuation 2500 . 2501) (symbol 2477 . 2500) (punctuation 2471 . 2472) (symbol 2446 . 2471) (STRUCT 2439 . 2445) (punctuation 2437 . 2438) (symbol 2430 . 2437) (punctuation 2428 . 2429) (punctuation 2427 . 2428) (punctuation 2426 . 2427) (CLASS 2421 . 2426) (punctuation 2419 . 2420) (symbol 2397 . 2419) (BOOL 2392 . 2396) (punctuation 2391 . 2392) (TEMPLATE 2382 . 2390) (punctuation 2346 . 2347) (symbol 2339 . 2346) (punctuation 2337 . 2338) (punctuation 2336 . 2337) (punctuation 2335 . 2336) (CLASS 2330 . 2335) (punctuation 2329 . 2330) (TEMPLATE 2320 . 2328))
      :lexical-table 
        '(("LLVM_ADT_ILIST_NODE_OPTIONS_H")
          )
)
    (semanticdb-table "semanticdb-table-1555621dfb12"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_SIMPLE_ILIST_H" variable (:constant-flag t) nil [411 434])
            ("llvm/ADT/ilist_base.h" include nil nil [436 468])
            ("llvm/ADT/ilist_iterator.h" include nil nil [469 505])
            ("llvm/ADT/ilist_node.h" include nil nil [506 538])
            ("llvm/ADT/ilist_node_options.h" include nil nil [539 579])
            ("llvm/Support/Compiler.h" include nil nil [580 614])
            ("algorithm" include (:system-flag t) nil [615 635])
            ("cassert" include (:system-flag t) nil [636 654])
            ("cstddef" include (:system-flag t) nil [655 673])
            ("functional" include (:system-flag t) nil [674 695])
            ("iterator" include (:system-flag t) nil [696 715])
            ("utility" include (:system-flag t) nil [716 734])
            ("llvm" type
               (:members 
                  ( ("merge" function
                       (:arguments 
                          ( ("RHS" variable
                               (:reference 1
                                :type ("simple_ilist" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9881 9899])
                            ("comp" variable (:type ("Compare" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9900 9913]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [9875 10444])
                    ("sort" function
                       (:arguments 
                          ( ("comp" variable (:type ("Compare" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10547 10560]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [10542 10965]))                  
                :type "namespace")
                nil [736 10968]))          
      :file "simple_ilist.h"
      :pointmax 11026
      :fsize 11025
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 10541 . 10542) (punctuation 10540 . 10541) (punctuation 10539 . 10540) (punctuation 10538 . 10539) (punctuation 10537 . 10538) (punctuation 10536 . 10537) (symbol 10529 . 10536) (punctuation 10527 . 10528) (symbol 10526 . 10527) (punctuation 10525 . 10526) (symbol 10513 . 10525) (VOID 10508 . 10512) (punctuation 10506 . 10507) (symbol 10499 . 10506) (CLASS 10493 . 10498) (punctuation 10492 . 10493) (TEMPLATE 10483 . 10491) (punctuation 10481 . 10482) (symbol 10474 . 10481) (punctuation 10472 . 10473) (punctuation 10471 . 10472) (punctuation 10470 . 10471) (CLASS 10465 . 10470) (punctuation 10463 . 10464) (symbol 10462 . 10463) (CLASS 10456 . 10461) (punctuation 10455 . 10456) (TEMPLATE 10446 . 10454) (punctuation 9874 . 9875) (punctuation 9873 . 9874) (punctuation 9872 . 9873) (punctuation 9871 . 9872) (punctuation 9870 . 9871) (punctuation 9869 . 9870) (symbol 9862 . 9869) (punctuation 9860 . 9861) (symbol 9859 . 9860) (punctuation 9858 . 9859) (symbol 9846 . 9858) (VOID 9841 . 9845) (punctuation 9839 . 9840) (symbol 9832 . 9839) (CLASS 9826 . 9831) (punctuation 9825 . 9826) (TEMPLATE 9816 . 9824) (punctuation 9814 . 9815) (symbol 9807 . 9814) (punctuation 9805 . 9806) (punctuation 9804 . 9805) (punctuation 9803 . 9804) (CLASS 9798 . 9803) (punctuation 9796 . 9797) (symbol 9795 . 9796) (CLASS 9789 . 9794) (punctuation 9788 . 9789) (TEMPLATE 9779 . 9787) (punctuation 9776 . 9777) (semantic-list 3698 . 9776) (punctuation 3696 . 3697) (symbol 3692 . 3696) (punctuation 3691 . 3692) (punctuation 3690 . 3691) (punctuation 3689 . 3690) (punctuation 3688 . 3689) (punctuation 3687 . 3688) (punctuation 3686 . 3687) (symbol 3679 . 3686) (punctuation 3677 . 3678) (symbol 3676 . 3677) (punctuation 3675 . 3676) (symbol 3655 . 3675) (punctuation 3654 . 3655) (punctuation 3653 . 3654) (symbol 3641 . 3653) (TYPENAME 3632 . 3640) (punctuation 3620 . 3621) (symbol 3602 . 3620) (punctuation 3601 . 3602) (punctuation 3600 . 3601) (symbol 3588 . 3600) (punctuation 3580 . 3581) (symbol 3566 . 3580) (punctuation 3565 . 3566) (punctuation 3564 . 3565) (symbol 3560 . 3564) (punctuation 3559 . 3560) (punctuation 3558 . 3559) (punctuation 3557 . 3558) (punctuation 3556 . 3557) (punctuation 3555 . 3556) (punctuation 3554 . 3555) (symbol 3547 . 3554) (punctuation 3545 . 3546) (symbol 3544 . 3545) (punctuation 3543 . 3544) (symbol 3523 . 3543) (punctuation 3522 . 3523) (punctuation 3521 . 3522) (symbol 3509 . 3521) (punctuation 3507 . 3508) (symbol 3490 . 3502) (CLASS 3484 . 3489) (punctuation 3482 . 3483) (symbol 3475 . 3482) (punctuation 3473 . 3474) (punctuation 3472 . 3473) (punctuation 3471 . 3472) (CLASS 3466 . 3471) (punctuation 3464 . 3465) (symbol 3463 . 3464) (TYPENAME 3454 . 3462) (punctuation 3453 . 3454) (TEMPLATE 3444 . 3452))
      :lexical-table 
        '(("LLVM_ADT_SIMPLE_ILIST_H")
          )
)
    (semanticdb-table "semanticdb-table-155560e35244"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_BITFIELDS_H" variable (:constant-flag t) nil [3234 3254])
            ("cassert" include (:system-flag t) nil [3256 3274])
            ("climits" include (:system-flag t) nil [3275 3293])
            ("cstddef" include (:system-flag t) nil [3306 3324])
            ("cstdint" include (:system-flag t) nil [3335 3353])
            ("limits" include (:system-flag t) nil [3366 3383])
            ("type_traits" include (:system-flag t) nil [3403 3425])
            ("llvm" type
               (:members 
                  ( ("bitfields_details" type
                       (:members 
                          ( ("BitPatterns" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("unsigned int" type (:typevar "Bits") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("std::make_unsigned::type" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [3885 3922])
                                    ("static_assert" function
                                       (:prototype-flag t
                                        :type "int")
                                        (reparse-symbol classsubparts) [3925 3999])
                                    ("CHAR_BIT" variable
                                       (:pointer 1
                                        :type "int")
                                        (reparse-symbol classsubparts) [4057 4068])
                                    ("static_assert" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TypeBits" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4085 4095])
                                            ("" variable (:type ("Bits" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4097 4102]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [4071 4126])
                                    ("AllZeros" variable
                                       (:default-value "Unsigned(0)"
                                        :type ("Unsigned" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [4192 4224])
                                    ("Unsigned" function
                                       (:prototype-flag t
                                        :destructor-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [4292 4305])
                                    ("Umin" variable
                                       (:default-value "AllZeros"
                                        :type ("Unsigned" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [4354 4379])
                                    ("1U" variable (:type "int") (reparse-symbol classsubparts) [4621 4624])
                                    ("Smax" variable (:type "int") (reparse-symbol classsubparts) [4695 4700])
                                    ("SignExtend" variable
                                       (:default-value "Unsigned(Smin << 1U)"
                                        :type ("Unsigned" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [4759 4802]))                                  )
                                (reparse-symbol namespacesubparts) [3544 4823])
                            ("Compressor" type
                               (:members 
                                  ( ("static_assert" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("std::is_unsigned::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5237 5264]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [5223 5282])
                                    ("BitPatterns" variable (:type "int") (reparse-symbol classsubparts) [5296 5317])
                                    ("pack" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("UserValue" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5335 5347])
                                            ("UserMaxValue" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5348 5363]))                                          
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [5321 5509])
                                    ("unpack" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("StorageValue" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5529 5544]))                                          
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [5513 5569]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [5201 5572])
                            ("Compressor" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("unsigned int" type (:typevar "Bits") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("static_assert" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("std::is_signed::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5663 5688]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [5649 5704])
                                    ("BitPatterns" variable (:type "int") (reparse-symbol classsubparts) [5718 5739])
                                    ("pack" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("UserValue" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5757 5769])
                                            ("UserMaxValue" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5770 5785]))                                          
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [5743 6055])
                                    ("unpack" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("StorageValue" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6075 6090]))                                          
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [6059 6203]))                                  
                                :template-specifier 
                                  ( ("T" type nil nil nil)
                                    ("Bits" type nil nil nil)
                                    ("false" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [5574 6206])
                            ("Impl" type
                               (:template 
                                  ( ("Bitfield" type (:type "class") nil nil)
                                    ("StorageType" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("static_assert" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("std::is_unsigned::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6385 6422]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [6371 6467])
                                    ("Bitfield::IntegerType" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [6490 6521])
                                    ("Compressor" variable (:type "int") (reparse-symbol classsubparts) [6534 6574])
                                    ("BitPatterns" variable (:type "int") (reparse-symbol classsubparts) [6588 6629])
                                    ("CHAR_BIT" variable
                                       (:pointer 1
                                        :type "int")
                                        (reparse-symbol classsubparts) [6691 6702])
                                    ("static_assert" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("Bitfield::FirstBit" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6719 6739])
                                            ("" variable (:type ("StorageBits" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6741 6753]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [6705 6779])
                                    ("static_assert" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("Bitfield::LastBit" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6796 6815])
                                            ("" variable (:type ("StorageBits" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6817 6829]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [6782 6855])
                                    ("Bitfield::Shift" variable (:type "int") (reparse-symbol classsubparts) [6906 6922])
                                    ("update" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("Packed" variable
                                               (:reference 1
                                                :type ("StorageType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7079 7099])
                                            ("UserValue" variable (:type ("IntegerType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7100 7122]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [7060 7277])
                                    ("extract" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("Packed" variable (:type ("StorageType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7401 7420]))                                          
                                        :type ("IntegerType" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7374 7535])
                                    ("test" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("Packed" variable (:type ("StorageType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7656 7675]))                                          
                                        :type ("StorageType" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7632 7701]))                                  )
                                (reparse-symbol namespacesubparts) [6304 7704])
                            ("ResolveUnderlyingType" type
                               (:members 
                                  ( ("std::underlying_type::type" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [8161 8200]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [8115 8203])
                            ("ResolveUnderlyingType" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" variable
                                       (:default-value "T"
                                        :type "int")
                                        (reparse-symbol classsubparts) [8275 8284]))                                  
                                :template-specifier 
                                  ( ("T" type nil nil nil)
                                    ("false" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [8204 8287])
                            ("ResolveUnderlyingType" type
                               (:type "struct"
                                :members 
                                  ( ("type" variable (:type "int") (reparse-symbol classsubparts) [8501 8506]))                                  
                                :template-specifier 
                                  ( ("bool" type nil nil nil)
                                    ("false" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [8288 8509]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [3445 8512])
                    ("Bitfield" type
                       (:members 
                          ( ("Element" type
                               (:members 
                                  ( ("Type" variable
                                       (:default-value "T"
                                        :type "int")
                                        (reparse-symbol classsubparts) [9226 9235])
                                    ("bitfields_details::ResolveUnderlyingType::type" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [9268 9327])
                                    ("Shift" variable
                                       (:default-value "Offset"
                                        :type "unsigned int")
                                        (reparse-symbol classsubparts) [9349 9373])
                                    ("Bits" variable
                                       (:default-value "Size"
                                        :type "unsigned int")
                                        (reparse-symbol classsubparts) [9395 9416])
                                    ("FirstBit" variable
                                       (:default-value "Offset"
                                        :type "unsigned int")
                                        (reparse-symbol classsubparts) [9438 9465])
                                    ("NextBit" variable
                                       (:default-value "Shift + Bits"
                                        :type "unsigned int")
                                        (reparse-symbol classsubparts) [9545 9577])
                                    ("private" label nil (reparse-symbol classsubparts) [9581 9589])
                                    ("Impl" type
                                       (:parent "bitfields_details"
                                        :prototype t
                                        :type "struct")
                                        (reparse-symbol classsubparts) [9631 9662])
                                    ("static_assert" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("Bits" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9682 9688]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [9668 9717])
                                    ("CHAR_BIT" variable
                                       (:pointer 1
                                        :type "int")
                                        (reparse-symbol classsubparts) [9777 9788])
                                    ("static_assert" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("Bits" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9807 9813])
                                            ("" variable (:type ("TypeBits" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9815 9824]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [9793 9864])
                                    ("static_assert" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("std::is_enum::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9884 9908])
                                            ("" variable (:type ("MaxValue" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9910 9920])
                                            ("" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9922 9926]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [9869 9988])
                                    ("static_assert" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("std::is_enum::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10008 10032])
                                            ("" variable (:type ("std::is_unsigned::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10056 10093]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [9993 10137])
                                    ("static_assert" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("std::is_integral::value" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [10156 10195])
                                            ("" variable (:type ("std::numeric_limits::is_integer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10218 10263]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [10142 10321])
                                    ("UserMaxValue" variable
                                       (:default-value "static_cast<IntegerType>(MaxValue)"
                                        :type ("IntegerType" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [10344 10414]))                                  
                                :type "struct")
                                (reparse-symbol classsubparts) [9199 10419])
                            ("get" function
                               (:template 
                                  ( ("Bitfield" type (:type "class") nil nil)
                                    ("StorageType" type (:type "class") nil nil))                                  
                                :type ("Bitfield::Type" type (:type "class") nil nil)
                                :arguments 
                                  ( ("Packed" variable (:type ("StorageType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10560 10579]))                                  
                                :typemodifiers ("static" "typename"))
                                (reparse-symbol classsubparts) [10472 10716])
                            ("test" function
                               (:template 
                                  ( ("Bitfield" type (:type "class") nil nil)
                                    ("StorageType" type (:type "class") nil nil))                                  
                                :type ("StorageType" type (:type "class") nil nil)
                                :arguments 
                                  ( ("Packed" variable (:type ("StorageType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10897 10916]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [10820 11012])
                            ("set" function
                               (:template 
                                  ( ("Bitfield" type (:type "class") nil nil)
                                    ("StorageType" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("Packed" variable
                                       (:reference 1
                                        :type ("StorageType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11218 11238])
                                    ("Value" variable
                                       (:typemodifiers ("typename")
                                        :type ("Bitfield::Type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11239 11269]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [11149 11412])
                            ("isOverlapping" function (:type "bool") (reparse-symbol classsubparts) [11526 11619])
                            ("areContiguous" function (:type "bool") (reparse-symbol classsubparts) [11662 11699])
                            ("areContiguous" function (:type "bool") (reparse-symbol classsubparts) [11775 11872]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [8596 11875]))                  
                :type "namespace")
                nil [3427 11878]))          
      :file "Bitfields.h"
      :pointmax 11929
      :fsize 11928
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((symbol 11765 . 11774) (STATIC 11758 . 11764) (punctuation 11754 . 11755) (symbol 11748 . 11754) (punctuation 11746 . 11747) (punctuation 11745 . 11746) (punctuation 11744 . 11745) (TYPENAME 11736 . 11744) (punctuation 11734 . 11735) (symbol 11733 . 11734) (TYPENAME 11724 . 11732) (punctuation 11722 . 11723) (symbol 11721 . 11722) (TYPENAME 11712 . 11720) (punctuation 11711 . 11712) (TEMPLATE 11702 . 11710) (symbol 11652 . 11661) (STATIC 11645 . 11651) (punctuation 11643 . 11644) (symbol 11642 . 11643) (TYPENAME 11633 . 11641) (punctuation 11632 . 11633) (TEMPLATE 11623 . 11631) (symbol 11516 . 11525) (STATIC 11509 . 11515) (punctuation 11507 . 11508) (symbol 11506 . 11507) (TYPENAME 11497 . 11505) (punctuation 11495 . 11496) (symbol 11494 . 11495) (TYPENAME 11485 . 11493) (punctuation 11484 . 11485) (TEMPLATE 11475 . 11483) (symbol 10334 . 10343) (STATIC 10327 . 10333) (string 10282 . 10319) (punctuation 10194 . 10195) (string 10112 . 10135) (punctuation 10032 . 10033) (punctuation 10031 . 10032) (punctuation 10007 . 10008) (string 9946 . 9986) (semantic-list 9923 . 9926) (punctuation 9920 . 9921) (punctuation 9919 . 9920) (punctuation 9908 . 9909) (punctuation 9907 . 9908) (punctuation 9883 . 9884) (string 9825 . 9862) (punctuation 9813 . 9814) (punctuation 9812 . 9813) (semantic-list 9763 . 9776) (SIZEOF 9757 . 9763) (punctuation 9755 . 9756) (symbol 9746 . 9754) (symbol 9739 . 9745) (symbol 9729 . 9738) (STATIC 9722 . 9728) (string 9692 . 9715) (number 9689 . 9690) (punctuation 9687 . 9688) (FRIEND 9624 . 9630) (punctuation 9622 . 9623) (TYPENAME 9614 . 9622) (punctuation 9612 . 9613) (TYPENAME 9604 . 9612) (punctuation 9603 . 9604) (TEMPLATE 9594 . 9602) (symbol 9535 . 9544) (STATIC 9528 . 9534) (punctuation 9522 . 9523) (number 9521 . 9522) (punctuation 9519 . 9520) (symbol 9514 . 9518) (punctuation 9512 . 9513) (symbol 9506 . 9511) (punctuation 9504 . 9505) (symbol 9496 . 9503) (UNSIGNED 9487 . 9495) (symbol 9477 . 9486) (STATIC 9470 . 9476) (symbol 9428 . 9437) (STATIC 9421 . 9427) (symbol 9385 . 9394) (STATIC 9378 . 9384) (symbol 9339 . 9348) (STATIC 9332 . 9338) (punctuation 9258 . 9259) (symbol 9246 . 9257) (USING 9240 . 9245) (USING 9220 . 9225) (symbol 10334 . 10343) (STATIC 10327 . 10333) (string 10282 . 10319) (punctuation 10194 . 10195) (string 10112 . 10135) (punctuation 10032 . 10033) (punctuation 10031 . 10032) (punctuation 10007 . 10008) (string 9946 . 9986) (semantic-list 9923 . 9926) (punctuation 9920 . 9921) (punctuation 9919 . 9920) (punctuation 9908 . 9909) (punctuation 9907 . 9908) (punctuation 9883 . 9884) (string 9825 . 9862) (punctuation 9813 . 9814) (punctuation 9812 . 9813) (semantic-list 9763 . 9776) (SIZEOF 9757 . 9763) (punctuation 9755 . 9756) (symbol 9746 . 9754) (symbol 9739 . 9745) (symbol 9729 . 9738) (STATIC 9722 . 9728) (string 9692 . 9715) (number 9689 . 9690) (punctuation 9687 . 9688) (FRIEND 9624 . 9630) (punctuation 9622 . 9623) (TYPENAME 9614 . 9622) (punctuation 9612 . 9613) (TYPENAME 9604 . 9612) (punctuation 9603 . 9604) (TEMPLATE 9594 . 9602) (symbol 9535 . 9544) (STATIC 9528 . 9534) (punctuation 9522 . 9523) (number 9521 . 9522) (punctuation 9519 . 9520) (symbol 9514 . 9518) (punctuation 9512 . 9513) (symbol 9506 . 9511) (punctuation 9504 . 9505) (symbol 9496 . 9503) (UNSIGNED 9487 . 9495) (symbol 9477 . 9486) (STATIC 9470 . 9476) (symbol 9428 . 9437) (STATIC 9421 . 9427) (symbol 9385 . 9394) (STATIC 9378 . 9384) (symbol 9339 . 9348) (STATIC 9332 . 9338) (punctuation 9258 . 9259) (symbol 9246 . 9257) (USING 9240 . 9245) (USING 9220 . 9225) (punctuation 9195 . 9196) (semantic-list 9193 . 9195) (symbol 9190 . 9193) (punctuation 9189 . 9190) (punctuation 9188 . 9189) (punctuation 9187 . 9188) (symbol 9186 . 9187) (punctuation 9185 . 9186) (symbol 9171 . 9185) (punctuation 9170 . 9171) (punctuation 9169 . 9170) (symbol 9166 . 9169) (punctuation 9164 . 9165) (semantic-list 9095 . 9098) (symbol 9094 . 9095) (number 9096 . 9097) (punctuation 9092 . 9093) (symbol 9057 . 9062) (punctuation 9056 . 9057) (punctuation 9055 . 9056) (punctuation 9054 . 9055) (symbol 9053 . 9054) (punctuation 9052 . 9053) (symbol 9045 . 9052) (punctuation 9044 . 9045) (punctuation 9043 . 9044) (symbol 9040 . 9043) (punctuation 9038 . 9039) (symbol 9029 . 9037) (symbol 9027 . 9028) (punctuation 9013 . 9014) (symbol 9009 . 9013) (UNSIGNED 9000 . 9008) (punctuation 8998 . 8999) (symbol 8992 . 8998) (UNSIGNED 8983 . 8991) (punctuation 8981 . 8982) (symbol 8980 . 8981) (TYPENAME 8971 . 8979) (punctuation 8970 . 8971) (TEMPLATE 8961 . 8969) (punctuation 8500 . 8501) (punctuation 8499 . 8500) (punctuation 8498 . 8499) (VOID 8494 . 8498) (punctuation 8492 . 8493) (symbol 8485 . 8492) (punctuation 8483 . 8484) (number 8482 . 8483) (punctuation 8480 . 8481) (punctuation 8479 . 8480) (semantic-list 8472 . 8478) (SIZEOF 8466 . 8472) (punctuation 8465 . 8466) (symbol 8454 . 8465) (punctuation 8453 . 8454) (punctuation 8452 . 8453) (symbol 8449 . 8452) (punctuation 8447 . 8448) (symbol 8442 . 8446) (USING 8436 . 8441) (USING 8269 . 8274) (punctuation 8159 . 8160) (symbol 8154 . 8158) (USING 8148 . 8153) (punctuation 8113 . 8114) (symbol 8108 . 8113) (punctuation 8107 . 8108) (punctuation 8106 . 8107) (punctuation 8105 . 8106) (symbol 8104 . 8105) (punctuation 8103 . 8104) (symbol 8096 . 8103) (punctuation 8095 . 8096) (punctuation 8094 . 8095) (symbol 8091 . 8094) (punctuation 8089 . 8090) (BOOL 8084 . 8088) (punctuation 8082 . 8083) (symbol 8081 . 8082) (TYPENAME 8072 . 8080) (punctuation 8071 . 8072) (TEMPLATE 8062 . 8070) (punctuation 6904 . 6905) (punctuation 6903 . 6904) (symbol 6898 . 6902) (punctuation 6897 . 6898) (punctuation 6896 . 6897) (symbol 6894 . 6896) (punctuation 6892 . 6893) (symbol 6887 . 6891) (symbol 6875 . 6886) (symbol 6865 . 6874) (STATIC 6858 . 6864) (string 6830 . 6853) (punctuation 6815 . 6816) (punctuation 6814 . 6815) (string 6754 . 6777) (punctuation 6739 . 6740) (punctuation 6738 . 6739) (semantic-list 6677 . 6690) (SIZEOF 6671 . 6677) (punctuation 6669 . 6670) (symbol 6657 . 6668) (symbol 6650 . 6656) (symbol 6640 . 6649) (STATIC 6633 . 6639) (punctuation 6586 . 6587) (symbol 6583 . 6585) (USING 6577 . 6582) (punctuation 6532 . 6533) (symbol 6530 . 6531) (USING 6524 . 6529) (punctuation 6488 . 6489) (symbol 6476 . 6487) (USING 6470 . 6475) (string 6439 . 6465) (punctuation 5716 . 5717) (symbol 5713 . 5715) (USING 5707 . 5712) (string 5689 . 5702) (punctuation 5294 . 5295) (symbol 5291 . 5293) (USING 5285 . 5290) (string 5265 . 5280) (punctuation 5199 . 5200) (symbol 5194 . 5199) (punctuation 5193 . 5194) (punctuation 5192 . 5193) (punctuation 5191 . 5192) (symbol 5190 . 5191) (punctuation 5189 . 5190) (symbol 5178 . 5189) (punctuation 5177 . 5178) (punctuation 5176 . 5177) (symbol 5173 . 5176) (punctuation 5171 . 5172) (BOOL 5166 . 5170) (punctuation 5164 . 5165) (symbol 5160 . 5164) (UNSIGNED 5151 . 5159) (punctuation 5149 . 5150) (symbol 5148 . 5149) (TYPENAME 5139 . 5147) (punctuation 5138 . 5139) (TEMPLATE 5129 . 5137) (symbol 4749 . 4758) (STATIC 4742 . 4748) (punctuation 4694 . 4695) (punctuation 4692 . 4693) (symbol 4687 . 4691) (symbol 4678 . 4686) (symbol 4668 . 4677) (STATIC 4661 . 4667) (punctuation 4619 . 4620) (punctuation 4618 . 4619) (symbol 4613 . 4617) (punctuation 4611 . 4612) (symbol 4606 . 4610) (symbol 4597 . 4605) (symbol 4587 . 4596) (STATIC 4580 . 4586) (punctuation 4564 . 4565) (semantic-list 4554 . 4564) (punctuation 4552 . 4553) (punctuation 4551 . 4552) (semantic-list 4547 . 4550) (symbol 4539 . 4547) (number 4548 . 4549) (punctuation 4537 . 4538) (symbol 4525 . 4536) (symbol 4516 . 4524) (symbol 4506 . 4515) (STATIC 4499 . 4505) (punctuation 4479 . 4480) (semantic-list 4462 . 4479) (punctuation 4460 . 4461) (punctuation 4459 . 4460) (symbol 4451 . 4458) (punctuation 4449 . 4450) (symbol 4444 . 4448) (symbol 4435 . 4443) (symbol 4425 . 4434) (STATIC 4418 . 4424) (symbol 4344 . 4353) (STATIC 4337 . 4343) (number 4302 . 4303) (punctuation 4290 . 4291) (symbol 4282 . 4289) (symbol 4273 . 4281) (symbol 4263 . 4272) (STATIC 4256 . 4262) (symbol 4182 . 4191) (STATIC 4175 . 4181) (string 4103 . 4124) (punctuation 4095 . 4096) (punctuation 4094 . 4095) (semantic-list 4046 . 4056) (SIZEOF 4040 . 4046) (punctuation 4038 . 4039) (symbol 4029 . 4037) (UNSIGNED 4020 . 4028) (symbol 4010 . 4019) (STATIC 4003 . 4009) (string 3970 . 3997) (semantic-list 3965 . 3968) (SIZEOF 3959 . 3965) (punctuation 3957 . 3958) (punctuation 3956 . 3957) (semantic-list 3945 . 3955) (SIZEOF 3939 . 3945) (punctuation 3883 . 3884) (symbol 3874 . 3882) (USING 3868 . 3873))
      :lexical-table 
        '(("LLVM_ADT_BITFIELDS_H")
          )
)
    (semanticdb-table "semanticdb-table-155561f42d7a"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_STRINGSWITCH_H" variable (:constant-flag t) nil [628 651])
            ("llvm/ADT/Optional.h" include nil nil [653 683])
            ("llvm/ADT/StringRef.h" include nil nil [684 715])
            ("llvm/Support/Compiler.h" include nil nil [716 750])
            ("cassert" include (:system-flag t) nil [751 769])
            ("cstring" include (:system-flag t) nil [770 788])
            ("llvm" type
               (:members 
                  ( ("StringSwitch" type
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("R" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("Str" variable
                               (:constant-flag t
                                :type ("StringRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1643 1663])
                            ("Result" variable (:type ("Optional" type
                                 (:template-specifier 
                                    ( ("T" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1761 1780])
                            ("public" label nil (reparse-symbol classsubparts) [1782 1789])
                            ("StringSwitch" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("S" variable (:type ("StringRef" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1814 1826]))                                  
                                :type ("StringSwitch" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1801 1851])
                            ("StringSwitch" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("StringSwitch" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2114 2129])
                                    ("" variable (:type ("other" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2129 2135]))                                  
                                :type ("StringSwitch" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2101 2193])
                            ("Case" function
                               (:arguments 
                                  ( ("S" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2280 2296])
                                    ("Value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2297 2305]))                                  
                                :type ("StringSwitch" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2261 2399])
                            ("EndsWith" function
                               (:arguments 
                                  ( ("S" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2426 2442])
                                    ("Value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2443 2451]))                                  
                                :type ("StringSwitch" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2403 2552])
                            ("StartsWith" function
                               (:arguments 
                                  ( ("S" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2581 2597])
                                    ("Value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2598 2606]))                                  
                                :type ("StringSwitch" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2556 2709])
                            ("Cases" function
                               (:arguments 
                                  ( ("S0" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2733 2750])
                                    ("S1" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2751 2768])
                                    ("Value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2769 2777]))                                  
                                :type ("StringSwitch" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2713 2827])
                            ("Cases" function
                               (:arguments 
                                  ( ("S0" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2851 2868])
                                    ("S1" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2869 2886])
                                    ("S2" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2887 2904])
                                    ("Value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2927 2935]))                                  
                                :type ("StringSwitch" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2831 2990])
                            ("Cases" function
                               (:arguments 
                                  ( ("S0" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3014 3031])
                                    ("S1" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3032 3049])
                                    ("S2" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3050 3067])
                                    ("S3" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3090 3107])
                                    ("Value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3108 3116]))                                  
                                :type ("StringSwitch" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2994 3175])
                            ("Cases" function
                               (:arguments 
                                  ( ("S0" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3199 3216])
                                    ("S1" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3217 3234])
                                    ("S2" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3235 3252])
                                    ("S3" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3275 3292])
                                    ("S4" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3293 3310])
                                    ("Value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3311 3319]))                                  
                                :type ("StringSwitch" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3179 3382])
                            ("Cases" function
                               (:arguments 
                                  ( ("S0" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3406 3423])
                                    ("S1" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3424 3441])
                                    ("S2" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3442 3459])
                                    ("S3" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3482 3499])
                                    ("S4" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3500 3517])
                                    ("S5" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3518 3535])
                                    ("Value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3558 3566]))                                  
                                :type ("StringSwitch" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3386 3633])
                            ("Cases" function
                               (:arguments 
                                  ( ("S0" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3657 3674])
                                    ("S1" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3675 3692])
                                    ("S2" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3693 3710])
                                    ("S3" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3733 3750])
                                    ("S4" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3751 3768])
                                    ("S5" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3769 3786])
                                    ("S6" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3809 3826])
                                    ("Value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3827 3835]))                                  
                                :type ("StringSwitch" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3637 3906])
                            ("Cases" function
                               (:arguments 
                                  ( ("S0" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3930 3947])
                                    ("S1" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3948 3965])
                                    ("S2" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3966 3983])
                                    ("S3" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4006 4023])
                                    ("S4" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4024 4041])
                                    ("S5" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4042 4059])
                                    ("S6" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4082 4099])
                                    ("S7" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4100 4117])
                                    ("Value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4118 4126]))                                  
                                :type ("StringSwitch" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3910 4201])
                            ("Cases" function
                               (:arguments 
                                  ( ("S0" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4225 4242])
                                    ("S1" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4243 4260])
                                    ("S2" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4261 4278])
                                    ("S3" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4301 4318])
                                    ("S4" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4319 4336])
                                    ("S5" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4337 4354])
                                    ("S6" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4377 4394])
                                    ("S7" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4395 4412])
                                    ("S8" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4413 4430])
                                    ("Value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4453 4461]))                                  
                                :type ("StringSwitch" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4205 4540])
                            ("Cases" function
                               (:arguments 
                                  ( ("S0" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4564 4581])
                                    ("S1" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4582 4599])
                                    ("S2" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4600 4617])
                                    ("S3" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4640 4657])
                                    ("S4" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4658 4675])
                                    ("S5" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4676 4693])
                                    ("S6" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4716 4733])
                                    ("S7" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4734 4751])
                                    ("S8" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4752 4769])
                                    ("S9" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4792 4809])
                                    ("Value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4810 4818]))                                  
                                :type ("StringSwitch" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4544 4901])
                            ("CaseLower" function
                               (:arguments 
                                  ( ("S" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4966 4982])
                                    ("Value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4983 4991]))                                  
                                :type ("StringSwitch" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4942 5095])
                            ("EndsWithLower" function
                               (:arguments 
                                  ( ("S" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5127 5143])
                                    ("Value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5144 5152]))                                  
                                :type ("StringSwitch" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5099 5247])
                            ("StartsWithLower" function
                               (:arguments 
                                  ( ("S" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5281 5297])
                                    ("Value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5298 5306]))                                  
                                :type ("StringSwitch" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5251 5414])
                            ("CasesLower" function
                               (:arguments 
                                  ( ("S0" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5443 5460])
                                    ("S1" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5461 5478])
                                    ("Value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5479 5487]))                                  
                                :type ("StringSwitch" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5418 5547])
                            ("CasesLower" function
                               (:arguments 
                                  ( ("S0" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5576 5593])
                                    ("S1" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5594 5611])
                                    ("S2" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5612 5629])
                                    ("Value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5657 5665]))                                  
                                :type ("StringSwitch" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5551 5730])
                            ("CasesLower" function
                               (:arguments 
                                  ( ("S0" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5759 5776])
                                    ("S1" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5777 5794])
                                    ("S2" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5795 5812])
                                    ("S3" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5840 5857])
                                    ("Value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5858 5866]))                                  
                                :type ("StringSwitch" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5734 5935])
                            ("CasesLower" function
                               (:arguments 
                                  ( ("S0" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5964 5981])
                                    ("S1" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5982 5999])
                                    ("S2" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6000 6017])
                                    ("S3" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6045 6062])
                                    ("S4" variable (:type ("StringLiteral" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6063 6080])
                                    ("Value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6081 6089]))                                  
                                :type ("StringSwitch" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5939 6162])
                            ("Default" function
                               (:arguments 
                                  ( ("Value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6193 6201]))                                  
                                :type ("R" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6183 6274])
                            ("R" function (:type "int") (reparse-symbol classsubparts) [6304 6405]))                          )
                        (reparse-symbol namespacesubparts) [1549 6408]))                  
                :type "namespace")
                nil [790 6411]))          
      :file "StringSwitch.h"
      :pointmax 6469
      :fsize 6468
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((OPERATOR 6295 . 6303) (symbol 6278 . 6292) (symbol 6166 . 6180) (punctuation 2222 . 2223) (DEFAULT 2215 . 2222) (punctuation 2213 . 2214) (semantic-list 2210 . 2212) (symbol 2198 . 2210) (punctuation 2197 . 2198) (punctuation 2128 . 2129) (punctuation 2096 . 2097) (DELETE 2090 . 2096) (punctuation 2088 . 2089) (semantic-list 2065 . 2087) (punctuation 2064 . 2065) (OPERATOR 2056 . 2064) (punctuation 2080 . 2081) (VOID 2051 . 2055) (punctuation 2080 . 2081) (punctuation 2047 . 2048) (DELETE 2041 . 2047) (punctuation 2039 . 2040) (semantic-list 2016 . 2038) (punctuation 2015 . 2016) (OPERATOR 2007 . 2015) (VOID 2002 . 2006) (punctuation 1933 . 1934) (DELETE 1927 . 1933) (punctuation 1925 . 1926) (semantic-list 1902 . 1924) (symbol 1890 . 1902) (EXPLICIT 1792 . 1800))
      :lexical-table 
        '(("LLVM_ADT_STRINGSWITCH_H")
          )
)
    (semanticdb-table "semanticdb-table-155561171168"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_APSINT_H" variable (:constant-flag t) nil [645 662])
            ("llvm/ADT/APInt.h" include nil nil [664 691])
            ("llvm" type
               (:members 
                  ( ("APInt" variable (:type "int") (reparse-symbol namespacesubparts) [810 11204])
                    ("==" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("V1" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11229 11240])
                            ("V2" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APSInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11241 11258]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [11206 11279])
                    ("!=" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("V1" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11303 11314])
                            ("V2" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APSInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11315 11332]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [11280 11353])
                    ("<=" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("V1" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11377 11388])
                            ("V2" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APSInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11389 11406]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [11354 11427])
                    (">=" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("V1" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11451 11462])
                            ("V2" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APSInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11463 11480]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [11428 11501])
                    ("<" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("V1" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11524 11535])
                            ("V2" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APSInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11536 11553]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [11502 11573])
                    (">" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("V1" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11596 11607])
                            ("V2" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APSInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11608 11625]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [11574 11645])
                    ("<<" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("OS" variable
                               (:reference 1
                                :type ("raw_ostream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11678 11694])
                            ("I" variable
                               (:reference 1
                                :constant-flag t
                                :type ("APSInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11695 11711]))                          
                        :type ("raw_ostream" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [11647 11757])
                    ("DenseMapInfo" type
                       (:type "struct"
                        :members 
                          ( ("getEmptyKey" function
                               (:typemodifiers ("static" "inline")
                                :type ("APSInt" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11880 11981])
                            ("getTombstoneKey" function
                               (:typemodifiers ("static" "inline")
                                :type ("APSInt" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11985 12094])
                            ("getHashValue" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Key" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APSInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12127 12145]))                                  
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [12098 12208])
                            ("isEqual" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APSInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12232 12250])
                                    ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("APSInt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12251 12269]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [12212 12391]))                          
                        :template-specifier 
                          ( ("APSInt" type nil nil nil)
                            ("void" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [11830 12394]))                  
                :type "namespace")
                nil [693 12397]))          
      :file "APSInt.h"
      :pointmax 12428
      :fsize 12427
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((PUBLIC 803 . 809) (punctuation 801 . 802) (symbol 794 . 800) (symbol 779 . 793) (CLASS 773 . 778))
      :lexical-table 
        '(("LLVM_ADT_APSINT_H")
          )
)
    (semanticdb-table "semanticdb-table-155562567838"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_ILIST_BASE_H" variable (:constant-flag t) nil [409 430])
            ("llvm/ADT/ilist_node_base.h" include nil nil [432 469])
            ("cassert" include (:system-flag t) nil [470 488])
            ("llvm" type
               (:members 
                  ( ("ilist_base" type
                       (:template 
                          ( ("bool" type (:typevar "EnableSentinelTracking") nil nil))                          
                        :type "class"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [628 635])
                            ("ilist_node_base" variable (:type "int") (reparse-symbol classsubparts) [661 701])
                            ("insertBeforeImpl" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Next" variable
                                       (:reference 1
                                        :type ("node_base_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [734 755])
                                    ("N" variable
                                       (:reference 1
                                        :type ("node_base_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [756 774]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [705 912])
                            ("removeImpl" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("N" variable
                                       (:reference 1
                                        :type ("node_base_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [939 957]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [916 1206])
                            ("removeRangeImpl" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("First" variable
                                       (:reference 1
                                        :type ("node_base_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1238 1260])
                                    ("Last" variable
                                       (:reference 1
                                        :type ("node_base_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1261 1282]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [1210 1548])
                            ("transferBeforeImpl" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Next" variable
                                       (:reference 1
                                        :type ("node_base_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1583 1604])
                                    ("First" variable
                                       (:reference 1
                                        :type ("node_base_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1605 1627])
                                    ("Last" variable
                                       (:reference 1
                                        :type ("node_base_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1661 1682]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [1552 2325])
                            ("insertBefore" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("Next" variable
                                       (:reference 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2373 2381])
                                    ("N" variable
                                       (:reference 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2382 2387]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [2329 2424])
                            ("remove" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("N" variable
                                       (:reference 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2466 2471]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [2428 2490])
                            ("removeRange" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("First" variable
                                       (:reference 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2536 2545])
                                    ("Last" variable
                                       (:reference 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2546 2554]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [2493 2594])
                            ("transferBefore" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("Next" variable
                                       (:reference 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2644 2652])
                                    ("First" variable
                                       (:reference 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2653 2662])
                                    ("Last" variable
                                       (:reference 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2663 2671]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [2598 2720]))                          )
                        (reparse-symbol namespacesubparts) [570 2723]))                  
                :type "namespace")
                nil [490 2726]))          
      :file "ilist_base.h"
      :pointmax 2782
      :fsize 2781
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 659 . 660) (symbol 644 . 658) (USING 638 . 643))
      :lexical-table 
        '(("LLVM_ADT_ILIST_BASE_H")
          )
)
    (semanticdb-table "semanticdb-table-155562567888"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_ILIST_ITERATOR_H" variable (:constant-flag t) nil [413 438])
            ("llvm/ADT/ilist_node.h" include nil nil [440 472])
            ("cassert" include (:system-flag t) nil [473 491])
            ("cstddef" include (:system-flag t) nil [492 510])
            ("iterator" include (:system-flag t) nil [511 530])
            ("type_traits" include (:system-flag t) nil [531 553])
            ("llvm" type
               (:members 
                  ( ("ilist_detail" type
                       (:members 
                          ( ("IteratorTraits" type
                               (:template 
                                  ( ("OptionsT" type (:type "class") nil nil)
                                    ("bool" type (:typevar "IsConst") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [634 696])
                            ("IteratorTraits" type
                               (:template 
                                  ( ("OptionsT" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("OptionsT::value_type" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [785 815])
                                    ("OptionsT::pointer" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [834 861])
                                    ("OptionsT::reference" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [882 911]))                                  
                                :template-specifier 
                                  ( ("OptionsT" type nil nil nil)
                                    ("false" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [697 1020])
                            ("IteratorTraits" type
                               (:template 
                                  ( ("OptionsT" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("OptionsT::value_type" variable
                                       (:typemodifiers ("typename")
                                        :constant-flag t
                                        :type "int")
                                        (reparse-symbol classsubparts) [1108 1144])
                                    ("OptionsT::const_pointer" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [1163 1196])
                                    ("OptionsT::const_reference" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [1217 1252]))                                  
                                :template-specifier 
                                  ( ("OptionsT" type nil nil nil)
                                    ("true" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [1021 1373])
                            ("IteratorHelper" type
                               (:template 
                                  ( ("bool" type (:typevar "IsReverse") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [1375 1423])
                            ("IteratorHelper" type
                               (:type "struct"
                                :members 
                                  ( ("ilist_detail::NodeAccess" variable (:type "int") (reparse-symbol classsubparts) [1511 1536])
                                    ("increment" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("" variable
                                               (:pointer 1
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1581 1585])
                                            ("" variable (:type ("I" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1585 1587]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [1540 1616])
                                    ("decrement" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("" variable
                                               (:pointer 1
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1660 1664])
                                            ("" variable (:type ("I" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1664 1666]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [1619 1695]))                                  
                                :superclasses 
                                  ( ("ilist_detail::NodeAccess" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("false" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [1424 1698])
                            ("IteratorHelper" type
                               (:type "struct"
                                :members 
                                  ( ("ilist_detail::NodeAccess" variable (:type "int") (reparse-symbol classsubparts) [1785 1810])
                                    ("increment" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("" variable
                                               (:pointer 1
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1855 1859])
                                            ("" variable (:type ("I" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1859 1861]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [1814 1890])
                                    ("decrement" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("" variable
                                               (:pointer 1
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1934 1938])
                                            ("" variable (:type ("I" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1938 1940]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [1893 1969]))                                  
                                :superclasses 
                                  ( ("ilist_detail::NodeAccess" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("true" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [1699 1972]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [573 1975])
                    ("ilist_iterator" type
                       (:template 
                          ( ("OptionsT" type (:type "class") nil nil)
                            ("bool" type (:typevar "IsReverse") nil nil)
                            ("bool" type (:typevar "IsConst") nil nil))                          
                        :type "class"
                        :members 
                          ( ("ilist_detail::IteratorTraits" variable (:type "int") (reparse-symbol classsubparts) [2373 2421])
                            ("ilist_detail::SpecificNodeAccess" variable (:type "int") (reparse-symbol classsubparts) [2439 2482])
                            ("public" label nil (reparse-symbol classsubparts) [2484 2491])
                            ("Traits::value_type" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [2513 2541])
                            ("Traits::pointer" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [2560 2585])
                            ("Traits::reference" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [2606 2633])
                            ("difference_type" variable
                               (:default-value "ptrdiff_t"
                                :type "int")
                                (reparse-symbol classsubparts) [2642 2670])
                            ("std::bidirectional_iterator_tag" variable (:type "int") (reparse-symbol classsubparts) [2699 2731])
                            ("OptionsT::const_pointer" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [2756 2789])
                            ("OptionsT::const_reference" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [2816 2851])
                            ("private" label nil (reparse-symbol classsubparts) [2853 2861])
                            ("Traits::node_pointer" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [2885 2915])
                            ("Traits::node_reference" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [2941 2973])
                            ("NodePtr" variable
                               (:default-value "nullptr"
                                :type ("node_pointer" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2977 3008])
                            ("public" label nil (reparse-symbol classsubparts) [3010 3017])
                            ("ilist_iterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("N" variable (:type ("node_reference" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3077 3094]))                                  
                                :type ("ilist_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3062 3111])
                            ("ilist_iterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("NP" variable (:type ("pointer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3139 3150]))                                  
                                :type ("ilist_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3124 3187])
                            ("ilist_iterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("NR" variable (:type ("reference" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3214 3227]))                                  
                                :type ("ilist_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3199 3265])
                            ("ilist_iterator" function
                               (:template 
                                  ( ("bool" type (:typevar "RHSIsConst") nil nil))                                  
                                :type ("ilist_iterator" type (:type "class") nil nil)
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("ilist_iterator" type
                                             (:template-specifier 
                                                ( ("OptionsT" type nil nil nil)
                                                  ("IsReverse" type nil nil nil)
                                                  ("RHSIsConst" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [3450 3509])
                                    ("" variable (:type ("std::enable_if_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3527 3544])
                                    ("" variable (:type ("IsConst" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3544 3553])
                                    ("" variable (:type ("RHSIsConst" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3556 3567])
                                    ("" variable
                                       (:pointer 1
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [3568 3575])
                                    ("" variable (:type ("nullptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3578 3586]))                                  
                                :constructor-flag t)
                                (reparse-symbol classsubparts) [3406 3618])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("ilist_iterator" type
                                             (:template-specifier 
                                                ( ("OptionsT" type nil nil nil)
                                                  ("IsReverse" type nil nil nil)
                                                  ("RHSIsConst" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [3829 3888]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [3819 3939])
                            ("ilist_iterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:constant-flag t
                                        :type ("ilist_iterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4402 4423])
                                    ("" variable (:type ("OptionsT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4423 4432])
                                    ("" variable (:type ("IsReverse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4434 4444])
                                    ("" variable (:type ("IsConst" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4445 4453])
                                    ("" variable (:type ("RHS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4455 4459]))                                  
                                :type ("ilist_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4380 4505])
                            ("getReverse" function
                               (:methodconst-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [4838 5009])
                            ("getNonConst" function
                               (:methodconst-flag t
                                :type ("ilist_iterator" type
                                     (:template-specifier 
                                        ( ("OptionsT" type nil nil nil)
                                          ("IsReverse" type nil nil nil)
                                          ("false" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [5031 5377])
                            ("" function
                               (:methodconst-flag t
                                :operator-flag t
                                :function-pointer t
                                :type ("reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5399 5515])
                            ("->" function
                               (:methodconst-flag t
                                :operator-flag t
                                :type ("pointer" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5518 5569])
                            ("==" function
                               (:operator-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("ilist_iterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5622 5648])
                                    ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("ilist_iterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5649 5675]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [5599 5720])
                            ("!=" function
                               (:operator-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("ilist_iterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5746 5772])
                                    ("RHS" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("ilist_iterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5773 5799]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [5723 5844])
                            ("--" function
                               (:operator-flag t
                                :type ("ilist_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5890 6009])
                            ("++" function
                               (:operator-flag t
                                :type ("ilist_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6012 6131])
                            ("--" function
                               (:operator-flag t
                                :arguments 
                                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [6160 6164]))                                  
                                :type ("ilist_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6134 6231])
                            ("++" function
                               (:operator-flag t
                                :arguments 
                                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [6260 6264]))                                  
                                :type ("ilist_iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6234 6331])
                            ("getNodePtr" function
                               (:methodconst-flag t
                                :type ("node_pointer" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6372 6450])
                            ("isEnd" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [6521 6591]))                          
                        :superclasses 
                          ( ("ilist_detail::SpecificNodeAccess" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [2062 6594])
                    ("simplify_type" type
                       (:template 
                          ( ("From" type (:type "class") nil nil))                          
                        :type "struct"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [6596 6642])
                    ("simplify_type" type
                       (:template 
                          ( ("OptionsT" type (:type "class") nil nil)
                            ("bool" type (:typevar "IsConst") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("ilist_iterator" variable (:type "int") (reparse-symbol classsubparts) [6975 7016])
                            ("iterator::pointer" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [7038 7065])
                            ("getSimplifiedValue" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("Node" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("iterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7106 7127]))                                  
                                :type ("SimpleType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7069 7146]))                          
                        :template-specifier 
                          ( ("ilist_iterator" type (:template-specifier 
                              ( ("OptionsT" type nil nil nil)
                                ("false" type nil nil nil)
                                ("IsConst" type nil nil nil))                              ) nil nil))                          )
                        (reparse-symbol namespacesubparts) [6851 7149])
                    ("simplify_type" type
                       (:template 
                          ( ("OptionsT" type (:type "class") nil nil)
                            ("bool" type (:typevar "IsConst") nil nil))                          
                        :type "struct"
                        :superclasses 
                          ( ("simplify_type" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :template-specifier 
                          ( ("ilist_iterator" type
                               (:constant-flag t
                                :template-specifier 
                                  ( ("OptionsT" type nil nil nil)
                                    ("false" type nil nil nil)
                                    ("IsConst" type nil nil nil))                                  )
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [7150 7324]))                  
                :type "namespace")
                nil [555 7327]))          
      :file "ilist_iterator.h"
      :pointmax 7387
      :fsize 7386
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((punctuation 7036 . 7037) (symbol 7025 . 7035) (USING 7019 . 7024) (punctuation 6973 . 6974) (symbol 6964 . 6972) (USING 6958 . 6963) (punctuation 4836 . 4837) (symbol 4829 . 4836) (punctuation 4827 . 4828) (symbol 4818 . 4827) (punctuation 4817 . 4818) (punctuation 4815 . 4816) (symbol 4807 . 4815) (punctuation 4806 . 4807) (symbol 4792 . 4806) (punctuation 4454 . 4455) (punctuation 4452 . 4453) (punctuation 4433 . 4434) (punctuation 4422 . 4423) (EXPLICIT 4371 . 4379) (punctuation 3815 . 3816) (punctuation 3814 . 3815) (symbol 3799 . 3813) (punctuation 3797 . 3798) (symbol 3787 . 3797) (punctuation 3786 . 3787) (punctuation 3784 . 3785) (punctuation 3783 . 3784) (symbol 3775 . 3782) (punctuation 3774 . 3775) (symbol 3763 . 3774) (punctuation 3762 . 3763) (punctuation 3761 . 3762) (symbol 3758 . 3761) (punctuation 3754 . 3755) (symbol 3744 . 3754) (BOOL 3739 . 3743) (punctuation 3738 . 3739) (TEMPLATE 3729 . 3737) (punctuation 3576 . 3577) (punctuation 3574 . 3575) (punctuation 3555 . 3556) (punctuation 3553 . 3554) (punctuation 3552 . 3553) (punctuation 3543 . 3544) (punctuation 3294 . 3295) (DEFAULT 3287 . 3294) (punctuation 3285 . 3286) (semantic-list 3282 . 3284) (symbol 3268 . 3282) (EXPLICIT 3190 . 3198) (EXPLICIT 3115 . 3123) (EXPLICIT 3053 . 3061) (punctuation 2939 . 2940) (symbol 2924 . 2938) (USING 2918 . 2923) (punctuation 2883 . 2884) (symbol 2870 . 2882) (USING 2864 . 2869) (punctuation 2814 . 2815) (symbol 2798 . 2813) (USING 2792 . 2797) (punctuation 2754 . 2755) (symbol 2740 . 2753) (USING 2734 . 2739) (punctuation 2697 . 2698) (symbol 2679 . 2696) (USING 2673 . 2678) (USING 2636 . 2641) (punctuation 2604 . 2605) (symbol 2594 . 2603) (USING 2588 . 2593) (punctuation 2558 . 2559) (symbol 2550 . 2557) (USING 2544 . 2549) (punctuation 2511 . 2512) (symbol 2500 . 2510) (USING 2494 . 2499) (punctuation 2437 . 2438) (symbol 2430 . 2436) (USING 2424 . 2429) (punctuation 2371 . 2372) (symbol 2364 . 2370) (USING 2358 . 2363) (punctuation 2353 . 2354) (punctuation 2352 . 2353) (symbol 2345 . 2352) (punctuation 2344 . 2345) (punctuation 2342 . 2343) (symbol 2333 . 2342) (punctuation 2332 . 2333) (punctuation 2330 . 2331) (symbol 2322 . 2330) (punctuation 2321 . 2322) (symbol 2307 . 2321) (FRIEND 2300 . 2306) (punctuation 2296 . 2297) (punctuation 2295 . 2296) (symbol 2288 . 2295) (punctuation 2286 . 2287) (symbol 2277 . 2286) (punctuation 2276 . 2277) (punctuation 2274 . 2275) (symbol 2266 . 2274) (punctuation 2265 . 2266) (symbol 2251 . 2265) (FRIEND 2244 . 2250) (punctuation 2240 . 2241) (punctuation 2239 . 2240) (symbol 2232 . 2239) (punctuation 2231 . 2232) (punctuation 2229 . 2230) (symbol 2220 . 2229) (punctuation 2218 . 2219) (symbol 2210 . 2218) (punctuation 2209 . 2210) (symbol 2195 . 2209) (FRIEND 2188 . 2194) (punctuation 1937 . 1938) (punctuation 1858 . 1859) (punctuation 1783 . 1784) (symbol 1776 . 1782) (USING 1770 . 1775) (punctuation 1663 . 1664) (punctuation 1584 . 1585) (punctuation 1509 . 1510) (symbol 1502 . 1508) (USING 1496 . 1501) (punctuation 1369 . 1370) (punctuation 1368 . 1369) (punctuation 1366 . 1367) (symbol 1358 . 1366) (punctuation 1357 . 1358) (symbol 1342 . 1357) (CONST 1336 . 1341) (punctuation 1334 . 1335) (symbol 1319 . 1333) (USING 1313 . 1318) (punctuation 1309 . 1310) (punctuation 1308 . 1309) (punctuation 1306 . 1307) (symbol 1298 . 1306) (punctuation 1297 . 1298) (symbol 1282 . 1297) (CONST 1276 . 1281) (punctuation 1274 . 1275) (symbol 1261 . 1273) (USING 1255 . 1260) (punctuation 1215 . 1216) (symbol 1205 . 1214) (USING 1199 . 1204) (punctuation 1161 . 1162) (symbol 1153 . 1160) (USING 1147 . 1152) (punctuation 1106 . 1107) (symbol 1095 . 1105) (USING 1089 . 1094) (punctuation 1016 . 1017) (punctuation 1015 . 1016) (punctuation 1013 . 1014) (symbol 1005 . 1013) (punctuation 1004 . 1005) (symbol 989 . 1004) (punctuation 987 . 988) (symbol 972 . 986) (USING 966 . 971) (punctuation 962 . 963) (punctuation 961 . 962) (punctuation 959 . 960) (symbol 951 . 959) (punctuation 950 . 951) (symbol 935 . 950) (punctuation 933 . 934) (symbol 920 . 932) (USING 914 . 919) (punctuation 880 . 881) (symbol 870 . 879) (USING 864 . 869) (punctuation 832 . 833) (symbol 824 . 831) (USING 818 . 823) (punctuation 783 . 784) (symbol 772 . 782) (USING 766 . 771))
      :lexical-table 
        '(("LLVM_ADT_ILIST_ITERATOR_H")
          )
)
    (semanticdb-table "semanticdb-table-1555626fe776"
      :major-mode c++-mode
      :tags 
        '( ("LLVM_ADT_BITMASKENUM_H" variable (:constant-flag t) nil [410 432])
            ("cassert" include (:system-flag t) nil [434 452])
            ("type_traits" include (:system-flag t) nil [453 475])
            ("utility" include (:system-flag t) nil [476 494])
            ("llvm/Support/MathExtras.h" include nil nil [496 532])
            ("LLVM_MARK_AS_BITMASK_ENUM" variable (:constant-flag t) nil [1429 1454])
            ("LLVM_ENABLE_BITMASK_ENUMS_IN_NAMESPACE" variable (:constant-flag t) nil [2093 2131])
            ("llvm" type
               (:members 
                  ( ("is_bitmask_enum" type
                       (:superclasses 
                          ( ("std::false_type" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [2944 2988])
                    ("std::true_type" variable (:type "int") (reparse-symbol namespacesubparts) [3116 3134])
                    ("BitmaskEnumDetail" type
                       (:members 
                          ( ("Mask" function
                               (:template 
                                  ( ("E" type (:type "class") nil nil))                                  
                                :type ("std::underlying_type_t" type
                                     (:template-specifier 
                                        ( ("E" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol namespacesubparts) [3257 3582])
                            ("Underlying" function
                               (:template 
                                  ( ("E" type (:type "class") nil nil))                                  
                                :type ("std::underlying_type_t" type
                                     (:template-specifier 
                                        ( ("E" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("Val" variable (:type ("E" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3729 3735]))                                  )
                                (reparse-symbol namespacesubparts) [3670 3948])
                            ("bitWidth" function
                               (:arguments 
                                  ( ("Value" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3978 3993]))                                  
                                :type "unsigned int")
                                (reparse-symbol namespacesubparts) [3960 4044])
                            ("~" function
                               (:operator-flag t
                                :arguments 
                                  ( ("Val" variable (:type ("E" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4136 4142]))                                  
                                :type ("E" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [4124 4201])
                            ("|" function
                               (:operator-flag t
                                :arguments 
                                  ( ("LHS" variable (:type ("E" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4293 4299])
                                    ("RHS" variable (:type ("E" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4300 4306]))                                  
                                :type ("E" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [4281 4370])
                            ("&" function
                               (:operator-flag t
                                :arguments 
                                  ( ("LHS" variable (:type ("E" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4462 4468])
                                    ("RHS" variable (:type ("E" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4469 4475]))                                  
                                :type ("E" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [4450 4539])
                            ("^" function
                               (:operator-flag t
                                :arguments 
                                  ( ("LHS" variable (:type ("E" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4631 4637])
                                    ("RHS" variable (:type ("E" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4638 4644]))                                  
                                :type ("E" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [4619 4708])
                            ("|=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :type ("E" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4908 4915])
                                    ("RHS" variable (:type ("E" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4916 4922]))                                  
                                :type ("E" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [4894 4959])
                            ("&=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :type ("E" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5053 5060])
                                    ("RHS" variable (:type ("E" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5061 5067]))                                  
                                :type ("E" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [5039 5104])
                            ("^=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("LHS" variable
                                       (:reference 1
                                        :type ("E" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5198 5205])
                                    ("RHS" variable (:type ("E" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5206 5212]))                                  
                                :type ("E" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [5184 5249]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [3135 5252])
                    ("^=" function
                       (:prototype-flag t
                        :operator-flag t
                        :parent "llvm::BitmaskEnumDetail"
                        :type "int")
                        (reparse-symbol namespacesubparts) [5356 5397])
                    ("BitWidth" variable
                       (:default-value "BitmaskEnumDetail::bitWidth(uint64_t{
    static_cast<std::underlying_type_t<E>>(
        E::LLVM_BITMASK_LARGEST_ENUMERATOR)})"
                        :type "unsigned int")
                        (reparse-symbol namespacesubparts) [5486 5634]))                  
                :type "namespace")
                nil [2780 5637]))          
      :file "BitmaskEnum.h"
      :pointmax 5664
      :fsize 5663
      :lastmodtime '(25462 30192 0 0)
      :unmatched-syntax '((symbol 5476 . 5485) (punctuation 5474 . 5475) (punctuation 5473 . 5474) (symbol 5468 . 5473) (punctuation 5467 . 5468) (punctuation 5466 . 5467) (punctuation 5465 . 5466) (symbol 5464 . 5465) (punctuation 5463 . 5464) (symbol 5448 . 5463) (punctuation 5447 . 5448) (symbol 5436 . 5447) (punctuation 5435 . 5436) (punctuation 5434 . 5435) (symbol 5431 . 5434) (punctuation 5429 . 5430) (TYPENAME 5420 . 5428) (punctuation 5418 . 5419) (symbol 5417 . 5418) (TYPENAME 5408 . 5416) (punctuation 5407 . 5408) (TEMPLATE 5398 . 5406) (punctuation ":" 5356 . 5394) (punctuation ":" 5356 . 5394) (USING "using" 5356 . 5394) (punctuation ";" 5356 . 5394) (punctuation "=" 5356 . 5394) (punctuation "&" 5356 . 5394) (OPERATOR "operator" 5356 . 5394) (punctuation ":" 5356 . 5394) (punctuation ":" 5356 . 5394) (symbol "BitmaskEnumDetail" 5356 . 5394) (punctuation ":" 5356 . 5394) (punctuation ":" 5356 . 5394) (symbol "llvm" 5356 . 5394) (punctuation ":" 5356 . 5394) (punctuation ":" 5356 . 5394) (USING "using" 5356 . 5394) (punctuation ";" 5356 . 5394) (punctuation "=" 5356 . 5394) (punctuation "|" 5356 . 5394) (OPERATOR "operator" 5356 . 5394) (punctuation ":" 5356 . 5394) (punctuation ":" 5356 . 5394) (symbol "BitmaskEnumDetail" 5356 . 5394) (punctuation ":" 5356 . 5394) (punctuation ":" 5356 . 5394) (symbol "llvm" 5356 . 5394) (punctuation ":" 5356 . 5394) (punctuation ":" 5356 . 5394) (USING "using" 5356 . 5394) (punctuation ";" 5356 . 5394) (punctuation "^" 5356 . 5394) (OPERATOR "operator" 5356 . 5394) (punctuation ":" 5356 . 5394) (punctuation ":" 5356 . 5394) (symbol "BitmaskEnumDetail" 5356 . 5394) (punctuation ":" 5356 . 5394) (punctuation ":" 5356 . 5394) (symbol "llvm" 5356 . 5394) (punctuation ":" 5356 . 5394) (punctuation ":" 5356 . 5394) (USING "using" 5356 . 5394) (punctuation ";" 5356 . 5394) (punctuation "&" 5356 . 5394) (OPERATOR "operator" 5356 . 5394) (punctuation ":" 5356 . 5394) (punctuation ":" 5356 . 5394) (symbol "BitmaskEnumDetail" 5356 . 5394) (punctuation ":" 5356 . 5394) (punctuation ":" 5356 . 5394) (symbol "llvm" 5356 . 5394) (punctuation ":" 5356 . 5394) (punctuation ":" 5356 . 5394) (USING "using" 5356 . 5394) (punctuation ";" 5356 . 5394) (punctuation "|" 5356 . 5394) (OPERATOR "operator" 5356 . 5394) (punctuation ":" 5356 . 5394) (punctuation ":" 5356 . 5394) (symbol "BitmaskEnumDetail" 5356 . 5394) (punctuation ":" 5356 . 5394) (punctuation ":" 5356 . 5394) (symbol "llvm" 5356 . 5394) (punctuation ":" 5356 . 5394) (punctuation ":" 5356 . 5394) (USING "using" 5356 . 5394) (punctuation ";" 5356 . 5394) (punctuation "~" 5356 . 5394) (OPERATOR "operator" 5356 . 5394) (punctuation ":" 5356 . 5394) (punctuation ":" 5356 . 5394) (symbol "BitmaskEnumDetail" 5356 . 5394) (punctuation ":" 5356 . 5394) (punctuation ":" 5356 . 5394) (symbol "llvm" 5356 . 5394) (punctuation ":" 5356 . 5394) (punctuation ":" 5356 . 5394) (USING "using" 5356 . 5394) (spp-arg-list nil 5356 . 5394) (punctuation 5182 . 5183) (punctuation 5181 . 5182) (symbol 5176 . 5181) (punctuation 5175 . 5176) (punctuation 5174 . 5175) (punctuation 5173 . 5174) (symbol 5172 . 5173) (punctuation 5171 . 5172) (symbol 5156 . 5171) (punctuation 5155 . 5156) (symbol 5144 . 5155) (punctuation 5143 . 5144) (punctuation 5142 . 5143) (symbol 5139 . 5142) (punctuation 5137 . 5138) (TYPENAME 5128 . 5136) (punctuation 5126 . 5127) (symbol 5125 . 5126) (TYPENAME 5116 . 5124) (punctuation 5115 . 5116) (TEMPLATE 5106 . 5114) (punctuation 5037 . 5038) (punctuation 5036 . 5037) (symbol 5031 . 5036) (punctuation 5030 . 5031) (punctuation 5029 . 5030) (punctuation 5028 . 5029) (symbol 5027 . 5028) (punctuation 5026 . 5027) (symbol 5011 . 5026) (punctuation 5010 . 5011) (symbol 4999 . 5010) (punctuation 4998 . 4999) (punctuation 4997 . 4998) (symbol 4994 . 4997) (punctuation 4992 . 4993) (TYPENAME 4983 . 4991) (punctuation 4981 . 4982) (symbol 4980 . 4981) (TYPENAME 4971 . 4979) (punctuation 4970 . 4971) (TEMPLATE 4961 . 4969) (punctuation 4892 . 4893) (punctuation 4891 . 4892) (symbol 4886 . 4891) (punctuation 4885 . 4886) (punctuation 4884 . 4885) (punctuation 4883 . 4884) (symbol 4882 . 4883) (punctuation 4881 . 4882) (symbol 4866 . 4881) (punctuation 4865 . 4866) (symbol 4854 . 4865) (punctuation 4853 . 4854) (punctuation 4852 . 4853) (symbol 4849 . 4852) (punctuation 4847 . 4848) (TYPENAME 4838 . 4846) (punctuation 4836 . 4837) (symbol 4835 . 4836) (TYPENAME 4826 . 4834) (punctuation 4825 . 4826) (TEMPLATE 4816 . 4824) (punctuation 4617 . 4618) (punctuation 4616 . 4617) (symbol 4611 . 4616) (punctuation 4610 . 4611) (punctuation 4609 . 4610) (punctuation 4608 . 4609) (symbol 4607 . 4608) (punctuation 4606 . 4607) (symbol 4591 . 4606) (punctuation 4590 . 4591) (symbol 4579 . 4590) (punctuation 4578 . 4579) (punctuation 4577 . 4578) (symbol 4574 . 4577) (punctuation 4572 . 4573) (TYPENAME 4563 . 4571) (punctuation 4561 . 4562) (symbol 4560 . 4561) (TYPENAME 4551 . 4559) (punctuation 4550 . 4551) (TEMPLATE 4541 . 4549) (punctuation 4448 . 4449) (punctuation 4447 . 4448) (symbol 4442 . 4447) (punctuation 4441 . 4442) (punctuation 4440 . 4441) (punctuation 4439 . 4440) (symbol 4438 . 4439) (punctuation 4437 . 4438) (symbol 4422 . 4437) (punctuation 4421 . 4422) (symbol 4410 . 4421) (punctuation 4409 . 4410) (punctuation 4408 . 4409) (symbol 4405 . 4408) (punctuation 4403 . 4404) (TYPENAME 4394 . 4402) (punctuation 4392 . 4393) (symbol 4391 . 4392) (TYPENAME 4382 . 4390) (punctuation 4381 . 4382) (TEMPLATE 4372 . 4380) (punctuation 4279 . 4280) (punctuation 4278 . 4279) (symbol 4273 . 4278) (punctuation 4272 . 4273) (punctuation 4271 . 4272) (punctuation 4270 . 4271) (symbol 4269 . 4270) (punctuation 4268 . 4269) (symbol 4253 . 4268) (punctuation 4252 . 4253) (symbol 4241 . 4252) (punctuation 4240 . 4241) (punctuation 4239 . 4240) (symbol 4236 . 4239) (punctuation 4234 . 4235) (TYPENAME 4225 . 4233) (punctuation 4223 . 4224) (symbol 4222 . 4223) (TYPENAME 4213 . 4221) (punctuation 4212 . 4213) (TEMPLATE 4203 . 4211) (punctuation 4122 . 4123) (punctuation 4121 . 4122) (symbol 4116 . 4121) (punctuation 4115 . 4116) (punctuation 4114 . 4115) (punctuation 4113 . 4114) (symbol 4112 . 4113) (punctuation 4111 . 4112) (symbol 4096 . 4111) (punctuation 4095 . 4096) (symbol 4084 . 4095) (punctuation 4083 . 4084) (punctuation 4082 . 4083) (symbol 4079 . 4082) (punctuation 4077 . 4078) (TYPENAME 4068 . 4076) (punctuation 4066 . 4067) (symbol 4065 . 4066) (TYPENAME 4056 . 4064) (punctuation 4055 . 4056) (TEMPLATE 4046 . 4054) (symbol 3950 . 3959) (punctuation 3114 . 3115) (punctuation 3108 . 3109) (punctuation 3107 . 3108) (number 3106 . 3107) (punctuation 3104 . 3105) (punctuation 3103 . 3104) (semantic-list 3066 . 3102) (SIZEOF 3060 . 3066) (punctuation 3059 . 3060) (symbol 3048 . 3059) (punctuation 3047 . 3048) (punctuation 3046 . 3047) (symbol 3043 . 3046) (punctuation 3041 . 3042) (symbol 3040 . 3041) (punctuation 3034 . 3035) (symbol 3019 . 3034) (STRUCT 3012 . 3018) (punctuation 3010 . 3011) (symbol 3009 . 3010) (TYPENAME 3000 . 3008) (punctuation 2999 . 3000) (TEMPLATE 2990 . 2998) (punctuation 2942 . 2943) (VOID 2938 . 2942) (punctuation 2936 . 2937) (symbol 2929 . 2935) (TYPENAME 2920 . 2928) (punctuation 2918 . 2919) (symbol 2917 . 2918) (TYPENAME 2908 . 2916) (punctuation 2907 . 2908) (TEMPLATE 2898 . 2906))
      :lexical-table 
        '(("LLVM_ADT_BITMASKENUM_H")
          ("LLVM_MARK_AS_BITMASK_ENUM" (spp-arg-list ("LargestValue") 1454 . 1468) . 
              ((symbol "LLVM_BITMASK_LARGEST_ENUMERATOR" 1504 . 1535) (punctuation "=" 1536 . 1537) (symbol "LargestValue" 1538 . 1550)))
          ("LLVM_ENABLE_BITMASK_ENUMS_IN_NAMESPACE" (spp-arg-list nil 2131 . 2133) . 
              ((USING "using" 2168 . 2173) (punctuation ":" 2174 . 2175) (punctuation ":" 2175 . 2176) (symbol "llvm" 2176 . 2180) (punctuation ":" 2180 . 2181) (punctuation ":" 2181 . 2182) (symbol "BitmaskEnumDetail" 2182 . 2199) (punctuation ":" 2199 . 2200) (punctuation ":" 2200 . 2201) (OPERATOR "operator" 2201 . 2209) (punctuation "~" 2209 . 2210) (punctuation ";" 2210 . 2211) (USING "using" 2249 . 2254) (punctuation ":" 2255 . 2256) (punctuation ":" 2256 . 2257) (symbol "llvm" 2257 . 2261) (punctuation ":" 2261 . 2262) (punctuation ":" 2262 . 2263) (symbol "BitmaskEnumDetail" 2263 . 2280) (punctuation ":" 2280 . 2281) (punctuation ":" 2281 . 2282) (OPERATOR "operator" 2282 . 2290) (punctuation "|" 2290 . 2291) (punctuation ";" 2291 . 2292) (USING "using" 2330 . 2335) (punctuation ":" 2336 . 2337) (punctuation ":" 2337 . 2338) (symbol "llvm" 2338 . 2342) (punctuation ":" 2342 . 2343) (punctuation ":" 2343 . 2344) (symbol "BitmaskEnumDetail" 2344 . 2361) (punctuation ":" 2361 . 2362) (punctuation ":" 2362 . 2363) (OPERATOR "operator" 2363 . 2371) (punctuation "&" 2371 . 2372) (punctuation ";" 2372 . 2373) (USING "using" 2411 . 2416) (punctuation ":" 2417 . 2418) (punctuation ":" 2418 . 2419) (symbol "llvm" 2419 . 2423) (punctuation ":" 2423 . 2424) (punctuation ":" 2424 . 2425) (symbol "BitmaskEnumDetail" 2425 . 2442) (punctuation ":" 2442 . 2443) (punctuation ":" 2443 . 2444) (OPERATOR "operator" 2444 . 2452) (punctuation "^" 2452 . 2453) (punctuation ";" 2453 . 2454) (USING "using" 2492 . 2497) (punctuation ":" 2498 . 2499) (punctuation ":" 2499 . 2500) (symbol "llvm" 2500 . 2504) (punctuation ":" 2504 . 2505) (punctuation ":" 2505 . 2506) (symbol "BitmaskEnumDetail" 2506 . 2523) (punctuation ":" 2523 . 2524) (punctuation ":" 2524 . 2525) (OPERATOR "operator" 2525 . 2533) (punctuation "|" 2533 . 2534) (punctuation "=" 2534 . 2535) (punctuation ";" 2535 . 2536) (USING "using" 2573 . 2578) (punctuation ":" 2579 . 2580) (punctuation ":" 2580 . 2581) (symbol "llvm" 2581 . 2585) (punctuation ":" 2585 . 2586) (punctuation ":" 2586 . 2587) (symbol "BitmaskEnumDetail" 2587 . 2604) (punctuation ":" 2604 . 2605) (punctuation ":" 2605 . 2606) (OPERATOR "operator" 2606 . 2614) (punctuation "&" 2614 . 2615) (punctuation "=" 2615 . 2616) (punctuation ";" 2616 . 2617) (USING "using" 2735 . 2740) (punctuation ":" 2741 . 2742) (punctuation ":" 2742 . 2743) (symbol "llvm" 2743 . 2747) (punctuation ":" 2747 . 2748) (punctuation ":" 2748 . 2749) (symbol "BitmaskEnumDetail" 2749 . 2766) (punctuation ":" 2766 . 2767) (punctuation ":" 2767 . 2768) (OPERATOR "operator" 2768 . 2776) (punctuation "^" 2776 . 2777) (punctuation "=" 2777 . 2778)))
          )
))
  :file "!usr!include!llvm!ADT!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
